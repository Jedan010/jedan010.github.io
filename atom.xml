<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>杰德的博客</title>
  <subtitle>随便写写</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-10-17T10:35:40.685Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>吴杰德</name>
    <email>547054738@qq.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>1.认识数据</title>
    <link href="http://yoursite.com/2017/10/17/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E4%B9%8Bpython/1-%E8%AE%A4%E8%AF%86%E6%95%B0%E6%8D%AE/"/>
    <id>http://yoursite.com/2017/10/17/数据挖掘之python/1-认识数据/</id>
    <published>2017-10-17T10:31:10.000Z</published>
    <updated>2017-10-17T10:35:40.685Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="认识数据"><a href="#认识数据" class="headerlink" title="认识数据"></a>认识数据</h1><h2 id="数据对象与数据属性"><a href="#数据对象与数据属性" class="headerlink" title="数据对象与数据属性"></a>数据对象与数据属性</h2><p>数据是由数据对象组成，一个数据对象代表一个实体。每个数据对象都有不同特征，称为数据的属性(attribute)。</p>
<p>数据的属性包含：</p>
<ul>
<li>标称属性(nominal)：值是符号或名称，主要用于分类</li>
<li>二元属性(binary)：标称属性的一种，只有两个类别</li>
<li>序数属性(ordinal)：值的顺序或秩（rank）有意义，相继值得差未知</li>
<li>数值属性(numeric)：可度量的值<ul>
<li>区间标度(interval-scaled)：用相同单位的尺度衡量，没有真正的零点（即数值0不代表没有，代表相对情况），倍数无意义。</li>
<li>比率标度(retio-scaled)：具有固定零点的数值，倍数有意义。</li>
</ul>
</li>
</ul>
<h2 id="数据的基本统计描述"><a href="#数据的基本统计描述" class="headerlink" title="数据的基本统计描述"></a>数据的基本统计描述</h2><h3 id="中心趋势"><a href="#中心趋势" class="headerlink" title="中心趋势"></a>中心趋势</h3><p>描述数据的中心趋势的统计量主要由：均值、中位数和众数。</p>
<h4 id="均值（mean）"><a href="#均值（mean）" class="headerlink" title="均值（mean）:"></a>均值（mean）:</h4><script type="math/tex; mode=display">\bar{x} = \frac{1}{N}\sum_{i=1}^{N} x_{i} \tag{1}</script><p>加权平均： <script type="math/tex">\bar{x} = \sum_{i=1}^{N} w_ix_{i} \tag{2}</script></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 导入数据</span></div><div class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</div><div class="line">data = pd.read_excel(<span class="string">'./data/居民人均可支配收入.xlsx'</span>, index_col=<span class="number">0</span>)</div><div class="line">data.head()</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>居民人均可支配收入中位数（元）</th>
      <th>居民人均可支配收入平均数(元)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2013年第1季度</th>
      <td>4117.2</td>
      <td>5006.1</td>
    </tr>
    <tr>
      <th>2013年第2季度</th>
      <td>3606.2</td>
      <td>4043.0</td>
    </tr>
    <tr>
      <th>2013年第3季度</th>
      <td>3976.8</td>
      <td>4507.4</td>
    </tr>
    <tr>
      <th>2013年第4季度</th>
      <td>3931.9</td>
      <td>4754.3</td>
    </tr>
    <tr>
      <th>2014年第1季度</th>
      <td>4693.6</td>
      <td>5562.2</td>
    </tr>
  </tbody>
</table>
</div>




<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 计算均值</span></div><div class="line">data.mean(axis=<span class="number">0</span>)</div></pre></td></tr></table></figure>
<pre><code>居民人均可支配收入中位数（元）    4700.211111
居民人均可支配收入平均数(元)    5399.833333
dtype: float64
</code></pre><h4 id="中位数-median"><a href="#中位数-median" class="headerlink" title="中位数(median)"></a>中位数(median)</h4><p>对于非对称数据，数据中心更好的度量是中位数，中位数是有序数值的中间值。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 计算中位数</span></div><div class="line">data.median(axis=<span class="number">0</span>)</div></pre></td></tr></table></figure>
<pre><code>居民人均可支配收入中位数（元）    4726.80
居民人均可支配收入平均数(元)    5351.55
dtype: float64
</code></pre><h4 id="众数-mode"><a href="#众数-mode" class="headerlink" title="众数(mode)"></a>众数(mode)</h4><p>众数是集合中出现最频繁的值，根据最高频率对应不同的值的个数，可分为单峰(unimodal)、双峰(bimodal）等。在极端情况下，如果每个数据仅出现一次，则没有众数。</p>
<p>对于适度倾斜的单峰数据，有如下经验关系：</p>
<script type="math/tex; mode=display">mean - mode \approx 3 \times (mean - median)  \tag{3}</script><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">data.mode(axis=<span class="number">0</span>) <span class="comment">##所有数据都只出现了一次</span></div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>居民人均可支配收入中位数（元）</th>
      <th>居民人均可支配收入平均数(元)</th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>
</div>




<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> scipy.stats <span class="keyword">as</span> stats</div><div class="line"><span class="keyword">from</span> scipy.stats <span class="keyword">import</span> skewnorm</div><div class="line">fig = plt.figure(figsize=(<span class="number">16</span>,<span class="number">4</span>))</div><div class="line"></div><div class="line">ax1 = plt.subplot(<span class="number">1</span>,<span class="number">3</span>,<span class="number">1</span>)</div><div class="line">a = <span class="number">4</span></div><div class="line">x1 = np.linspace(skewnorm.ppf(<span class="number">0.0001</span>, a), skewnorm.ppf(<span class="number">0.9999</span>, a), <span class="number">100</span>)</div><div class="line">rv = skewnorm(a)</div><div class="line">ax1.plot(x1, rv.pdf(x1),  label=<span class="string">'frozen pdf'</span>)</div><div class="line">plt.xlabel(<span class="string">u'a)正倾斜数据'</span>, fontsize=<span class="number">15</span>)</div><div class="line"></div><div class="line">ax2 = plt.subplot(<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>)</div><div class="line">x2 = np.linspace( - <span class="number">3</span>,  <span class="number">3</span>, <span class="number">1000</span>)</div><div class="line">ax2.plot(x2, stats.norm.pdf(x2, <span class="number">0</span>, <span class="number">1</span>))</div><div class="line">plt.xlabel(<span class="string">u'b)对称数据'</span>, fontsize=<span class="number">15</span>)</div><div class="line"></div><div class="line">ax3 = plt.subplot(<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>)</div><div class="line">a = <span class="number">-4</span></div><div class="line">x3 = np.linspace(skewnorm.ppf(<span class="number">0.0001</span>, a), skewnorm.ppf(<span class="number">0.9999</span>, a), <span class="number">100</span>)</div><div class="line">rv = skewnorm(a)</div><div class="line">ax3.plot(x3, rv.pdf(x3),  label=<span class="string">'frozen pdf'</span>)</div><div class="line">plt.xlabel(<span class="string">u'c)负倾斜数据'</span>,  fontsize=<span class="number">15</span>)</div></pre></td></tr></table></figure>
<pre><code>&lt;matplotlib.text.Text at 0x23c391c3240&gt;
</code></pre><p><img src="/2017/10/17/数据挖掘之python/1-认识数据/output_12_1.png" alt="png"></p>
<h3 id="离散程度"><a href="#离散程度" class="headerlink" title="离散程度"></a>离散程度</h3><p>度量数据的离散程度的指标包括极差、分位数、四分位数、百分位数和四分位数极差。五数概括可以用箱线图（盒图）显示，它对于离群点的是识别是有用的。</p>
<h4 id="极差、四分位数和四分位数极差"><a href="#极差、四分位数和四分位数极差" class="headerlink" title="极差、四分位数和四分位数极差"></a>极差、四分位数和四分位数极差</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 极差(range)</span></div><div class="line">data.max() - data.min()</div></pre></td></tr></table></figure>
<pre><code>居民人均可支配收入中位数（元）    2460.8
居民人均可支配收入平均数(元)    3141.0
dtype: float64
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 第1个4分位数</span></div><div class="line">data.quantile(<span class="number">1</span>/<span class="number">4</span>)</div></pre></td></tr></table></figure>
<pre><code>居民人均可支配收入中位数（元）    4172.95
居民人均可支配收入平均数(元)    4873.00
Name: 0.25, dtype: float64
</code></pre><h5 id="四分位数极差（IQR）"><a href="#四分位数极差（IQR）" class="headerlink" title="四分位数极差（IQR）"></a>四分位数极差（IQR）</h5><script type="math/tex; mode=display">IQR = Q_3 - Q_1 \tag{4}</script><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 四分位数极差</span></div><div class="line">data.quantile(<span class="number">3</span>/<span class="number">4</span>) - data.quantile(<span class="number">1</span>/<span class="number">4</span>)</div></pre></td></tr></table></figure>
<pre><code>居民人均可支配收入中位数（元）    985.325
居民人均可支配收入平均数(元)    951.025
dtype: float64
</code></pre><h4 id="箱线图和离群点"><a href="#箱线图和离群点" class="headerlink" title="箱线图和离群点"></a>箱线图和离群点</h4><p>离群点的识别规则为：挑选落在第3个四分位数之上或第1个四分位数之下至少$1.5 \times IQR$处的值</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 箱线图</span></div><div class="line">data.boxplot()</div></pre></td></tr></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x23c39168f28&gt;
</code></pre><p><img src="/2017/10/17/数据挖掘之python/1-认识数据/output_20_1.png" alt="png"></p>
<h4 id="方差和标准差"><a href="#方差和标准差" class="headerlink" title="方差和标准差"></a>方差和标准差</h4><p>方差(variance):</p>
<script type="math/tex; mode=display">\sigma^2 = \frac{1}{N}\sum_{i=1}^{N}(x_i - \bar{x})^2 = \left ( \frac{1}{N}\sum_{i=1}^{N}x_i^2 \right )^2 - \bar{x}^2 \tag{5}</script><p>标准差(standard deviation) $\sigma$ 是方差 $\sigma^2$ 的平方根</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 方差</span></div><div class="line">data.var()</div></pre></td></tr></table></figure>
<pre><code>居民人均可支配收入中位数（元）    416851.712810
居民人均可支配收入平均数(元)    626944.210588
dtype: float64
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 标准差</span></div><div class="line">data.std()</div></pre></td></tr></table></figure>
<pre><code>居民人均可支配收入中位数（元）    645.640545
居民人均可支配收入平均数(元)    791.798087
dtype: float64
</code></pre><h3 id="数据快速统计摘要"><a href="#数据快速统计摘要" class="headerlink" title="数据快速统计摘要"></a>数据快速统计摘要</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">data.describe()</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>居民人均可支配收入中位数（元）</th>
      <th>居民人均可支配收入平均数(元)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>18.000000</td>
      <td>18.000000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>4700.211111</td>
      <td>5399.833333</td>
    </tr>
    <tr>
      <th>std</th>
      <td>645.640545</td>
      <td>791.798087</td>
    </tr>
    <tr>
      <th>min</th>
      <td>3606.200000</td>
      <td>4043.000000</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>4172.950000</td>
      <td>4873.000000</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>4726.800000</td>
      <td>5351.550000</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>5158.275000</td>
      <td>5824.025000</td>
    </tr>
    <tr>
      <th>max</th>
      <td>6067.000000</td>
      <td>7184.000000</td>
    </tr>
  </tbody>
</table>
</div>



<h2 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h2><h3 id="数据的基本统计描述的图形显示"><a href="#数据的基本统计描述的图形显示" class="headerlink" title="数据的基本统计描述的图形显示"></a>数据的基本统计描述的图形显示</h3><h4 id="分位数图-quantile-plot"><a href="#分位数图-quantile-plot" class="headerlink" title="分位数图(quantile plot)"></a>分位数图(quantile plot)</h4><p>分位数图是一种观察单变量数据分布的简单有效方法,首先显示给定属性的所有数据，其次它绘出了分数数信息。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">fig = plt.figure(figsize=(<span class="number">12</span>,<span class="number">4</span>))</div><div class="line">ax = fig.add_subplot(<span class="number">121</span>)</div><div class="line">x = data.iloc[:,<span class="number">0</span>]</div><div class="line">stats.probplot(x, plot=ax)</div><div class="line">plt.ylabel(<span class="string">u'居民人均可支配收入中位数'</span>, fontsize=<span class="number">13</span>)</div><div class="line">plt.xlabel(<span class="string">u'f 值'</span>, fontsize=<span class="number">13</span>)</div><div class="line"></div><div class="line">ax = fig.add_subplot(<span class="number">122</span>)</div><div class="line">x = data.iloc[:,<span class="number">1</span>]</div><div class="line">stats.probplot(x, plot=ax)</div><div class="line">plt.ylabel(<span class="string">u'居民人均可支配收入平均数'</span>, fontsize=<span class="number">13</span>)</div><div class="line">plt.xlabel(<span class="string">u'f 值'</span>, fontsize=<span class="number">13</span>)</div><div class="line"></div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<p><img src="/2017/10/17/数据挖掘之python/1-认识数据/output_29_0.png" alt="png"></p>
<h4 id="分位数-分位数图（Q-Q图）"><a href="#分位数-分位数图（Q-Q图）" class="headerlink" title="分位数-分位数图（Q-Q图）"></a>分位数-分位数图（Q-Q图）</h4><p>q-q图对着另一个对应的分位数，绘制一个单标量分布的分位数。它可使得用户可以观察从一个分布到另一个分布是否有漂移。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> statsmodels.api <span class="keyword">as</span> sm</div><div class="line">fig = plt.figure()</div><div class="line">ax = fig.add_subplot(<span class="number">111</span>)</div><div class="line">a = sm.qqplot_2samples(data.iloc[:,<span class="number">0</span>], data.iloc[:,<span class="number">1</span>], xlabel=<span class="string">u'居民人均可支配收入中位数'</span>, ylabel=<span class="string">u'居民人均可支配收入平均数'</span>, line=<span class="string">'r'</span> ,ax=ax)</div></pre></td></tr></table></figure>
<p><img src="/2017/10/17/数据挖掘之python/1-认识数据/output_31_0.png" alt="png"></p>
<h4 id="直方图-histogram"><a href="#直方图-histogram" class="headerlink" title="直方图(histogram)"></a>直方图(histogram)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">data.hist(bins=<span class="number">10</span>,figsize=(<span class="number">12</span>,<span class="number">4</span>))</div></pre></td></tr></table></figure>
<pre><code>array([[&lt;matplotlib.axes._subplots.AxesSubplot object at 0x0000023C3ACC5A58&gt;,
        &lt;matplotlib.axes._subplots.AxesSubplot object at 0x0000023C3AD61668&gt;]], dtype=object)
</code></pre><p><img src="/2017/10/17/数据挖掘之python/1-认识数据/output_33_1.png" alt="png"></p>
<h4 id="散点图-scatter"><a href="#散点图-scatter" class="headerlink" title="散点图(scatter)"></a>散点图(scatter)</h4><p>散点图是确定两个数值变量之间看上去是否存在联系、模式或趋势的最有效图形方法之一。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">data.plot.scatter(*data.columns)</div></pre></td></tr></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x23c39342748&gt;
</code></pre><p><img src="/2017/10/17/数据挖掘之python/1-认识数据/output_35_1.png" alt="png"></p>
<h3 id="其他可视化基本图形"><a href="#其他可视化基本图形" class="headerlink" title="其他可视化基本图形"></a>其他可视化基本图形</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">data2 = pd.read_excel(<span class="string">'.\data\各省份收入数据.xlsx'</span>, index_col=<span class="number">0</span>)</div><div class="line">data2.head()</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>工资性收入</th>
      <th>家庭性收入</th>
      <th>财产性收入</th>
      <th>转移性收入</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>北京</th>
      <td>4524.25</td>
      <td>1778.33</td>
      <td>588.04</td>
      <td>455.64</td>
    </tr>
    <tr>
      <th>天津</th>
      <td>2720.85</td>
      <td>2626.46</td>
      <td>152.88</td>
      <td>79.64</td>
    </tr>
    <tr>
      <th>河北</th>
      <td>1293.50</td>
      <td>1988.58</td>
      <td>93.74</td>
      <td>105.81</td>
    </tr>
    <tr>
      <th>山西</th>
      <td>1177.94</td>
      <td>1563.52</td>
      <td>62.70</td>
      <td>86.49</td>
    </tr>
    <tr>
      <th>内蒙古</th>
      <td>504.46</td>
      <td>2223.26</td>
      <td>73.05</td>
      <td>188.10</td>
    </tr>
  </tbody>
</table>
</div>



<h4 id="曲线图-plot"><a href="#曲线图-plot" class="headerlink" title="曲线图(plot)"></a>曲线图(plot)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">data2.plot()</div></pre></td></tr></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x23c3934b438&gt;
</code></pre><p><img src="/2017/10/17/数据挖掘之python/1-认识数据/output_39_1.png" alt="png"></p>
<h4 id="柱状图"><a href="#柱状图" class="headerlink" title="柱状图"></a>柱状图</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">data2.plot(kind=<span class="string">'bar'</span>, stacked=<span class="keyword">True</span>, color=[<span class="string">'blue'</span>,<span class="string">'gold'</span>, <span class="string">'green'</span>, <span class="string">'red'</span>], figsize=(<span class="number">10</span>,<span class="number">5</span>))</div></pre></td></tr></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x23c3aea0d68&gt;
</code></pre><p><img src="/2017/10/17/数据挖掘之python/1-认识数据/output_41_1.png" alt="png"></p>
<h4 id="面积图"><a href="#面积图" class="headerlink" title="面积图"></a>面积图</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">data2.plot.area(stacked=<span class="keyword">True</span>)</div></pre></td></tr></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x23c392ee860&gt;
</code></pre><p><img src="/2017/10/17/数据挖掘之python/1-认识数据/output_43_1.png" alt="png"></p>
<h4 id="饼图"><a href="#饼图" class="headerlink" title="饼图"></a>饼图</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">data2.plot.pie(y=data2.columns[<span class="number">0</span>], figsize=(<span class="number">10</span>,<span class="number">10</span>))</div></pre></td></tr></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x23c3b2c60f0&gt;
</code></pre><p><img src="/2017/10/17/数据挖掘之python/1-认识数据/output_45_1.png" alt="png"></p>
<h3 id="其他可视化图"><a href="#其他可视化图" class="headerlink" title="其他可视化图"></a>其他可视化图</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> stats, integrate</div><div class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ax = sns.boxplot(data=data2)</div><div class="line">ax = sns.stripplot(data=data2, jitter=<span class="keyword">True</span>, edgecolor=<span class="string">"gray"</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/10/17/数据挖掘之python/1-认识数据/output_48_0.png" alt="png"></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sns.violinplot( data=data2, size=<span class="number">6</span>)</div></pre></td></tr></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x23c3b864668&gt;
</code></pre><p><img src="/2017/10/17/数据挖掘之python/1-认识数据/output_49_1.png" alt="png"></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sns.jointplot(x=data2.columns[<span class="number">0</span>], y=data2.columns[<span class="number">1</span>], data=data2, size=<span class="number">5</span>)</div></pre></td></tr></table></figure>
<pre><code>&lt;seaborn.axisgrid.JointGrid at 0x23c3b8825f8&gt;
</code></pre><p><img src="/2017/10/17/数据挖掘之python/1-认识数据/output_50_1.png" alt="png"></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">g = sns.PairGrid(data2, hue=data2.columns[<span class="number">2</span>])</div><div class="line">g.map(plt.scatter, s=<span class="number">50</span>, edgecolor=<span class="string">"white"</span>)</div><div class="line">g.map_offdiag(plt.scatter)</div><div class="line">g.add_legend();</div></pre></td></tr></table></figure>
<p><img src="/2017/10/17/数据挖掘之python/1-认识数据/output_51_0.png" alt="png"></p>
<h2 id="数据的相异性与相似性"><a href="#数据的相异性与相似性" class="headerlink" title="数据的相异性与相似性"></a>数据的相异性与相似性</h2><p>在诸如聚类、离群点分析和最邻近分类等数据挖掘应用中，我们需要评估对象之间相互比较的相似性与相异性。相似性和相异性都称为临近性（proximity），如果两个对象$i$和$j$不相似,则它们相似性度量值为0,如果完全相似则为1。因此，我们可以构造数据的想异性矩阵，用来表示$n$个对象两两之间的邻近度。</p>
<script type="math/tex; mode=display">
\begin{bmatrix}
 0&  &  & &\\
 d(2,1)&  0&  & &\\
 d(3,1)&  d(3,2)&  0& &\\
 \vdots&  \vdots&  \vdots& &\\
 d(n,1)&  d(n,2)&  \dots& \dots&0
\end{bmatrix}
\tag{6}</script><p>其中$d(i,j)$是对象之间的想异性，一般而言，$d(i,j)$是一个非负的数值，对象$i$和$j$越接近，其值越接近0；如果越不同，该值越大。</p>
<h3 id="标称属性的临近性度量"><a href="#标称属性的临近性度量" class="headerlink" title="标称属性的临近性度量"></a>标称属性的临近性度量</h3><p>标称属性有多个状态，设其状态数目为$M$，这些状态用一组整数表示（整数只用书数据处理，不代表特定顺序）。两个对象$i$和$j$之间的相异性可以根据不匹配率来计算：</p>
<script type="math/tex; mode=display">d(i,j) = \frac{p-m}{p} \tag{7}</script><p>其中，$m$是匹配的数目，即($i$和$j$取值相同状态的属性值），而$p$是刻画对象属性总数。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">data3 = pd.DataFrame(&#123;</div><div class="line">    <span class="string">'test-1'</span>: [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'A'</span>],</div><div class="line">    <span class="string">'test-2'</span>: [<span class="string">u'优秀'</span>,<span class="string">u'一般'</span>,<span class="string">u'好'</span>,<span class="string">u'优秀'</span>],</div><div class="line">    <span class="string">'test-3'</span>: [<span class="number">45</span>, <span class="number">22</span>, <span class="number">64</span>, <span class="number">28</span>]</div><div class="line">                     &#125;)</div><div class="line">data3</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>test-1</th>
      <th>test-2</th>
      <th>test-3</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>A</td>
      <td>优秀</td>
      <td>45</td>
    </tr>
    <tr>
      <th>1</th>
      <td>B</td>
      <td>一般</td>
      <td>22</td>
    </tr>
    <tr>
      <th>2</th>
      <td>C</td>
      <td>好</td>
      <td>64</td>
    </tr>
    <tr>
      <th>3</th>
      <td>A</td>
      <td>优秀</td>
      <td>28</td>
    </tr>
  </tbody>
</table>
</div>




<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 计算test-1</span></div><div class="line">test1 = data3[<span class="string">'test-1'</span>].values</div><div class="line">dis_1 = np.zeros([len(test1), len(test1)])</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(test1)):</div><div class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(i, len(test1)):</div><div class="line">        <span class="keyword">if</span> test1[i] != test1[j]:</div><div class="line">            dis_1[j ,i] =<span class="number">1</span></div><div class="line">dis_1</div></pre></td></tr></table></figure>
<pre><code>array([[ 0.,  0.,  0.,  0.],
       [ 1.,  0.,  0.,  0.],
       [ 1.,  1.,  0.,  0.],
       [ 0.,  1.,  1.,  0.]])
</code></pre><p>我们看到除了对象1和4（$d(4,1)=0$）之外，其他都不相似。</p>
<p>相似性也可以用下式公式计算：</p>
<script type="math/tex; mode=display">sim(i,j)=1-d(i,j)=\frac{m}{p} \tag{8}</script><h3 id="二元属性的邻近性度量"><a href="#二元属性的邻近性度量" class="headerlink" title="二元属性的邻近性度量"></a>二元属性的邻近性度量</h3><p>我们考虑对称和非对称二元属性刻画对象的想异性和相似性度量。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th>1</th>
<th>0</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>q</td>
<td>r</td>
</tr>
<tr>
<td>0</td>
<td>s</td>
<td>t</td>
</tr>
</tbody>
</table>
</div>
<p>对于对对称的二元相异性，可以定义为：</p>
<script type="math/tex; mode=display">d(i,j) = \frac{r+s}{q+r+s+t} \tag{9}</script><p>对于非对称的二元相异性，可以为t是不重要的，因此可以定义为：</p>
<script type="math/tex; mode=display">d(i,j) = \frac{r+s}{q+r+s} \tag{10}</script><p>同样，我们也可以基于相似性来度两个个属性的差别，如对于非对称的二元相似性可以用下式计算：</p>
<script type="math/tex; mode=display">sim(i,j)=\frac{q}{q+r+s}= 1-d(i,j) \tag{11}</script><p>（11）式中的系数$sim(i,j)$被称为Jaccard系数，它在文献中被广泛应用。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">data4 = pd.DataFrame([[<span class="string">'M'</span>, <span class="string">'Y'</span>, <span class="string">'N'</span>, <span class="string">'P'</span>, <span class="string">'N'</span>, <span class="string">'N'</span>, <span class="string">'N'</span>],[<span class="string">'M'</span>, <span class="string">'Y'</span>, <span class="string">'Y'</span>, <span class="string">'N'</span>, <span class="string">'N'</span>, <span class="string">'N'</span>,<span class="string">'N'</span>],[<span class="string">'F'</span>, <span class="string">'Y'</span>, <span class="string">'N'</span>, <span class="string">'P'</span>, <span class="string">'N'</span>, <span class="string">'P'</span>, <span class="string">'N'</span>]])</div><div class="line">data4.columns = [<span class="string">'gender'</span>, <span class="string">'fever'</span>, <span class="string">'cough'</span>, <span class="string">'test-1'</span>,<span class="string">'test-2'</span>,<span class="string">'test-3'</span>,<span class="string">'test-4'</span>]</div><div class="line">data4.index = [<span class="string">'Jace'</span>, <span class="string">'Jim'</span>, <span class="string">'Mary'</span>]</div><div class="line">data4</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>gender</th>
      <th>fever</th>
      <th>cough</th>
      <th>test-1</th>
      <th>test-2</th>
      <th>test-3</th>
      <th>test-4</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Jace</th>
      <td>M</td>
      <td>Y</td>
      <td>N</td>
      <td>P</td>
      <td>N</td>
      <td>N</td>
      <td>N</td>
    </tr>
    <tr>
      <th>Jim</th>
      <td>M</td>
      <td>Y</td>
      <td>Y</td>
      <td>N</td>
      <td>N</td>
      <td>N</td>
      <td>N</td>
    </tr>
    <tr>
      <th>Mary</th>
      <td>F</td>
      <td>Y</td>
      <td>N</td>
      <td>P</td>
      <td>N</td>
      <td>P</td>
      <td>N</td>
    </tr>
  </tbody>
</table>
</div>




<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 转换成数值型</span></div><div class="line">label_map = &#123;<span class="string">'Y'</span>: <span class="number">1</span>, <span class="string">'N'</span>: <span class="number">0</span>, <span class="string">'P'</span>: <span class="number">1</span>&#125;</div><div class="line">data4_num = data4.copy()</div><div class="line"><span class="keyword">for</span> column <span class="keyword">in</span> data4.columns:</div><div class="line">    data4_num[column] = data4[column].map(label_map)</div><div class="line">data4_num.drop(<span class="string">'gender'</span>, axis=<span class="number">1</span>, inplace=<span class="keyword">True</span>)</div><div class="line">data4_num</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>fever</th>
      <th>cough</th>
      <th>test-1</th>
      <th>test-2</th>
      <th>test-3</th>
      <th>test-4</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Jace</th>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>Jim</th>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>Mary</th>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>




<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 调用scipy计算jaccard 相异性</span></div><div class="line"><span class="keyword">from</span> scipy.spatial.distance <span class="keyword">import</span> jaccard</div><div class="line">jaccard(data4_num.iloc[<span class="number">0</span>,:], data4_num.iloc[<span class="number">1</span>,:])</div></pre></td></tr></table></figure>
<pre><code>0.66666666666666663
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 或者使用sklearn 计算jaccard</span></div><div class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> jaccard_similarity_score</div><div class="line">jaccard_similarity_score(data4_num.iloc[<span class="number">0</span>,:], data4_num.iloc[<span class="number">1</span>,:])</div></pre></td></tr></table></figure>
<pre><code>0.66666666666666663
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 或者调用pdist计算所有jaccard</span></div><div class="line"><span class="keyword">from</span> scipy.spatial.distance <span class="keyword">import</span> pdist</div><div class="line">pdist(data4_num, metric=<span class="string">'jaccard'</span>)</div></pre></td></tr></table></figure>
<pre><code>array([ 0.66666667,  0.33333333,  0.75      ])
</code></pre><h3 id="数值属性相异性"><a href="#数值属性相异性" class="headerlink" title="数值属性相异性"></a>数值属性相异性</h3><p>计算数值属性的相异性，一般我们常用的是距离。我们最常用的距离是欧几里得距离，其他被广泛应用的距离还有：曼哈顿距离、闵可夫斯基距离。</p>
<p>距离公式都需要满足如下四个条件：</p>
<ul>
<li><strong>非负性</strong>： $d(i,j)\geqslant 0$：距离是一个非负的数值</li>
<li><strong>同一性</strong>： $d(i,j)= 0$： 对象到自身的距离为0</li>
<li><strong>对称性</strong>：  $d(i,j)= d(j,i) $：距离是一个对称的函数</li>
<li><strong>三角不等式</strong>： $d(i,j) \leqslant d(i,k) + d(k,j)$：从对象$i$到对象$j$的直接距离不会大于途经任何其他对象$k$的距离。</li>
</ul>
<p>欧几里得距离(euclidean)：<script type="math/tex">d(i,j) = \sqrt{(x_{i1}-x_{j1})^2+(x_{i2}-x_{j2})^2+\dots+(x_{in}-x_{jn})^2} \tag{12}</script></p>
<p>曼哈顿距离(Manhattan)： <script type="math/tex">d(i,j) = \left |x_{i1}-x_{j1} \right | + \left |x_{i2}-x_{j2} \right | + \dots + \left |x_{in}-x_{jn} \right | \tag{13}</script></p>
<p>闵可夫斯基距离(Minkowski):<script type="math/tex">d(i,j) = \sqrt[h]{\left |x_{i1}-x_{j1} \right |^h + \left |x_{i2}-x_{j2} \right |^h + \dots + \left |x_{in}-x_{jn} \right |^h} \tag{14}</script></p>
<p>切比雪夫距离（Chebyshev）或称上界距离（$L_{max}$）,是$L \to \infty$时闵可夫斯基距离的推广：</p>
<script type="math/tex; mode=display">d(i,j) = \lim_{h\to\infty} \left( \sum_{f=1}^{n} x_{if} - x_{jf} \right)^{\frac{1}{h}} = \max_{f}^{n}\left| x_{if}-x_{jf} \right| \tag{15}</script><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> scipy.spatial <span class="keyword">import</span> distance</div><div class="line">x1 = np.arange(<span class="number">0</span>,<span class="number">5</span>)</div><div class="line">x2 = np.arange(<span class="number">5</span>,<span class="number">10</span>)</div><div class="line">print(<span class="string">'x1:'</span>,x1)</div><div class="line">print(<span class="string">'x2:'</span>,x2)</div></pre></td></tr></table></figure>
<pre><code>x1: [0 1 2 3 4]
x2: [5 6 7 8 9]
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 欧几里德距离</span></div><div class="line">distance.euclidean(x1, x2)</div></pre></td></tr></table></figure>
<pre><code>11.180339887498949
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 闵可夫斯基距离</span></div><div class="line">distance.minkowski(x1, x2, p=<span class="number">3</span>) <span class="comment">## p=1时为曼哈顿距离 p=2时为欧几里得距离</span></div></pre></td></tr></table></figure>
<pre><code>8.5498797333834844
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 切比雪夫距离</span></div><div class="line">distance.chebyshev(x1, x2)</div></pre></td></tr></table></figure>
<pre><code>5
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">##计算矩阵的距离</span></div><div class="line"></div><div class="line"><span class="comment">## 欧几里德距离</span></div><div class="line">pdist(data4_num, metric=<span class="string">'euclidean'</span>)</div><div class="line"></div><div class="line"><span class="comment">## 闵可夫斯基距离</span></div><div class="line">pdist(data4_num, metric=<span class="string">'minkowski'</span>, p=<span class="number">5</span>) <span class="comment">## p=1时为曼哈顿距离</span></div><div class="line"></div><div class="line"><span class="comment">## 切比雪夫距离</span></div><div class="line">pdist(data4_num, metric=<span class="string">'chebyshev'</span>)</div></pre></td></tr></table></figure>
<pre><code>array([ 1.,  1.,  1.])
</code></pre><h3 id="序数属性的邻近性度量"><a href="#序数属性的邻近性度量" class="headerlink" title="序数属性的邻近性度量"></a>序数属性的邻近性度量</h3><p>序数属性的值之间具有意义的序（rank），而相继值之间的值未知。序数属性的处理与数值属性非常相似。</p>
<ol>
<li>用数值排位$1, \dots, M<em>f$取代$x</em>{if}$</li>
<li>再将数值映射到$[0,1]$区间，使得每个属性都有相同的权重:<script type="math/tex">z_{if} = \frac{r_{if} - 1}{M_f -1} \tag{16}</script></li>
<li>当成数值属性计算邻近性</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">##处理data3的test-2</span></div><div class="line">data3</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>test-1</th>
      <th>test-2</th>
      <th>test-3</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>A</td>
      <td>优秀</td>
      <td>45</td>
    </tr>
    <tr>
      <th>1</th>
      <td>B</td>
      <td>一般</td>
      <td>22</td>
    </tr>
    <tr>
      <th>2</th>
      <td>C</td>
      <td>好</td>
      <td>64</td>
    </tr>
    <tr>
      <th>3</th>
      <td>A</td>
      <td>优秀</td>
      <td>28</td>
    </tr>
  </tbody>
</table>
</div>




<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 转换成数值型</span></div><div class="line">test_2_map = &#123;<span class="string">u'优秀'</span>: <span class="number">3</span>,</div><div class="line">              <span class="string">u'好'</span>: <span class="number">2</span>,</div><div class="line">              <span class="string">u'一般'</span>:<span class="number">1</span></div><div class="line">             &#125;</div><div class="line">x = data3[<span class="string">'test-2'</span>].map(test_2_map)</div><div class="line">x</div></pre></td></tr></table></figure>
<pre><code>0    3
1    1
2    2
3    3
Name: test-2, dtype: int64
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 规范化</span></div><div class="line">x_scale = (x - <span class="number">1</span>) / (x.max() - <span class="number">1</span>)</div><div class="line">x_scale</div></pre></td></tr></table></figure>
<pre><code>0    1.0
1    0.0
2    0.5
3    1.0
Name: test-2, dtype: float64
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 计算欧几里得距离</span></div><div class="line">dis_2 = pdist(x_scale.values.reshape(<span class="number">-1</span>,<span class="number">1</span>))</div><div class="line">dis_2</div></pre></td></tr></table></figure>
<pre><code>array([ 1. ,  0.5,  0. ,  0.5,  1. ,  0.5])
</code></pre><h3 id="混合类型属性相异性"><a href="#混合类型属性相异性" class="headerlink" title="混合类型属性相异性"></a>混合类型属性相异性</h3><p>前面我么分别介绍了不同类型属性的处理方法，但是在实际中，我们数据处理的属性往往混合了不同类型的属性。我们可以分别计算每种类型属性的相异性，然后将值映射到$[0,1]$区间，再进行加权平均：</p>
<script type="math/tex; mode=display">d(i,j) = \frac{\sum_{f=1}^n\delta_{ij}^{(f)}d_{ij}^{(f)}}{\sum_{f=1}^n\delta_{ij}^{(f)}} \tag{17}</script><p>其中，如果$x<em>{if}=0$或$x</em>{jf}=0$，指示符$\delta<em>{ij}^{(f)}=0$,并且$f$是非对称的二元属性；否则$\delta</em>{ij}^{(f)}=1$。</p>
<ul>
<li>$f$是数值的：$d<em>{ij}^{(f)} = \frac{\left|x</em>{if} - x<em>{jf}\right|}{\max_hx</em>{hf} - \min<em>hx</em>{hf}}$</li>
<li>$f$是表称或二元的：如果$x<em>{if}=x</em>{jf}$,则$d<em>{ij}^{(f)}=0$；否则$d</em>{ij}^{(f)}=1$</li>
<li>$f$是序数的：计算排位$r<em>{if}$和$ z</em>{if} = \frac{r<em>{if} - 1}{M_f -1} $，并将$ z</em>{if}$当成数值属性对待</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 对data3进行处理</span></div><div class="line">data3</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>test-1</th>
      <th>test-2</th>
      <th>test-3</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>A</td>
      <td>优秀</td>
      <td>45</td>
    </tr>
    <tr>
      <th>1</th>
      <td>B</td>
      <td>一般</td>
      <td>22</td>
    </tr>
    <tr>
      <th>2</th>
      <td>C</td>
      <td>好</td>
      <td>64</td>
    </tr>
    <tr>
      <th>3</th>
      <td>A</td>
      <td>优秀</td>
      <td>28</td>
    </tr>
  </tbody>
</table>
</div>




<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dis_1</div></pre></td></tr></table></figure>
<pre><code>array([[ 0.,  0.,  0.,  0.],
       [ 1.,  0.,  0.,  0.],
       [ 1.,  1.,  0.,  0.],
       [ 0.,  1.,  1.,  0.]])
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dis_2</div></pre></td></tr></table></figure>
<pre><code>array([ 1. ,  0.5,  0. ,  0.5,  1. ,  0.5])
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 计算test-3</span></div><div class="line">dis_3 = pdist(data3[<span class="string">'test-3'</span>].values.reshape(<span class="number">-1</span>,<span class="number">1</span>),metric=<span class="string">'minkowski'</span>,p=<span class="number">1</span>) / (data3[<span class="string">'test-3'</span>].max() - data3[<span class="string">'test-3'</span>].min())</div><div class="line">dis_3</div></pre></td></tr></table></figure>
<pre><code>array([ 0.54761905,  0.45238095,  0.4047619 ,  1.        ,  0.14285714,
        0.85714286])
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 转换dis_1</span></div><div class="line">dis_1_ = np.array([<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>])</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">dis_all = np.sum((dis_1_, dis_2, dis_3), axis=<span class="number">0</span>)/ <span class="number">3</span></div><div class="line"><span class="comment">#dis_all = np.sum((dis_1_, dis_2, dis_3), axis=0)/ (2 + dis_1_)</span></div><div class="line">dis_all</div></pre></td></tr></table></figure>
<pre><code>array([ 0.84920635,  0.65079365,  0.13492063,  0.83333333,  0.71428571,
        0.78571429])
</code></pre><h3 id="余弦相似性"><a href="#余弦相似性" class="headerlink" title="余弦相似性"></a>余弦相似性</h3><p>余弦相似性是一种度量，可以用于比较文档，或针对给定的查询词向量对文档排序。令$x$和$y$是两个待比较的向量，使用余弦相似函数，我们有：</p>
<script type="math/tex; mode=display">sim(x,y) = \frac{x \cdot y}{\left\|x \right\| \left\|y\right\|}  \tag{18}</script><p>余弦值为0意味着两个向量没有匹配，余弦值越接近1，匹配程度越大。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">data5 = pd.DataFrame([[<span class="number">5</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">0</span>],[<span class="number">3</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],[<span class="number">0</span>,<span class="number">7</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">0</span>,],[<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">0</span>,]])</div><div class="line">data5.columns = [<span class="string">'team'</span>, <span class="string">'coach'</span>, <span class="string">'hocky'</span>, <span class="string">'baseball'</span>, <span class="string">'soccer'</span>, <span class="string">'penalty'</span>, <span class="string">'score'</span>, <span class="string">'win'</span>, <span class="string">'loss'</span>, <span class="string">'season'</span>]</div><div class="line">data5</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>team</th>
      <th>coach</th>
      <th>hocky</th>
      <th>baseball</th>
      <th>soccer</th>
      <th>penalty</th>
      <th>score</th>
      <th>win</th>
      <th>loss</th>
      <th>season</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>5</td>
      <td>0</td>
      <td>3</td>
      <td>0</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>3</td>
      <td>0</td>
      <td>2</td>
      <td>0</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0</td>
      <td>7</td>
      <td>0</td>
      <td>2</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>3</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>2</td>
      <td>2</td>
      <td>0</td>
      <td>3</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>




<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 计算单个余弦相似性</span></div><div class="line"><span class="number">1</span> - distance.cosine(data5.iloc[<span class="number">0</span>,:], data5.iloc[<span class="number">1</span>,:])</div></pre></td></tr></table></figure>
<pre><code>0.93560148570639967
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 计算所有余弦相似性</span></div><div class="line"><span class="number">1</span> - pdist(data5, metric=<span class="string">'cosine'</span>)</div></pre></td></tr></table></figure>
<pre><code>array([ 0.93560149,  0.15552316,  0.07079923,  0.12222647,  0.16692447,
        0.23122933])
</code></pre><h5 id="课后习题2-6"><a href="#课后习题2-6" class="headerlink" title="课后习题2.6"></a>课后习题2.6</h5><p>求 $x=(22,1,42,10)$ 和 $y=(20,0,36,8)$ 各种距离：</p>
<ul>
<li>欧几里得距离</li>
<li>曼哈顿距离</li>
<li>闵可夫斯基距离（$q=3$）</li>
<li>上确界距离</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> scipy.spatial <span class="keyword">import</span> distance</div><div class="line">x=np.array([<span class="number">22</span>,<span class="number">1</span>,<span class="number">42</span>,<span class="number">10</span>])</div><div class="line">y=np.array([<span class="number">20</span>,<span class="number">0</span>,<span class="number">36</span>,<span class="number">8</span>])</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 欧几里得距离</span></div><div class="line">distance.euclidean(x,y)</div></pre></td></tr></table></figure>
<pre><code>6.7082039324993694
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 曼哈顿距离</span></div><div class="line">distance.minkowski(x, y , p=<span class="number">1</span>)</div></pre></td></tr></table></figure>
<pre><code>11.0
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 闵可夫斯基距离(p=3)</span></div><div class="line">distance.minkowski(x, y, p=<span class="number">3</span>)</div></pre></td></tr></table></figure>
<pre><code>6.1534494936636817
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 切比雪夫上确界距离</span></div><div class="line">distance.chebyshev(x, y)</div></pre></td></tr></table></figure>
<pre><code>6
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;认识数据&quot;&gt;&lt;a href=&quot;#认识数据&quot; class=&quot;head
    
    </summary>
    
      <category term="数据挖掘之python" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E4%B9%8Bpython/"/>
    
    
      <category term="数据描述" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E6%8F%8F%E8%BF%B0/"/>
    
      <category term="数据可视化" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
      <category term="数据相似性" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E7%9B%B8%E4%BC%BC%E6%80%A7/"/>
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2017/10/17/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E4%B9%8Bpython/1-%E8%AE%A4%E8%AF%86%E6%95%B0%E6%8D%AE/1.%E8%AE%A4%E8%AF%86%E6%95%B0%E6%8D%AE/"/>
    <id>http://yoursite.com/2017/10/17/数据挖掘之python/1-认识数据/1.认识数据/</id>
    <published>2017-10-17T10:30:30.089Z</published>
    <updated>2017-10-17T10:27:24.000Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="认识数据"><a href="#认识数据" class="headerlink" title="认识数据"></a>认识数据</h1><h2 id="数据对象与数据属性"><a href="#数据对象与数据属性" class="headerlink" title="数据对象与数据属性"></a>数据对象与数据属性</h2><p>数据是由数据对象组成，一个数据对象代表一个实体。每个数据对象都有不同特征，称为数据的属性(attribute)。</p>
<p>数据的属性包含：</p>
<ul>
<li>标称属性(nominal)：值是符号或名称，主要用于分类</li>
<li>二元属性(binary)：标称属性的一种，只有两个类别</li>
<li>序数属性(ordinal)：值的顺序或秩（rank）有意义，相继值得差未知</li>
<li>数值属性(numeric)：可度量的值<ul>
<li>区间标度(interval-scaled)：用相同单位的尺度衡量，没有真正的零点（即数值0不代表没有，代表相对情况），倍数无意义。</li>
<li>比率标度(retio-scaled)：具有固定零点的数值，倍数有意义。</li>
</ul>
</li>
</ul>
<h2 id="数据的基本统计描述"><a href="#数据的基本统计描述" class="headerlink" title="数据的基本统计描述"></a>数据的基本统计描述</h2><h3 id="中心趋势"><a href="#中心趋势" class="headerlink" title="中心趋势"></a>中心趋势</h3><p>描述数据的中心趋势的统计量主要由：均值、中位数和众数。</p>
<h4 id="均值（mean）"><a href="#均值（mean）" class="headerlink" title="均值（mean）:"></a>均值（mean）:</h4><script type="math/tex; mode=display">\bar{x} = \frac{1}{N}\sum_{i=1}^{N} x_{i} \tag{1}</script><p>加权平均： <script type="math/tex">\bar{x} = \sum_{i=1}^{N} w_ix_{i} \tag{2}</script></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 导入数据</span></div><div class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</div><div class="line">data = pd.read_excel(<span class="string">'./data/居民人均可支配收入.xlsx'</span>, index_col=<span class="number">0</span>)</div><div class="line">data.head()</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>居民人均可支配收入中位数（元）</th>
      <th>居民人均可支配收入平均数(元)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2013年第1季度</th>
      <td>4117.2</td>
      <td>5006.1</td>
    </tr>
    <tr>
      <th>2013年第2季度</th>
      <td>3606.2</td>
      <td>4043.0</td>
    </tr>
    <tr>
      <th>2013年第3季度</th>
      <td>3976.8</td>
      <td>4507.4</td>
    </tr>
    <tr>
      <th>2013年第4季度</th>
      <td>3931.9</td>
      <td>4754.3</td>
    </tr>
    <tr>
      <th>2014年第1季度</th>
      <td>4693.6</td>
      <td>5562.2</td>
    </tr>
  </tbody>
</table>
</div>




<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 计算均值</span></div><div class="line">data.mean(axis=<span class="number">0</span>)</div></pre></td></tr></table></figure>
<pre><code>居民人均可支配收入中位数（元）    4700.211111
居民人均可支配收入平均数(元)    5399.833333
dtype: float64
</code></pre><h4 id="中位数-median"><a href="#中位数-median" class="headerlink" title="中位数(median)"></a>中位数(median)</h4><p>对于非对称数据，数据中心更好的度量是中位数，中位数是有序数值的中间值。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 计算中位数</span></div><div class="line">data.median(axis=<span class="number">0</span>)</div></pre></td></tr></table></figure>
<pre><code>居民人均可支配收入中位数（元）    4726.80
居民人均可支配收入平均数(元)    5351.55
dtype: float64
</code></pre><h4 id="众数-mode"><a href="#众数-mode" class="headerlink" title="众数(mode)"></a>众数(mode)</h4><p>众数是集合中出现最频繁的值，根据最高频率对应不同的值的个数，可分为单峰(unimodal)、双峰(bimodal）等。在极端情况下，如果每个数据仅出现一次，则没有众数。</p>
<p>对于适度倾斜的单峰数据，有如下经验关系：</p>
<script type="math/tex; mode=display">mean - mode \approx 3 \times (mean - median)  \tag{3}</script><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">data.mode(axis=<span class="number">0</span>) <span class="comment">##所有数据都只出现了一次</span></div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>居民人均可支配收入中位数（元）</th>
      <th>居民人均可支配收入平均数(元)</th>
    </tr>
  </thead>
  <tbody>
  </tbody>
</table>
</div>




<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> scipy.stats <span class="keyword">as</span> stats</div><div class="line"><span class="keyword">from</span> scipy.stats <span class="keyword">import</span> skewnorm</div><div class="line">fig = plt.figure(figsize=(<span class="number">16</span>,<span class="number">4</span>))</div><div class="line"></div><div class="line">ax1 = plt.subplot(<span class="number">1</span>,<span class="number">3</span>,<span class="number">1</span>)</div><div class="line">a = <span class="number">4</span></div><div class="line">x1 = np.linspace(skewnorm.ppf(<span class="number">0.0001</span>, a), skewnorm.ppf(<span class="number">0.9999</span>, a), <span class="number">100</span>)</div><div class="line">rv = skewnorm(a)</div><div class="line">ax1.plot(x1, rv.pdf(x1),  label=<span class="string">'frozen pdf'</span>)</div><div class="line">plt.xlabel(<span class="string">u'a)正倾斜数据'</span>, fontsize=<span class="number">15</span>)</div><div class="line"></div><div class="line">ax2 = plt.subplot(<span class="number">1</span>,<span class="number">3</span>,<span class="number">2</span>)</div><div class="line">x2 = np.linspace( - <span class="number">3</span>,  <span class="number">3</span>, <span class="number">1000</span>)</div><div class="line">ax2.plot(x2, stats.norm.pdf(x2, <span class="number">0</span>, <span class="number">1</span>))</div><div class="line">plt.xlabel(<span class="string">u'b)对称数据'</span>, fontsize=<span class="number">15</span>)</div><div class="line"></div><div class="line">ax3 = plt.subplot(<span class="number">1</span>,<span class="number">3</span>,<span class="number">3</span>)</div><div class="line">a = <span class="number">-4</span></div><div class="line">x3 = np.linspace(skewnorm.ppf(<span class="number">0.0001</span>, a), skewnorm.ppf(<span class="number">0.9999</span>, a), <span class="number">100</span>)</div><div class="line">rv = skewnorm(a)</div><div class="line">ax3.plot(x3, rv.pdf(x3),  label=<span class="string">'frozen pdf'</span>)</div><div class="line">plt.xlabel(<span class="string">u'c)负倾斜数据'</span>,  fontsize=<span class="number">15</span>)</div></pre></td></tr></table></figure>
<pre><code>&lt;matplotlib.text.Text at 0x23c391c3240&gt;
</code></pre><p><img src="/2017/10/17/数据挖掘之python/1-认识数据/1.认识数据/output_12_1.png" alt="png"></p>
<h3 id="离散程度"><a href="#离散程度" class="headerlink" title="离散程度"></a>离散程度</h3><p>度量数据的离散程度的指标包括极差、分位数、四分位数、百分位数和四分位数极差。五数概括可以用箱线图（盒图）显示，它对于离群点的是识别是有用的。</p>
<h4 id="极差、四分位数和四分位数极差"><a href="#极差、四分位数和四分位数极差" class="headerlink" title="极差、四分位数和四分位数极差"></a>极差、四分位数和四分位数极差</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 极差(range)</span></div><div class="line">data.max() - data.min()</div></pre></td></tr></table></figure>
<pre><code>居民人均可支配收入中位数（元）    2460.8
居民人均可支配收入平均数(元)    3141.0
dtype: float64
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 第1个4分位数</span></div><div class="line">data.quantile(<span class="number">1</span>/<span class="number">4</span>)</div></pre></td></tr></table></figure>
<pre><code>居民人均可支配收入中位数（元）    4172.95
居民人均可支配收入平均数(元)    4873.00
Name: 0.25, dtype: float64
</code></pre><h5 id="四分位数极差（IQR）"><a href="#四分位数极差（IQR）" class="headerlink" title="四分位数极差（IQR）"></a>四分位数极差（IQR）</h5><script type="math/tex; mode=display">IQR = Q_3 - Q_1 \tag{4}</script><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 四分位数极差</span></div><div class="line">data.quantile(<span class="number">3</span>/<span class="number">4</span>) - data.quantile(<span class="number">1</span>/<span class="number">4</span>)</div></pre></td></tr></table></figure>
<pre><code>居民人均可支配收入中位数（元）    985.325
居民人均可支配收入平均数(元)    951.025
dtype: float64
</code></pre><h4 id="箱线图和离群点"><a href="#箱线图和离群点" class="headerlink" title="箱线图和离群点"></a>箱线图和离群点</h4><p>离群点的识别规则为：挑选落在第3个四分位数之上或第1个四分位数之下至少$1.5 \times IQR$处的值</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 箱线图</span></div><div class="line">data.boxplot()</div></pre></td></tr></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x23c39168f28&gt;
</code></pre><p><img src="/2017/10/17/数据挖掘之python/1-认识数据/1.认识数据/output_20_1.png" alt="png"></p>
<h4 id="方差和标准差"><a href="#方差和标准差" class="headerlink" title="方差和标准差"></a>方差和标准差</h4><p>方差(variance):</p>
<script type="math/tex; mode=display">\sigma^2 = \frac{1}{N}\sum_{i=1}^{N}(x_i - \bar{x})^2 = \left ( \frac{1}{N}\sum_{i=1}^{N}x_i^2 \right )^2 - \bar{x}^2 \tag{5}</script><p>标准差(standard deviation) $\sigma$ 是方差 $\sigma^2$ 的平方根</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 方差</span></div><div class="line">data.var()</div></pre></td></tr></table></figure>
<pre><code>居民人均可支配收入中位数（元）    416851.712810
居民人均可支配收入平均数(元)    626944.210588
dtype: float64
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 标准差</span></div><div class="line">data.std()</div></pre></td></tr></table></figure>
<pre><code>居民人均可支配收入中位数（元）    645.640545
居民人均可支配收入平均数(元)    791.798087
dtype: float64
</code></pre><h3 id="数据快速统计摘要"><a href="#数据快速统计摘要" class="headerlink" title="数据快速统计摘要"></a>数据快速统计摘要</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">data.describe()</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>居民人均可支配收入中位数（元）</th>
      <th>居民人均可支配收入平均数(元)</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>18.000000</td>
      <td>18.000000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>4700.211111</td>
      <td>5399.833333</td>
    </tr>
    <tr>
      <th>std</th>
      <td>645.640545</td>
      <td>791.798087</td>
    </tr>
    <tr>
      <th>min</th>
      <td>3606.200000</td>
      <td>4043.000000</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>4172.950000</td>
      <td>4873.000000</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>4726.800000</td>
      <td>5351.550000</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>5158.275000</td>
      <td>5824.025000</td>
    </tr>
    <tr>
      <th>max</th>
      <td>6067.000000</td>
      <td>7184.000000</td>
    </tr>
  </tbody>
</table>
</div>



<h2 id="数据可视化"><a href="#数据可视化" class="headerlink" title="数据可视化"></a>数据可视化</h2><h3 id="数据的基本统计描述的图形显示"><a href="#数据的基本统计描述的图形显示" class="headerlink" title="数据的基本统计描述的图形显示"></a>数据的基本统计描述的图形显示</h3><h4 id="分位数图-quantile-plot"><a href="#分位数图-quantile-plot" class="headerlink" title="分位数图(quantile plot)"></a>分位数图(quantile plot)</h4><p>分位数图是一种观察单变量数据分布的简单有效方法,首先显示给定属性的所有数据，其次它绘出了分数数信息。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">fig = plt.figure(figsize=(<span class="number">12</span>,<span class="number">4</span>))</div><div class="line">ax = fig.add_subplot(<span class="number">121</span>)</div><div class="line">x = data.iloc[:,<span class="number">0</span>]</div><div class="line">stats.probplot(x, plot=ax)</div><div class="line">plt.ylabel(<span class="string">u'居民人均可支配收入中位数'</span>, fontsize=<span class="number">13</span>)</div><div class="line">plt.xlabel(<span class="string">u'f 值'</span>, fontsize=<span class="number">13</span>)</div><div class="line"> </div><div class="line">ax = fig.add_subplot(<span class="number">122</span>)</div><div class="line">x = data.iloc[:,<span class="number">1</span>]</div><div class="line">stats.probplot(x, plot=ax)</div><div class="line">plt.ylabel(<span class="string">u'居民人均可支配收入平均数'</span>, fontsize=<span class="number">13</span>)</div><div class="line">plt.xlabel(<span class="string">u'f 值'</span>, fontsize=<span class="number">13</span>)</div><div class="line"></div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<p><img src="/2017/10/17/数据挖掘之python/1-认识数据/1.认识数据/output_29_0.png" alt="png"></p>
<h4 id="分位数-分位数图（Q-Q图）"><a href="#分位数-分位数图（Q-Q图）" class="headerlink" title="分位数-分位数图（Q-Q图）"></a>分位数-分位数图（Q-Q图）</h4><p>q-q图对着另一个对应的分位数，绘制一个单标量分布的分位数。它可使得用户可以观察从一个分布到另一个分布是否有漂移。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> statsmodels.api <span class="keyword">as</span> sm</div><div class="line">fig = plt.figure()</div><div class="line">ax = fig.add_subplot(<span class="number">111</span>)</div><div class="line">a = sm.qqplot_2samples(data.iloc[:,<span class="number">0</span>], data.iloc[:,<span class="number">1</span>], xlabel=<span class="string">u'居民人均可支配收入中位数'</span>, ylabel=<span class="string">u'居民人均可支配收入平均数'</span>, line=<span class="string">'r'</span> ,ax=ax)</div></pre></td></tr></table></figure>
<p><img src="/2017/10/17/数据挖掘之python/1-认识数据/1.认识数据/output_31_0.png" alt="png"></p>
<h4 id="直方图-histogram"><a href="#直方图-histogram" class="headerlink" title="直方图(histogram)"></a>直方图(histogram)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">data.hist(bins=<span class="number">10</span>,figsize=(<span class="number">12</span>,<span class="number">4</span>))</div></pre></td></tr></table></figure>
<pre><code>array([[&lt;matplotlib.axes._subplots.AxesSubplot object at 0x0000023C3ACC5A58&gt;,
        &lt;matplotlib.axes._subplots.AxesSubplot object at 0x0000023C3AD61668&gt;]], dtype=object)
</code></pre><p><img src="/2017/10/17/数据挖掘之python/1-认识数据/1.认识数据/output_33_1.png" alt="png"></p>
<h4 id="散点图-scatter"><a href="#散点图-scatter" class="headerlink" title="散点图(scatter)"></a>散点图(scatter)</h4><p>散点图是确定两个数值变量之间看上去是否存在联系、模式或趋势的最有效图形方法之一。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">data.plot.scatter(*data.columns)</div></pre></td></tr></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x23c39342748&gt;
</code></pre><p><img src="/2017/10/17/数据挖掘之python/1-认识数据/1.认识数据/output_35_1.png" alt="png"></p>
<h3 id="其他可视化基本图形"><a href="#其他可视化基本图形" class="headerlink" title="其他可视化基本图形"></a>其他可视化基本图形</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">data2 = pd.read_excel(<span class="string">'.\data\各省份收入数据.xlsx'</span>, index_col=<span class="number">0</span>)</div><div class="line">data2.head()</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>工资性收入</th>
      <th>家庭性收入</th>
      <th>财产性收入</th>
      <th>转移性收入</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>北京</th>
      <td>4524.25</td>
      <td>1778.33</td>
      <td>588.04</td>
      <td>455.64</td>
    </tr>
    <tr>
      <th>天津</th>
      <td>2720.85</td>
      <td>2626.46</td>
      <td>152.88</td>
      <td>79.64</td>
    </tr>
    <tr>
      <th>河北</th>
      <td>1293.50</td>
      <td>1988.58</td>
      <td>93.74</td>
      <td>105.81</td>
    </tr>
    <tr>
      <th>山西</th>
      <td>1177.94</td>
      <td>1563.52</td>
      <td>62.70</td>
      <td>86.49</td>
    </tr>
    <tr>
      <th>内蒙古</th>
      <td>504.46</td>
      <td>2223.26</td>
      <td>73.05</td>
      <td>188.10</td>
    </tr>
  </tbody>
</table>
</div>



<h4 id="曲线图-plot"><a href="#曲线图-plot" class="headerlink" title="曲线图(plot)"></a>曲线图(plot)</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">data2.plot()</div></pre></td></tr></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x23c3934b438&gt;
</code></pre><p><img src="/2017/10/17/数据挖掘之python/1-认识数据/1.认识数据/output_39_1.png" alt="png"></p>
<h4 id="柱状图"><a href="#柱状图" class="headerlink" title="柱状图"></a>柱状图</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">data2.plot(kind=<span class="string">'bar'</span>, stacked=<span class="keyword">True</span>, color=[<span class="string">'blue'</span>,<span class="string">'gold'</span>, <span class="string">'green'</span>, <span class="string">'red'</span>], figsize=(<span class="number">10</span>,<span class="number">5</span>))</div></pre></td></tr></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x23c3aea0d68&gt;
</code></pre><p><img src="/2017/10/17/数据挖掘之python/1-认识数据/1.认识数据/output_41_1.png" alt="png"></p>
<h4 id="面积图"><a href="#面积图" class="headerlink" title="面积图"></a>面积图</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">data2.plot.area(stacked=<span class="keyword">True</span>)</div></pre></td></tr></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x23c392ee860&gt;
</code></pre><p><img src="/2017/10/17/数据挖掘之python/1-认识数据/1.认识数据/output_43_1.png" alt="png"></p>
<h4 id="饼图"><a href="#饼图" class="headerlink" title="饼图"></a>饼图</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">data2.plot.pie(y=data2.columns[<span class="number">0</span>], figsize=(<span class="number">10</span>,<span class="number">10</span>))</div></pre></td></tr></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x23c3b2c60f0&gt;
</code></pre><p><img src="/2017/10/17/数据挖掘之python/1-认识数据/1.认识数据/output_45_1.png" alt="png"></p>
<h3 id="其他可视化图"><a href="#其他可视化图" class="headerlink" title="其他可视化图"></a>其他可视化图</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> scipy <span class="keyword">import</span> stats, integrate</div><div class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ax = sns.boxplot(data=data2)</div><div class="line">ax = sns.stripplot(data=data2, jitter=<span class="keyword">True</span>, edgecolor=<span class="string">"gray"</span>)</div></pre></td></tr></table></figure>
<p><img src="/2017/10/17/数据挖掘之python/1-认识数据/1.认识数据/output_48_0.png" alt="png"></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sns.violinplot( data=data2, size=<span class="number">6</span>)</div></pre></td></tr></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x23c3b864668&gt;
</code></pre><p><img src="/2017/10/17/数据挖掘之python/1-认识数据/1.认识数据/output_49_1.png" alt="png"></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sns.jointplot(x=data2.columns[<span class="number">0</span>], y=data2.columns[<span class="number">1</span>], data=data2, size=<span class="number">5</span>)</div></pre></td></tr></table></figure>
<pre><code>&lt;seaborn.axisgrid.JointGrid at 0x23c3b8825f8&gt;
</code></pre><p><img src="/2017/10/17/数据挖掘之python/1-认识数据/1.认识数据/output_50_1.png" alt="png"></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">g = sns.PairGrid(data2, hue=data2.columns[<span class="number">2</span>])</div><div class="line">g.map(plt.scatter, s=<span class="number">50</span>, edgecolor=<span class="string">"white"</span>)</div><div class="line">g.map_offdiag(plt.scatter)</div><div class="line">g.add_legend();</div></pre></td></tr></table></figure>
<p><img src="/2017/10/17/数据挖掘之python/1-认识数据/1.认识数据/output_51_0.png" alt="png"></p>
<h2 id="数据的相异性与相似性"><a href="#数据的相异性与相似性" class="headerlink" title="数据的相异性与相似性"></a>数据的相异性与相似性</h2><p>在诸如聚类、离群点分析和最邻近分类等数据挖掘应用中，我们需要评估对象之间相互比较的相似性与相异性。相似性和相异性都称为临近性（proximity），如果两个对象$i$和$j$不相似,则它们相似性度量值为0,如果完全相似则为1。因此，我们可以构造数据的想异性矩阵，用来表示$n$个对象两两之间的邻近度。</p>
<script type="math/tex; mode=display">
\begin{bmatrix}
 0&  &  & &\\ 
 d(2,1)&  0&  & &\\ 
 d(3,1)&  d(3,2)&  0& &\\ 
 \vdots&  \vdots&  \vdots& &\\ 
 d(n,1)&  d(n,2)&  \dots& \dots&0
\end{bmatrix}
\tag{6}</script><p>其中$d(i,j)$是对象之间的想异性，一般而言，$d(i,j)$是一个非负的数值，对象$i$和$j$越接近，其值越接近0；如果越不同，该值越大。</p>
<h3 id="标称属性的临近性度量"><a href="#标称属性的临近性度量" class="headerlink" title="标称属性的临近性度量"></a>标称属性的临近性度量</h3><p>标称属性有多个状态，设其状态数目为$M$，这些状态用一组整数表示（整数只用书数据处理，不代表特定顺序）。两个对象$i$和$j$之间的相异性可以根据不匹配率来计算：</p>
<script type="math/tex; mode=display">d(i,j) = \frac{p-m}{p} \tag{7}</script><p>其中，$m$是匹配的数目，即($i$和$j$取值相同状态的属性值），而$p$是刻画对象属性总数。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">data3 = pd.DataFrame(&#123;</div><div class="line">    <span class="string">'test-1'</span>: [<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'A'</span>],</div><div class="line">    <span class="string">'test-2'</span>: [<span class="string">u'优秀'</span>,<span class="string">u'一般'</span>,<span class="string">u'好'</span>,<span class="string">u'优秀'</span>],</div><div class="line">    <span class="string">'test-3'</span>: [<span class="number">45</span>, <span class="number">22</span>, <span class="number">64</span>, <span class="number">28</span>]</div><div class="line">                     &#125;)</div><div class="line">data3</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>test-1</th>
      <th>test-2</th>
      <th>test-3</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>A</td>
      <td>优秀</td>
      <td>45</td>
    </tr>
    <tr>
      <th>1</th>
      <td>B</td>
      <td>一般</td>
      <td>22</td>
    </tr>
    <tr>
      <th>2</th>
      <td>C</td>
      <td>好</td>
      <td>64</td>
    </tr>
    <tr>
      <th>3</th>
      <td>A</td>
      <td>优秀</td>
      <td>28</td>
    </tr>
  </tbody>
</table>
</div>




<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 计算test-1</span></div><div class="line">test1 = data3[<span class="string">'test-1'</span>].values</div><div class="line">dis_1 = np.zeros([len(test1), len(test1)])</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(test1)):</div><div class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> range(i, len(test1)):</div><div class="line">        <span class="keyword">if</span> test1[i] != test1[j]:</div><div class="line">            dis_1[j ,i] =<span class="number">1</span></div><div class="line">dis_1</div></pre></td></tr></table></figure>
<pre><code>array([[ 0.,  0.,  0.,  0.],
       [ 1.,  0.,  0.,  0.],
       [ 1.,  1.,  0.,  0.],
       [ 0.,  1.,  1.,  0.]])
</code></pre><p>我们看到除了对象1和4（$d(4,1)=0$）之外，其他都不相似。</p>
<p>相似性也可以用下式公式计算：</p>
<script type="math/tex; mode=display">sim(i,j)=1-d(i,j)=\frac{m}{p} \tag{8}</script><h3 id="二元属性的邻近性度量"><a href="#二元属性的邻近性度量" class="headerlink" title="二元属性的邻近性度量"></a>二元属性的邻近性度量</h3><p>我们考虑对称和非对称二元属性刻画对象的想异性和相似性度量。</p>
<div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th>1</th>
<th>0</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>q</td>
<td>r</td>
</tr>
<tr>
<td>0</td>
<td>s</td>
<td>t</td>
</tr>
</tbody>
</table>
</div>
<p>对于对对称的二元相异性，可以定义为：</p>
<script type="math/tex; mode=display">d(i,j) = \frac{r+s}{q+r+s+t} \tag{9}</script><p>对于非对称的二元相异性，可以为t是不重要的，因此可以定义为：</p>
<script type="math/tex; mode=display">d(i,j) = \frac{r+s}{q+r+s} \tag{10}</script><p>同样，我们也可以基于相似性来度两个个属性的差别，如对于非对称的二元相似性可以用下式计算：</p>
<script type="math/tex; mode=display">sim(i,j)=\frac{q}{q+r+s}= 1-d(i,j) \tag{11}</script><p>（11）式中的系数$sim(i,j)$被称为Jaccard系数，它在文献中被广泛应用。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">data4 = pd.DataFrame([[<span class="string">'M'</span>, <span class="string">'Y'</span>, <span class="string">'N'</span>, <span class="string">'P'</span>, <span class="string">'N'</span>, <span class="string">'N'</span>, <span class="string">'N'</span>],[<span class="string">'M'</span>, <span class="string">'Y'</span>, <span class="string">'Y'</span>, <span class="string">'N'</span>, <span class="string">'N'</span>, <span class="string">'N'</span>,<span class="string">'N'</span>],[<span class="string">'F'</span>, <span class="string">'Y'</span>, <span class="string">'N'</span>, <span class="string">'P'</span>, <span class="string">'N'</span>, <span class="string">'P'</span>, <span class="string">'N'</span>]])</div><div class="line">data4.columns = [<span class="string">'gender'</span>, <span class="string">'fever'</span>, <span class="string">'cough'</span>, <span class="string">'test-1'</span>,<span class="string">'test-2'</span>,<span class="string">'test-3'</span>,<span class="string">'test-4'</span>]</div><div class="line">data4.index = [<span class="string">'Jace'</span>, <span class="string">'Jim'</span>, <span class="string">'Mary'</span>]</div><div class="line">data4</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>gender</th>
      <th>fever</th>
      <th>cough</th>
      <th>test-1</th>
      <th>test-2</th>
      <th>test-3</th>
      <th>test-4</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Jace</th>
      <td>M</td>
      <td>Y</td>
      <td>N</td>
      <td>P</td>
      <td>N</td>
      <td>N</td>
      <td>N</td>
    </tr>
    <tr>
      <th>Jim</th>
      <td>M</td>
      <td>Y</td>
      <td>Y</td>
      <td>N</td>
      <td>N</td>
      <td>N</td>
      <td>N</td>
    </tr>
    <tr>
      <th>Mary</th>
      <td>F</td>
      <td>Y</td>
      <td>N</td>
      <td>P</td>
      <td>N</td>
      <td>P</td>
      <td>N</td>
    </tr>
  </tbody>
</table>
</div>




<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 转换成数值型</span></div><div class="line">label_map = &#123;<span class="string">'Y'</span>: <span class="number">1</span>, <span class="string">'N'</span>: <span class="number">0</span>, <span class="string">'P'</span>: <span class="number">1</span>&#125;</div><div class="line">data4_num = data4.copy()</div><div class="line"><span class="keyword">for</span> column <span class="keyword">in</span> data4.columns:</div><div class="line">    data4_num[column] = data4[column].map(label_map) </div><div class="line">data4_num.drop(<span class="string">'gender'</span>, axis=<span class="number">1</span>, inplace=<span class="keyword">True</span>)</div><div class="line">data4_num</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>fever</th>
      <th>cough</th>
      <th>test-1</th>
      <th>test-2</th>
      <th>test-3</th>
      <th>test-4</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>Jace</th>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>Jim</th>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>Mary</th>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>




<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 调用scipy计算jaccard 相异性</span></div><div class="line"><span class="keyword">from</span> scipy.spatial.distance <span class="keyword">import</span> jaccard</div><div class="line">jaccard(data4_num.iloc[<span class="number">0</span>,:], data4_num.iloc[<span class="number">1</span>,:])</div></pre></td></tr></table></figure>
<pre><code>0.66666666666666663
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 或者使用sklearn 计算jaccard</span></div><div class="line"><span class="keyword">from</span> sklearn.metrics <span class="keyword">import</span> jaccard_similarity_score</div><div class="line">jaccard_similarity_score(data4_num.iloc[<span class="number">0</span>,:], data4_num.iloc[<span class="number">1</span>,:])</div></pre></td></tr></table></figure>
<pre><code>0.66666666666666663
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 或者调用pdist计算所有jaccard</span></div><div class="line"><span class="keyword">from</span> scipy.spatial.distance <span class="keyword">import</span> pdist</div><div class="line">pdist(data4_num, metric=<span class="string">'jaccard'</span>)</div></pre></td></tr></table></figure>
<pre><code>array([ 0.66666667,  0.33333333,  0.75      ])
</code></pre><h3 id="数值属性相异性"><a href="#数值属性相异性" class="headerlink" title="数值属性相异性"></a>数值属性相异性</h3><p>计算数值属性的相异性，一般我们常用的是距离。我们最常用的距离是欧几里得距离，其他被广泛应用的距离还有：曼哈顿距离、闵可夫斯基距离。</p>
<p>距离公式都需要满足如下四个条件：</p>
<ul>
<li><strong>非负性</strong>： $d(i,j)\geqslant 0$：距离是一个非负的数值</li>
<li><strong>同一性</strong>： $d(i,j)= 0$： 对象到自身的距离为0</li>
<li><strong>对称性</strong>：  $d(i,j)= d(j,i) $：距离是一个对称的函数</li>
<li><strong>三角不等式</strong>： $d(i,j) \leqslant d(i,k) + d(k,j)$：从对象$i$到对象$j$的直接距离不会大于途经任何其他对象$k$的距离。</li>
</ul>
<p>欧几里得距离(euclidean)：<script type="math/tex">d(i,j) = \sqrt{(x_{i1}-x_{j1})^2+(x_{i2}-x_{j2})^2+\dots+(x_{in}-x_{jn})^2} \tag{12}</script></p>
<p>曼哈顿距离(Manhattan)： <script type="math/tex">d(i,j) = \left |x_{i1}-x_{j1} \right | + \left |x_{i2}-x_{j2} \right | + \dots + \left |x_{in}-x_{jn} \right | \tag{13}</script></p>
<p>闵可夫斯基距离(Minkowski):<script type="math/tex">d(i,j) = \sqrt[h]{\left |x_{i1}-x_{j1} \right |^h + \left |x_{i2}-x_{j2} \right |^h + \dots + \left |x_{in}-x_{jn} \right |^h} \tag{14}</script></p>
<p>切比雪夫距离（Chebyshev）或称上界距离（$L_{max}$）,是$L \to \infty$时闵可夫斯基距离的推广：</p>
<script type="math/tex; mode=display">d(i,j) = \lim_{h\to\infty} \left( \sum_{f=1}^{n} x_{if} - x_{jf} \right)^{\frac{1}{h}} = \max_{f}^{n}\left| x_{if}-x_{jf} \right| \tag{15}</script><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> scipy.spatial <span class="keyword">import</span> distance</div><div class="line">x1 = np.arange(<span class="number">0</span>,<span class="number">5</span>)</div><div class="line">x2 = np.arange(<span class="number">5</span>,<span class="number">10</span>)</div><div class="line">print(<span class="string">'x1:'</span>,x1)</div><div class="line">print(<span class="string">'x2:'</span>,x2)</div></pre></td></tr></table></figure>
<pre><code>x1: [0 1 2 3 4]
x2: [5 6 7 8 9]
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 欧几里德距离</span></div><div class="line">distance.euclidean(x1, x2)</div></pre></td></tr></table></figure>
<pre><code>11.180339887498949
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 闵可夫斯基距离</span></div><div class="line">distance.minkowski(x1, x2, p=<span class="number">3</span>) <span class="comment">## p=1时为曼哈顿距离 p=2时为欧几里得距离</span></div></pre></td></tr></table></figure>
<pre><code>8.5498797333834844
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 切比雪夫距离</span></div><div class="line">distance.chebyshev(x1, x2)</div></pre></td></tr></table></figure>
<pre><code>5
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">##计算矩阵的距离</span></div><div class="line"></div><div class="line"><span class="comment">## 欧几里德距离</span></div><div class="line">pdist(data4_num, metric=<span class="string">'euclidean'</span>)</div><div class="line"></div><div class="line"><span class="comment">## 闵可夫斯基距离</span></div><div class="line">pdist(data4_num, metric=<span class="string">'minkowski'</span>, p=<span class="number">5</span>) <span class="comment">## p=1时为曼哈顿距离</span></div><div class="line"></div><div class="line"><span class="comment">## 切比雪夫距离</span></div><div class="line">pdist(data4_num, metric=<span class="string">'chebyshev'</span>)</div></pre></td></tr></table></figure>
<pre><code>array([ 1.,  1.,  1.])
</code></pre><h3 id="序数属性的邻近性度量"><a href="#序数属性的邻近性度量" class="headerlink" title="序数属性的邻近性度量"></a>序数属性的邻近性度量</h3><p>序数属性的值之间具有意义的序（rank），而相继值之间的值未知。序数属性的处理与数值属性非常相似。</p>
<ol>
<li>用数值排位$1, \dots, M<em>f$取代$x</em>{if}$</li>
<li>再将数值映射到$[0,1]$区间，使得每个属性都有相同的权重:<script type="math/tex">z_{if} = \frac{r_{if} - 1}{M_f -1} \tag{16}</script></li>
<li>当成数值属性计算邻近性</li>
</ol>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">##处理data3的test-2</span></div><div class="line">data3</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>test-1</th>
      <th>test-2</th>
      <th>test-3</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>A</td>
      <td>优秀</td>
      <td>45</td>
    </tr>
    <tr>
      <th>1</th>
      <td>B</td>
      <td>一般</td>
      <td>22</td>
    </tr>
    <tr>
      <th>2</th>
      <td>C</td>
      <td>好</td>
      <td>64</td>
    </tr>
    <tr>
      <th>3</th>
      <td>A</td>
      <td>优秀</td>
      <td>28</td>
    </tr>
  </tbody>
</table>
</div>




<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 转换成数值型</span></div><div class="line">test_2_map = &#123;<span class="string">u'优秀'</span>: <span class="number">3</span>,</div><div class="line">              <span class="string">u'好'</span>: <span class="number">2</span>,</div><div class="line">              <span class="string">u'一般'</span>:<span class="number">1</span></div><div class="line">             &#125;</div><div class="line">x = data3[<span class="string">'test-2'</span>].map(test_2_map)</div><div class="line">x</div></pre></td></tr></table></figure>
<pre><code>0    3
1    1
2    2
3    3
Name: test-2, dtype: int64
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 规范化</span></div><div class="line">x_scale = (x - <span class="number">1</span>) / (x.max() - <span class="number">1</span>)</div><div class="line">x_scale</div></pre></td></tr></table></figure>
<pre><code>0    1.0
1    0.0
2    0.5
3    1.0
Name: test-2, dtype: float64
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 计算欧几里得距离</span></div><div class="line">dis_2 = pdist(x_scale.values.reshape(<span class="number">-1</span>,<span class="number">1</span>))</div><div class="line">dis_2</div></pre></td></tr></table></figure>
<pre><code>array([ 1. ,  0.5,  0. ,  0.5,  1. ,  0.5])
</code></pre><h3 id="混合类型属性相异性"><a href="#混合类型属性相异性" class="headerlink" title="混合类型属性相异性"></a>混合类型属性相异性</h3><p>前面我么分别介绍了不同类型属性的处理方法，但是在实际中，我们数据处理的属性往往混合了不同类型的属性。我们可以分别计算每种类型属性的相异性，然后将值映射到$[0,1]$区间，再进行加权平均：</p>
<script type="math/tex; mode=display">d(i,j) = \frac{\sum_{f=1}^n\delta_{ij}^{(f)}d_{ij}^{(f)}}{\sum_{f=1}^n\delta_{ij}^{(f)}} \tag{17}</script><p>其中，如果$x<em>{if}=0$或$x</em>{jf}=0$，指示符$\delta<em>{ij}^{(f)}=0$,并且$f$是非对称的二元属性；否则$\delta</em>{ij}^{(f)}=1$。</p>
<ul>
<li>$f$是数值的：$d<em>{ij}^{(f)} = \frac{\left|x</em>{if} - x<em>{jf}\right|}{\max_hx</em>{hf} - \min<em>hx</em>{hf}}$</li>
<li>$f$是表称或二元的：如果$x<em>{if}=x</em>{jf}$,则$d<em>{ij}^{(f)}=0$；否则$d</em>{ij}^{(f)}=1$</li>
<li>$f$是序数的：计算排位$r<em>{if}$和$ z</em>{if} = \frac{r<em>{if} - 1}{M_f -1} $，并将$ z</em>{if}$当成数值属性对待</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 对data3进行处理</span></div><div class="line">data3</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>test-1</th>
      <th>test-2</th>
      <th>test-3</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>A</td>
      <td>优秀</td>
      <td>45</td>
    </tr>
    <tr>
      <th>1</th>
      <td>B</td>
      <td>一般</td>
      <td>22</td>
    </tr>
    <tr>
      <th>2</th>
      <td>C</td>
      <td>好</td>
      <td>64</td>
    </tr>
    <tr>
      <th>3</th>
      <td>A</td>
      <td>优秀</td>
      <td>28</td>
    </tr>
  </tbody>
</table>
</div>




<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dis_1</div></pre></td></tr></table></figure>
<pre><code>array([[ 0.,  0.,  0.,  0.],
       [ 1.,  0.,  0.,  0.],
       [ 1.,  1.,  0.,  0.],
       [ 0.,  1.,  1.,  0.]])
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dis_2</div></pre></td></tr></table></figure>
<pre><code>array([ 1. ,  0.5,  0. ,  0.5,  1. ,  0.5])
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 计算test-3</span></div><div class="line">dis_3 = pdist(data3[<span class="string">'test-3'</span>].values.reshape(<span class="number">-1</span>,<span class="number">1</span>),metric=<span class="string">'minkowski'</span>,p=<span class="number">1</span>) / (data3[<span class="string">'test-3'</span>].max() - data3[<span class="string">'test-3'</span>].min())</div><div class="line">dis_3</div></pre></td></tr></table></figure>
<pre><code>array([ 0.54761905,  0.45238095,  0.4047619 ,  1.        ,  0.14285714,
        0.85714286])
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 转换dis_1</span></div><div class="line">dis_1_ = np.array([<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>])</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">dis_all = np.sum((dis_1_, dis_2, dis_3), axis=<span class="number">0</span>)/ <span class="number">3</span></div><div class="line"><span class="comment">#dis_all = np.sum((dis_1_, dis_2, dis_3), axis=0)/ (2 + dis_1_)</span></div><div class="line">dis_all</div></pre></td></tr></table></figure>
<pre><code>array([ 0.84920635,  0.65079365,  0.13492063,  0.83333333,  0.71428571,
        0.78571429])
</code></pre><h3 id="余弦相似性"><a href="#余弦相似性" class="headerlink" title="余弦相似性"></a>余弦相似性</h3><p>余弦相似性是一种度量，可以用于比较文档，或针对给定的查询词向量对文档排序。令$x$和$y$是两个待比较的向量，使用余弦相似函数，我们有：</p>
<script type="math/tex; mode=display">sim(x,y) = \frac{x \cdot y}{\left\|x \right\| \left\|y\right\|}  \tag{18}</script><p>余弦值为0意味着两个向量没有匹配，余弦值越接近1，匹配程度越大。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">data5 = pd.DataFrame([[<span class="number">5</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">0</span>],[<span class="number">3</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],[<span class="number">0</span>,<span class="number">7</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">0</span>,<span class="number">0</span>,],[<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="number">0</span>,]])</div><div class="line">data5.columns = [<span class="string">'team'</span>, <span class="string">'coach'</span>, <span class="string">'hocky'</span>, <span class="string">'baseball'</span>, <span class="string">'soccer'</span>, <span class="string">'penalty'</span>, <span class="string">'score'</span>, <span class="string">'win'</span>, <span class="string">'loss'</span>, <span class="string">'season'</span>]</div><div class="line">data5</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>team</th>
      <th>coach</th>
      <th>hocky</th>
      <th>baseball</th>
      <th>soccer</th>
      <th>penalty</th>
      <th>score</th>
      <th>win</th>
      <th>loss</th>
      <th>season</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>5</td>
      <td>0</td>
      <td>3</td>
      <td>0</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
      <td>2</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>1</th>
      <td>3</td>
      <td>0</td>
      <td>2</td>
      <td>0</td>
      <td>1</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>1</td>
    </tr>
    <tr>
      <th>2</th>
      <td>0</td>
      <td>7</td>
      <td>0</td>
      <td>2</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>3</td>
      <td>0</td>
      <td>0</td>
    </tr>
    <tr>
      <th>3</th>
      <td>0</td>
      <td>1</td>
      <td>0</td>
      <td>0</td>
      <td>1</td>
      <td>2</td>
      <td>2</td>
      <td>0</td>
      <td>3</td>
      <td>0</td>
    </tr>
  </tbody>
</table>
</div>




<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 计算单个余弦相似性</span></div><div class="line"><span class="number">1</span> - distance.cosine(data5.iloc[<span class="number">0</span>,:], data5.iloc[<span class="number">1</span>,:])</div></pre></td></tr></table></figure>
<pre><code>0.93560148570639967
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 计算所有余弦相似性</span></div><div class="line"><span class="number">1</span> - pdist(data5, metric=<span class="string">'cosine'</span>)</div></pre></td></tr></table></figure>
<pre><code>array([ 0.93560149,  0.15552316,  0.07079923,  0.12222647,  0.16692447,
        0.23122933])
</code></pre><h5 id="课后习题2-6"><a href="#课后习题2-6" class="headerlink" title="课后习题2.6"></a>课后习题2.6</h5><p>求 $x=(22,1,42,10)$ 和 $y=(20,0,36,8)$ 各种距离：</p>
<ul>
<li>欧几里得距离</li>
<li>曼哈顿距离</li>
<li>闵可夫斯基距离（$q=3$）</li>
<li>上确界距离</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> scipy.spatial <span class="keyword">import</span> distance </div><div class="line">x=np.array([<span class="number">22</span>,<span class="number">1</span>,<span class="number">42</span>,<span class="number">10</span>])</div><div class="line">y=np.array([<span class="number">20</span>,<span class="number">0</span>,<span class="number">36</span>,<span class="number">8</span>])</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 欧几里得距离</span></div><div class="line">distance.euclidean(x,y)</div></pre></td></tr></table></figure>
<pre><code>6.7082039324993694
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 曼哈顿距离</span></div><div class="line">distance.minkowski(x, y , p=<span class="number">1</span>)</div></pre></td></tr></table></figure>
<pre><code>11.0
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 闵可夫斯基距离(p=3)</span></div><div class="line">distance.minkowski(x, y, p=<span class="number">3</span>)</div></pre></td></tr></table></figure>
<pre><code>6.1534494936636817
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 切比雪夫上确界距离</span></div><div class="line">distance.chebyshev(x, y)</div></pre></td></tr></table></figure>
<pre><code>6
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;认识数据&quot;&gt;&lt;a href=&quot;#认识数据&quot; class=&quot;head
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Market manipulation detection based on Classification methods</title>
    <link href="http://yoursite.com/2017/10/14/%E8%AE%BA%E6%96%87/Market%20manipulation%20detection%20based%20on%20Classification%20methods/"/>
    <id>http://yoursite.com/2017/10/14/论文/Market manipulation detection based on Classification methods/</id>
    <published>2017-10-14T08:42:11.047Z</published>
    <updated>2017-10-14T08:42:11.047Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p><strong>Abstract</strong><br>In this paper, we use supervised machine learning methods to detect the market manipulation in China based on the information released by China Securities Regulation Commission (CSRC). For the supervised machine learning, we mainly use classified method to detect the anomaly from the daily and tick trading data of manipulated stocks. As a result, we find that the supervised machine learning method are good at detecting market manipulation from daily trading data and have poor performance of tick data. The best used supervised machine learning models are K-nearest neighbor (KNN) and Decision Tree classifier (DTC) which have over 99% of accuracy, sensitivity, specificity and area under the curve (AUC).</p>
<h1 id="1-Introduction"><a href="#1-Introduction" class="headerlink" title="1. Introduction"></a>1. Introduction</h1><p>arket manipulation is a deliberate attempt to intervene in  the free and fair operation of the market and create artificial, false or misleading appearances with respect to price of security <sup id="fnref:1"><a href="#fn:1" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="T. C. Lin, The new market manipulation
">[1]</span></a></sup>. Market manipulation, broadly defined, has existed since the infancy of financial markets <sup id="fnref:2"><a href="#fn:2" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="J. W. Markham, Law enforcement and the history of financial market manipulation, ME Sharpe, 2013.
">[2]</span></a></sup>, which has become an import issue of emerging and developed market. Manipulated security market not only distorts the prices and transactions in the security market, but also undermines the function of security market. What’s more, many investors would lose significantly because of most manipulators making illegal profit.</p>
<p>There has been increasing research on data mining techniques in detecting market manipulation. Allen and Gale<sup id="fnref:3"><a href="#fn:3" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="F. Allen, D. Gale, Stock-price manipulation, The Review of Financial Studies (1992) 503–529
">[3]</span></a></sup>classify manipulation as action-based manipulation, information based manipulation, and trade-based manipulation. We study the trade-based manipulation that a trader attempting to manipulate a stock price simply by buying and then selling (or vice versa), without releasing any false information or taking any other publicly observable actions designed to alter the value of security , by using supervised and unsupervised machine learning methods. Based on information about the manipulated stocks from China Securities Regulation Commission (CSRC). We obtain daily stock data and tick stock data of 64 manipulated stocks published in CSRC website. We use those data to train the supervised machine learning models, K-Nearest Neighbors (KNN), Support Vector Machines (SVM), Decision Tree Learning (DTL), Linear Discriminant Analysis (LDA), Quadratic Discriminant Analysis (QDA), Logistic Regression (LR), Artificial Neural Networks (ANN), so when the sample data set is given, they can classify the manipulated period and the normal period.</p>
<p>Currently, most scholars’ study of detecting market manipulation is theoretical and pattern description which is still hard to accurately and fast detect market manipulation. To increase the possibility and efficiency of detecting market manipulation, we apply supervised machine learning models to detect market manipulation in real time, which might undermine the extent to those individual investors losing money in trading the manipulated stocks. By collecting historical stock data, it is also very helpful for regulator to train the supervised machine learning models and detect the market manipulation.</p>
<p>This paper is organized as follows: Section 2 summarizes the main result of prior study. Section 3 and Section 4 give information about supervised machine learning models. Empirical analysis and data are presented in Section 4. Section 5 has our conclusion and some future works.</p>
<h1 id="2-Literature-Review"><a href="#2-Literature-Review" class="headerlink" title="2. Literature Review"></a>2. Literature Review</h1><p>Allen and Gale (1992)<sup id="fnref:3"><a href="#fn:3" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="F. Allen, D. Gale, Stock-price manipulation, The Review of Financial Studies (1992) 503–529
">[3]</span></a></sup> and Jarrow (1992)<sup id="fnref:4"><a href="#fn:4" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="R. A. Jarrow, Market manipulation, bubbles, corners, and short squeezes, Journal of financial and Quantitative Analysis 27 (3) (1992)
311–336.
">[4]</span></a></sup> were the first researchers to study manipulation. After studying the history of stock-price manipulation, Allen and Gale classified the manipulation as action-based manipulation, information-based manipulation and trade-based manipulation<sup id="fnref:3"><a href="#fn:3" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="F. Allen, D. Gale, Stock-price manipulation, The Review of Financial Studies (1992) 503–529
">[3]</span></a></sup>. They define trade-based manipulation as manipulating stocks through actual trading or trading orders by distorting stock market prices, rather than changing company values or issuing false information. In a dynamic model of asset markets, by investigating large traders’ manipulation of trading strategies in the securities market, Jarrow found that large investors have a greater impact on stock prices<sup id="fnref:4"><a href="#fn:4" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="R. A. Jarrow, Market manipulation, bubbles, corners, and short squeezes, Journal of financial and Quantitative Analysis 27 (3) (1992)
311–336.
">[4]</span></a></sup>. Carhart and Reed (2002)<sup id="fnref:5"><a href="#fn:5" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="M. M. Carhart, R. Kaniel, D. K. Musto, A. V. Reed, Leaning for the tape: Evidence of gaming behavior in equity mutual funds, The
Journal of Finance 57 (2) (2002) 661–693.
">[5]</span></a></sup> found that a large trader can manipulate the market where without derivative securities by cornering the market or lure the market to “manipulate” their own trades. And he develop a theory for option pricing in an economy with a larger trader showing that the standard option pricing models holds, but with a random “volatility” price process. Hanson and Oprea (2004)<sup id="fnref:6"><a href="#fn:6" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="R. Hanson, R. Oprea, Manipulators increase information market accuracy, George Mason University.
">[6]</span></a></sup> developed an experimental model to study whether the manipulators could distort the prices in a prediction market.</p>
<p>Some researchers have attempted to detect manipulation in different methods. Aggarwal and Wu (2003)<sup id="fnref:7"><a href="#fn:7" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="R. K. Aggarwal, G. Wu, Stock market manipulation-theory and evidence.
">[7]</span></a></sup> studied The US stock market from 1990 to 2001 to detect market manipulation and found that the manipulated stock had abnormal stock prices, liquidity, volatility and return. H.Ogut and Aktas (2009)<sup id="fnref:8"><a href="#fn:8" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="H. O gut, M. M. Do  ganay, R. Aktas, Detecting stock-price manipulation in an emerging market: The case of Turkey, Expert Systems ˇ
with Applications 36 (9) (2009) 11944–11949.
">[8]</span></a></sup> compared the performance of Artificial Neural Networks (ANN) and Support Vector Machine (SVM) with discriminant analysis and logistics regression on detecting the market manipulation and found that data mining techniques were better than multivariate techniques. According to Mongkolnavin and Tirapat (2009)<sup id="fnref:9"><a href="#fn:9" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="J. Mongkolnavin, S. Tirapat, Marking the Close analysis in Thai Bond Market Surveillance using association rules, Expert Systems with
Applications 36 (4) (2009) 8523–8527.
">[9]</span></a></sup>, association rules were applied to detect mark-the-close in intraday trades from the Thai Bond Market Association. Price variation in the market and behavior of investors were integrated to analyze warning signals in real time. The method can produce a list of investors, who perhaps are manipulators. Fallh and Kordlouie (2011)<sup id="fnref:10"><a href="#fn:10" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="S. M. Fallah, H. Kordlouie, Forecasting Stock Price Manipulation in Capital Market.
">[10]</span></a></sup> used logit model, artificial neural network, and multiple discriminant analysis to create stock price manipulation models in Tehran stock exchange. The performances of three aforesaid models were effective. The selected data were thoroughly studied by runs test, skewness test, and duration correlative test. The events of price manipulation were indicated. The selected data can be divided into two sets: manipulated and non-manipulated companies. The factors that were related to stock price manipulation were defined such as: size of company, P/E ratio, liquidity of stock, status of information clarity, and structure of shareholders. In Yang (2014)<sup id="fnref:11"><a href="#fn:11" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="F. Yang, H. Yang, M. Yang, Discrimination of China’s stock price manipulation based on primary component analysis, in: Behavior,
Economic and Social Computing (BESC), 2014 International Conference on, IEEE, 2014, pp. 1–5.
">[11]</span></a></sup>, logistic regression model was chosen to detect stock price manipulation activities in Shanghai and Shenzhen market that were published as manipulated stocks. They analyzed independent variables based on primary component analysis, which increased performance for forecasting the model. The model was better than the linear regression model. Cao and McGinnity (2015)<sup id="fnref:12"><a href="#fn:12" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="Y. Cao, Y. Li, S. Coleman, A. Belatreche, T. M. McGinnity, Adaptive hidden Markov model with anomaly states for price manipulation
detection, IEEE transactions on neural networks and learning systems 26 (2) (2015) 318–330.
">[12]</span></a></sup> proposed the Adaptive Hidden Markov Model with Anomaly States (AHMMAS) to detect intraday stock price manipulation activities. The stock tick data were level 2 data from NASDAQ and London stock exchange. The model was tested with simulated data and real market data. The performance evaluation of AHMMAS outperforms other benchmark algorithms such as: Gaussian Mixture Models (GMM), K-Nearest Neighbors Algorithm (kNN), and One Class Support Vector Machines (OCSVM). Leangarun and Thajchayapong (2016)<sup id="fnref:8"><a href="#fn:8" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="H. O gut, M. M. Do  ganay, R. Aktas, Detecting stock-price manipulation in an emerging market: The case of Turkey, Expert Systems ˇ
with Applications 36 (9) (2009) 11944–11949.
">[8]</span></a></sup> investigated two popular scenarios of stock price manipulations: pump-and-dump and spoof trading. They defined and used level 2 data to train the neural network models which achieve high accuracy for detecting pump-and-dump, and two dimensional Gaussian model which shows it can detect spoof trading.</p>
<h1 id="3-Methodology"><a href="#3-Methodology" class="headerlink" title="3. Methodology"></a>3. Methodology</h1><p>Supervised machine learning is the search for algorithms that reason from externally supplied instances to produce general hypotheses, which then make predictions about future instances<sup id="fnref:13"><a href="#fn:13" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="S. B. Kotsiantis, I. Zaharakis, P. Pintelas, Supervised Machine Learning: A Review of Classification Techniques, 2007.
">[13]</span></a></sup>. In other words, the goal of supervised learning is to build a concise model of the distribution of class labels in terms of predictor features. The resulting classifier is then used to assign class labels to the testing instances where the values of the predictor features are known, but the value of the class label is unknown. Supervised machine learning is mainly consist of classification and regression. Classification is learning a function that maps (classifies) a data item into one of several predefined classes<sup id="fnref:14"><a href="#fn:14" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="U. Fayyad, G. Piatetsky-Shapiro, P. Smyth, From data mining to knowledge discovery in databases, AI magazine 17 (3) (1996) 37
">[14]</span></a></sup>. And similarly regression is learning a function that maps a data item to a real-valued prediction variable.</p>
<h2 id="3-1-K-Nearest-Neighbour"><a href="#3-1-K-Nearest-Neighbour" class="headerlink" title="3.1. K-Nearest Neighbour"></a>3.1. K-Nearest Neighbour</h2><p>K-Nearest Neighbour (KNN) is an instance based classifier method. The parameter units consist of samples that are used in the method and this algorithm then assumes that all instances relate to the points in the n-dimensional space $R^{N}$<sup id="fnref:15"><a href="#fn:15" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="R. S. Michalski, J. G. Carbonell, T. M. Mitchell, Machine Learning: An Artificial Intelligence Approach, Springer Science & Business
Media, 2013.
">[15]</span></a></sup>. The algorithm is very expedient as the information in the training data is never lost. However, this algorithm would be suitable if the training data set is large as this algorithm is very time consuming when each of the sample in training set is processed while classifying a new data and this process requires a longer classification time.</p>
<h2 id="3-2-Support-Vector"><a href="#3-2-Support-Vector" class="headerlink" title="3.2. Support Vector"></a>3.2. Support Vector</h2><p>Support Vector Method (SVM) is a classier that performs classification tasks by constructing hyperplanes in a multidimensional space that separates cases of different class labels. SVM method provides an optimally separating hyperplane in the sense that the margin between two groups is maximized. The SVM is proven to be advantageous in handling classification tasks with excellent generalization performance. The method seeks to minimize the upper bound of the generalization error based on the structural risk minimization principle. SVM training is equivalent to solve a linear constrained quadratic programming problem<sup id="fnref:16"><a href="#fn:16" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="B. Zheng, S. W. Yoon, S. S. Lam, Breast cancer diagnosis based on feature extraction using a hybrid of K-means and support vector
machine algorithms, Expert Systems with Applications 41 (4) (2014) 1476–1482.
">[16]</span></a></sup>.</p>
<h2 id="3-3-Decision-Tree-Classifier"><a href="#3-3-Decision-Tree-Classifier" class="headerlink" title="3.3. Decision Tree Classifier"></a>3.3. Decision Tree Classifier</h2><p>Decision Tree Classifier (DTC) is one of the most popular technique for prediction. An empirical tree represents a segmentation of the data that is created by applying a series of simple rules. Each rule assigns an observation to a segment based on the value of one input. Most of researchers have used this technique because of its simplicity and comprehensibility to uncover small or large data structure and predict the value. Romero et al. (2008) said that the decision tree models are easily understood because of their reasoning process and can be directly converted into set of IF-THEN rules<sup id="fnref:17"><a href="#fn:17" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="C. Romero, S. Ventura, P. G. Espejo, C. Hervas, Data mining algorithms to classify students, in: Educational Data Mining 2008, 2008. ´
">[17]</span></a></sup>.</p>
<h2 id="3-4-Linear-Discriminant-Analysis"><a href="#3-4-Linear-Discriminant-Analysis" class="headerlink" title="3.4. Linear Discriminant Analysis"></a>3.4. Linear Discriminant Analysis</h2><p>Linear Discriminant Analysis (LDA) is widely used in discriminant analysis to predict the class based on a given set of measurements on new unlabeled observations<sup id="fnref:14"><a href="#fn:14" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="U. Fayyad, G. Piatetsky-Shapiro, P. Smyth, From data mining to knowledge discovery in databases, AI magazine 17 (3) (1996) 37
">[14]</span></a></sup>. The algorithm’s ability to capture statistical dependencies among the predictor variables indicates that this algorithm would be suitable to explore the linear constraint of this study to discovery the synergy between motor and non-motor symptoms.</p>
<h2 id="3-5-Quadratic-Discriminant-Analysis"><a href="#3-5-Quadratic-Discriminant-Analysis" class="headerlink" title="3.5. Quadratic Discriminant Analysis"></a>3.5. Quadratic Discriminant Analysis</h2><p>Quadratic Discriminant Analysis (QDA) is closely related to linear discriminant analysis, where it is assumed that the measurements from each class are normally distributed. Unlike LDA however, in QDA there is no assumption that the covariance of each of the classes is identical. When the normality assumption is true, the best possible test for the hypothesis that a given measurement is from a given class is the likelihood ratio test.</p>
<h2 id="3-6-Logistic-Regression"><a href="#3-6-Logistic-Regression" class="headerlink" title="3.6. Logistic Regression"></a>3.6. Logistic Regression</h2><p>Logistic Regression (LR) is a method that would use the given set of features either continuous, discrete, or a mixture of both types and the binary target, LR then computes a linear combination of the inputs and passes through the logistic function<sup id="fnref:18"><a href="#fn:18" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="P. J. Garc´ıa-Laencina, P. H. Abreu, M. H. Abreu, N. Afonoso, Missing data imputation on the 5-year survival prediction of breast cancer
patients with unknown discrete values, Computers in biology and medicine 59 (2015) 125–133.
">[18]</span></a></sup>. This method is commonly used because it is easy to implementation and it provides competitive results.</p>
<h2 id="3-7-Artificial-Neural-Networks"><a href="#3-7-Artificial-Neural-Networks" class="headerlink" title="3.7. Artificial Neural Networks"></a>3.7. Artificial Neural Networks</h2><p>Artificial Neural Network (ANN) is another popular technique used in educational data mining. The advantage of neural network is that it has an ability to detect all possible interactions between predictors’ variables<sup id="fnref:19"><a href="#fn:19" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="G. Gray, C. McGuinness, P. Owende, An application of classification models to predict learner progression in tertiary education, in:
Advance Computing Conference (IACC), 2014 IEEE International, IEEE, 2014, pp. 549–554.
">[19]</span></a></sup>. Artificial neural network could also do a complete detection without having any doubt even in complex nonlinear relationship between dependent and independent variables<sup id="fnref:20"><a href="#fn:20" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="P. M. Arsad, N. Buniyamin, others, A neural network students’ performance prediction model (NNSPPM), in: Smart Instrumentation,
Measurement and Applications (ICSIMA), 2013 IEEE International Conference On, IEEE, 2013, pp. 1–5.
">[20]</span></a></sup>. Therefore, artificial neural network technique is selected as one of the best prediction method.</p>
<h1 id="4-Empirical-Analysis"><a href="#4-Empirical-Analysis" class="headerlink" title="4. Empirical Analysis"></a>4. Empirical Analysis</h1><p>We used supervised machine learning models to detect the daily trading data and tick trading data of the manipulated stock to find out the manipulated time and evaluate the supervised machine learning model. The supervised machine learning models are suitable to daily trading data and have high accuracy to detect the manipulated data, while have poor performance of detecting the tick trading data.</p>
<h2 id="4-1-Data-Description-and-Data-Preprocessing"><a href="#4-1-Data-Description-and-Data-Preprocessing" class="headerlink" title="4.1. Data Description and Data Preprocessing"></a>4.1. Data Description and Data Preprocessing</h2><p>In this paper, we use the market manipulation cases released by China Security Regulatory Commission(CSRC). Once CSRC officials discovered someone have manipulated the stock market, they would punish the manipulators and release this case on the website regularly. Based on that, we can download the daily trading data and tick trading data of these manipulated stocks. We select 64 manipulated stocks of daily trading data, which include daily open price, daily highest price, daily lowest price, daily close price and daily trading volume and tick trading data, which include tick price, tick price change volume, tick trading volume, tick trading amount and type released by CSRC from 2013 to 2016. For each stock’s analysis period is from the time that the first manipulation day -2*the manipulation period to that the end manipulation day + 2* the manipulation period (Table1), which make sure the rate of manipulated data about 20%.</p>
<p>We combine all of the daily trading data and tick trading data, and standardize them by zero-mean normalization. We get 4, 593 daily trading data and 8, 986, 466 tick trading data. We simple random sampling 1% of the tick trading data as the aggregate of tick trading is too big to compute (Table2). And we transform the nonnumerical data into numerical data. Then, we label the data as 1 if it was manipulated at the time according to CSRC, and others as 0. So the input data for the supervised machine learning is the preprocessed daily trading data and tick trading data, while the output is binary, marked 0 and 1.</p>
<center>Table 1: Some manipulated stock cases</center>

<div class="table-container">
<table>
<thead>
<tr>
<th>stock   name</th>
<th>Stock code</th>
<th>starting day of manipulation</th>
<th>ending dayof manipulation</th>
<th>starting day of analysis</th>
<th>ending dayof analysis</th>
</tr>
</thead>
<tbody>
<tr>
<td>Jingyi Co., Ltd</td>
<td>002295</td>
<td>1/19/2015</td>
<td>1/19/2015</td>
<td>1/15/2015</td>
<td>1/21/2015</td>
</tr>
<tr>
<td>Fuda Co., Ltd</td>
<td>603166</td>
<td>7/5/2016</td>
<td>7/18/2016</td>
<td>5/26/2016</td>
<td>8/25/2016</td>
</tr>
<tr>
<td>Zhongxing Commerce Co., Ltd</td>
<td>000715</td>
<td>1/4/2013</td>
<td>5/26/2014</td>
<td>2/12/2009</td>
<td>4/17/2018</td>
</tr>
<tr>
<td>Shibeigaoxin Co., Ltd</td>
<td>600604</td>
<td>9/8/2015</td>
<td>9/9/2015</td>
<td>9/2/2015</td>
<td>9/15/2015</td>
</tr>
<tr>
<td>Shuangxin Co., Ltd</td>
<td>300100</td>
<td>11/26/2014</td>
<td>11/28/2014</td>
<td>11/18/2014</td>
<td>12/8/2014</td>
</tr>
</tbody>
</table>
</div>
<center>Table 2: Analysis stock data</center>

<div class="table-container">
<table>
<thead>
<tr>
<th></th>
<th>daily</th>
<th>tick</th>
<th>simplified tick</th>
</tr>
</thead>
<tbody>
<tr>
<td>total point</td>
<td>4593</td>
<td>8986466</td>
<td>89864</td>
</tr>
<tr>
<td>out point</td>
<td>919</td>
<td>1985096</td>
<td>19851</td>
</tr>
<tr>
<td>out rate</td>
<td>20.27%</td>
<td>22.09%</td>
<td>22.09%</td>
</tr>
</tbody>
</table>
</div>
<h2 id="4-2-Performance-Evaluation"><a href="#4-2-Performance-Evaluation" class="headerlink" title="4.2. Performance Evaluation"></a>4.2. Performance Evaluation</h2><p>Measures of the quality of classification are built from a confusion matrix which records correctly and incorrectly recognized examples for each class. Table 3 presents a confusion matrix for binary classification, where TP are true positive, TF are false positive, FN are false negative, and TN are true negative counts. In this paper, for example, TN means this data are predicted as being manipulated and they are truly being manipulated according to CSRC.</p>
<center>Table 3: Confusion Matrix</center>

<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center"></th>
<th></th>
<th>predicted class</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"></td>
<td></td>
<td>success</td>
<td>failure</td>
</tr>
<tr>
<td style="text-align:center">Actual class</td>
<td>success</td>
<td>TP</td>
<td>FN</td>
</tr>
<tr>
<td style="text-align:center"></td>
<td>failure</td>
<td>FP</td>
<td>TN</td>
</tr>
</tbody>
</table>
</div>
<p>Classifying performance without focusing on a class is the most general way of comparing algorithms.<br>It does not favor any particular application. The most used empirical measure, accuracy, does not distinguish between the number of correct labels of different classes. Accuracy approximates how effective the algorithm is by showing the probability of the true value of the class label. In other words it assesses the overall effectiveness of the algorithm.</p>
<script type="math/tex; mode=display">Accuracy = \frac{TP+TN}{TP+FP+FN+TN}</script><p>Corresponding to it, two measures that separately estimate a classifier’s performance on different classes are sensitivity and specificity which approximates the probability of the positive (negative) label being true; in other words, it assesses the effectiveness of the algorithm on a single class.</p>
<script type="math/tex; mode=display">Sensitivity =   \frac{TP}{TP + FN}</script><script type="math/tex; mode=display">
Specificity =   \frac{TN}{FP + TN}</script><p>A comprehensive evaluation of classifier performance can be obtained by the ROC: shows a relation between the sensitivity and the specificity of the algorithm ROC curves, which plot sensitivity as a function of specificity for all possible thresholds<sup id="fnref:21"><a href="#fn:21" rel="footnote"><span class="hint--top-right hint--error hint--large" aria-label="P. Cortez, A. Cerdeira, F. Almeida, T. Matos, J. Reis, Modeling wine preferences by data mining from physicochemical properties,
Decision Support Systems 47 (2009) 547–553.
">[21]</span></a></sup>, and illustrate a classifier’s trade-off between true positives and false negatives. A higher value of sensitivity for a given value of specificity indicates better performance. The area under the ROC curve (AUC) is a commonly used metric for evaluating a classifier’s performance.</p>
<h2 id="4-3-Experimental-Results"><a href="#4-3-Experimental-Results" class="headerlink" title="4.3. Experimental Results"></a>4.3. Experimental Results</h2><p>We use 5-fold cross-validation to evaluate our predictive models by partitioning the daily training data and tick training data into a training set to train our models, and a test set to evaluate them. For the supervised machine learning models, we use K-nearest neighbors (KNN), Decision tree classifier (DTC),Linear discriminant analysis (LDA), Quadratic discriminant analysis (QDA), Logistic regression (LR), Artificial neural networks (ANN), Support vector machines(SVM).<br>Table 4 and Table 5 show the confusing matrix and the proportion of all mentioned models of daily training data and tick training data. As can be seen, most of the TP and TN have a rather higher rate than FN and FP of the daily training data, while the rate of TN is lower than FP and even some are near to zero of the tick training data.</p>
<center>Table 4: Confusing Matrix of daily training data</center>

<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">KNN</th>
<th style="text-align:center">　</th>
<th style="text-align:center">DTC</th>
<th style="text-align:center">　</th>
<th style="text-align:center">LDA</th>
<th style="text-align:center">　</th>
<th style="text-align:center">QDA</th>
<th style="text-align:center">　</th>
<th style="text-align:center">ANN</th>
<th style="text-align:center">　</th>
<th style="text-align:center">LGR</th>
<th style="text-align:center">　</th>
<th style="text-align:center">SVM</th>
<th style="text-align:center">　</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">3658</td>
<td style="text-align:center">4</td>
<td style="text-align:center">3658</td>
<td style="text-align:center">4</td>
<td style="text-align:center">3658</td>
<td style="text-align:center">4</td>
<td style="text-align:center">3622</td>
<td style="text-align:center">40</td>
<td style="text-align:center">3658</td>
<td style="text-align:center">4</td>
<td style="text-align:center">3596</td>
<td style="text-align:center">66</td>
<td style="text-align:center">3658</td>
<td style="text-align:center">4</td>
</tr>
<tr>
<td style="text-align:center">0</td>
<td style="text-align:center">931</td>
<td style="text-align:center">0</td>
<td style="text-align:center">931</td>
<td style="text-align:center">434</td>
<td style="text-align:center">497</td>
<td style="text-align:center">236</td>
<td style="text-align:center">695</td>
<td style="text-align:center">88</td>
<td style="text-align:center">843</td>
<td style="text-align:center">434</td>
<td style="text-align:center">497</td>
<td style="text-align:center">372</td>
<td style="text-align:center">559</td>
</tr>
<tr>
<td style="text-align:center">79.6%</td>
<td style="text-align:center">0.1%</td>
<td style="text-align:center">79.6%</td>
<td style="text-align:center">0.1%</td>
<td style="text-align:center">79.6%</td>
<td style="text-align:center">0.1%</td>
<td style="text-align:center">78.9%</td>
<td style="text-align:center">0.9%</td>
<td style="text-align:center">79.6%</td>
<td style="text-align:center">0.1%</td>
<td style="text-align:center">78.3%</td>
<td style="text-align:center">1.4%</td>
<td style="text-align:center">79.6%</td>
<td style="text-align:center">0.1%</td>
</tr>
<tr>
<td style="text-align:center">0.0%</td>
<td style="text-align:center">20.3%</td>
<td style="text-align:center">0.0%</td>
<td style="text-align:center">20.3%</td>
<td style="text-align:center">9.4%</td>
<td style="text-align:center">10.8%</td>
<td style="text-align:center">5.1%</td>
<td style="text-align:center">15.1%</td>
<td style="text-align:center">1.9%</td>
<td style="text-align:center">18.4%</td>
<td style="text-align:center">9.4%</td>
<td style="text-align:center">10.8%</td>
<td style="text-align:center">8.1%</td>
<td style="text-align:center">12.2%</td>
</tr>
</tbody>
</table>
</div>
<center>Table 5: Confusion Matrix of tick training data</center>


<div class="table-container">
<table>
<thead>
<tr>
<th style="text-align:center">KNN</th>
<th style="text-align:center">　</th>
<th style="text-align:center">DTC</th>
<th style="text-align:center">　</th>
<th style="text-align:center">LDA</th>
<th style="text-align:center">　</th>
<th style="text-align:center">QDA</th>
<th style="text-align:center">　</th>
<th style="text-align:center">ANN</th>
<th style="text-align:center">　</th>
<th style="text-align:center">LGR</th>
<th style="text-align:center">　</th>
<th style="text-align:center">SVM</th>
<th style="text-align:center">　</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">58468</td>
<td style="text-align:center">11545</td>
<td style="text-align:center">52871</td>
<td style="text-align:center">17142</td>
<td style="text-align:center">68854</td>
<td style="text-align:center">1159</td>
<td style="text-align:center">66168</td>
<td style="text-align:center">3845</td>
<td style="text-align:center">69772</td>
<td style="text-align:center">241</td>
<td style="text-align:center">69250</td>
<td style="text-align:center">763</td>
<td style="text-align:center">69348</td>
<td style="text-align:center">665</td>
</tr>
<tr>
<td style="text-align:center">15507</td>
<td style="text-align:center">4344</td>
<td style="text-align:center">14106</td>
<td style="text-align:center">5745</td>
<td style="text-align:center">18490</td>
<td style="text-align:center">1361</td>
<td style="text-align:center">17262</td>
<td style="text-align:center">2589</td>
<td style="text-align:center">19091</td>
<td style="text-align:center">760</td>
<td style="text-align:center">18788</td>
<td style="text-align:center">1063</td>
<td style="text-align:center">18940</td>
<td style="text-align:center">911</td>
</tr>
<tr>
<td style="text-align:center">65.1%</td>
<td style="text-align:center">12.8%</td>
<td style="text-align:center">58.8%</td>
<td style="text-align:center">19.1%</td>
<td style="text-align:center">76.6%</td>
<td style="text-align:center">1.3%</td>
<td style="text-align:center">73.6%</td>
<td style="text-align:center">4.3%</td>
<td style="text-align:center">77.6%</td>
<td style="text-align:center">0.3%</td>
<td style="text-align:center">77.1%</td>
<td style="text-align:center">0.8%</td>
<td style="text-align:center">77.2%</td>
<td style="text-align:center">0.7%</td>
</tr>
<tr>
<td style="text-align:center">17.3%</td>
<td style="text-align:center">4.8%</td>
<td style="text-align:center">15.7%</td>
<td style="text-align:center">6.4%</td>
<td style="text-align:center">20.6%</td>
<td style="text-align:center">1.5%</td>
<td style="text-align:center">19.2%</td>
<td style="text-align:center">2.9%</td>
<td style="text-align:center">21.2%</td>
<td style="text-align:center">0.8%</td>
<td style="text-align:center">20.9%</td>
<td style="text-align:center">1.2%</td>
<td style="text-align:center">21.1%</td>
<td style="text-align:center">1.0%</td>
</tr>
</tbody>
</table>
</div>
<p>Fig 1 presents the result of different models of daily and tick training data based on above 4 evaluation index, accuracy, sensitivity, specificity and AUC. From the fig 1(a), most of models of daily training have a good accuracy, sensitivity and AUC which are over 90%, and some of them even reach 100%, while the result of specificity is not good as other index for some models of daily training data. It is worth noting that KNN and DTC perform excellent in the four indexes that all exceed 99%.</p>
<center>Fig. 1:(a) daily training data</center>

<p><img src="http://oeclakg19.bkt.clouddn.com/daily.png" alt="daily training data"></p>
<center>Fig. 1:(b) tick training data</center>

<p><img src="http://oeclakg19.bkt.clouddn.com/tick.png" alt="tick training data"></p>
<p>The result is not ideal for the supervised machine learning models to train tick training data according to the fig 1(b) showing all of the models have high score of sensitivity and rather low specificity. Our mainly aim is to accurately detect the manipulated data which pursue a high specificity.</p>
<p>Fig 2 shows Receiver Operating Characteristic (ROC) and Area Under the Curve (AUC) for different models of daily and tick training data. The AUC of all the models of daily training data is greater than 90% which means excellent estimate result, while the AUC of all the models of tick training data is nearly 50% which is slightly better than random estimate result.</p>
<center>Fig. 2: (a) daily training data</center>

<p><img src="http://oeclakg19.bkt.clouddn.com/ROC_daily_colorless.png" alt="ROC_daily_colorless"></p>
<center>Fig. 2: (a) daily training data</center>

<p><img src="http://oeclakg19.bkt.clouddn.com/ROC_tick_colorless.png" alt="ROC_tick_colorless"></p>
<h1 id="5-Conclusion-and-Future-Work"><a href="#5-Conclusion-and-Future-Work" class="headerlink" title="5. Conclusion and Future Work"></a>5. Conclusion and Future Work</h1><p>This paper presents a comparative machine learning method for market manipulation detecting, especially for stock-price market manipulation. Based on manipulated information released by China Securities Regulation Commission (CSRC), we use supervised and unsupervised machine learning models to detect the anomaly from daily and tick trading data from the manipulated stocks. The supervised machine learning models, which are mainly classify machine learning models, have excellent performance for detecting the anomaly from the daily data, while having poor performance of tick data. Among the used classify machine learning models, KNN and DTC are the best, which exceed 99% of all the indexes, including accuracy, sensitivity, specificity and AUC.</p>
<p>For the supervised machine learning models to detecting the anomaly from the tick trading data, one of the reason for its poor performance is hard to exactly label the tick trading data as normal or abnormal, because it is almost impossible to know exact which specific time or specific tick trading data was manipulated. As the same, the evaluation of clustering tick trading data are inaccurate as the difficulty of deciding accurate anomalies. So a more suitable way to process the tick trading data is worth to be further studied.</p>
<h1 id="6-Acknowledgement"><a href="#6-Acknowledgement" class="headerlink" title="6. Acknowledgement"></a>6. Acknowledgement</h1><p>This paper is partly supported by the National Natural Science Foundation (71401188), Beijing Social Science Foundation (15SHB017) and Supported by Program for Innovation Research in Central University of Finance and Economics.</p>
<p><a href="http://oeclakg19.bkt.clouddn.com/Market%20manipulation%20detection%20based%20on%20Classification%20methods.pdf" title="Market manipulation detection based on Classification methods" target="_blank" rel="external">Paper Download</a></p>
<div id="footnotes"><hr><div id="footnotelist"><ol style="list-style: none; padding-left: 0; margin-left: 40px"><li id="fn:1"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">1.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">T. C. Lin, The new market manipulation<a href="#fnref:1" rev="footnote"> ↩</a></span></li><li id="fn:2"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">2.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">J. W. Markham, Law enforcement and the history of financial market manipulation, ME Sharpe, 2013.<a href="#fnref:2" rev="footnote"> ↩</a></span></li><li id="fn:3"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">3.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">F. Allen, D. Gale, Stock-price manipulation, The Review of Financial Studies (1992) 503–529<a href="#fnref:3" rev="footnote"> ↩</a></span></li><li id="fn:4"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">4.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">R. A. Jarrow, Market manipulation, bubbles, corners, and short squeezes, Journal of financial and Quantitative Analysis 27 (3) (1992)
311–336.<a href="#fnref:4" rev="footnote"> ↩</a></span></li><li id="fn:5"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">5.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">M. M. Carhart, R. Kaniel, D. K. Musto, A. V. Reed, Leaning for the tape: Evidence of gaming behavior in equity mutual funds, The
Journal of Finance 57 (2) (2002) 661–693.<a href="#fnref:5" rev="footnote"> ↩</a></span></li><li id="fn:6"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">6.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">R. Hanson, R. Oprea, Manipulators increase information market accuracy, George Mason University.<a href="#fnref:6" rev="footnote"> ↩</a></span></li><li id="fn:7"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">7.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">R. K. Aggarwal, G. Wu, Stock market manipulation-theory and evidence.<a href="#fnref:7" rev="footnote"> ↩</a></span></li><li id="fn:8"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">8.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">H. O gut, M. M. Do  ganay, R. Aktas, Detecting stock-price manipulation in an emerging market: The case of Turkey, Expert Systems ˇ
with Applications 36 (9) (2009) 11944–11949.<a href="#fnref:8" rev="footnote"> ↩</a></span></li><li id="fn:9"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">9.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">J. Mongkolnavin, S. Tirapat, Marking the Close analysis in Thai Bond Market Surveillance using association rules, Expert Systems with
Applications 36 (4) (2009) 8523–8527.<a href="#fnref:9" rev="footnote"> ↩</a></span></li><li id="fn:10"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">10.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">S. M. Fallah, H. Kordlouie, Forecasting Stock Price Manipulation in Capital Market.<a href="#fnref:10" rev="footnote"> ↩</a></span></li><li id="fn:11"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">11.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">F. Yang, H. Yang, M. Yang, Discrimination of China’s stock price manipulation based on primary component analysis, in: Behavior,
Economic and Social Computing (BESC), 2014 International Conference on, IEEE, 2014, pp. 1–5.<a href="#fnref:11" rev="footnote"> ↩</a></span></li><li id="fn:12"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">12.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">Y. Cao, Y. Li, S. Coleman, A. Belatreche, T. M. McGinnity, Adaptive hidden Markov model with anomaly states for price manipulation
detection, IEEE transactions on neural networks and learning systems 26 (2) (2015) 318–330.<a href="#fnref:12" rev="footnote"> ↩</a></span></li><li id="fn:13"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">13.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">S. B. Kotsiantis, I. Zaharakis, P. Pintelas, Supervised Machine Learning: A Review of Classification Techniques, 2007.<a href="#fnref:13" rev="footnote"> ↩</a></span></li><li id="fn:14"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">14.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">U. Fayyad, G. Piatetsky-Shapiro, P. Smyth, From data mining to knowledge discovery in databases, AI magazine 17 (3) (1996) 37<a href="#fnref:14" rev="footnote"> ↩</a></span></li><li id="fn:15"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">15.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">R. S. Michalski, J. G. Carbonell, T. M. Mitchell, Machine Learning: An Artificial Intelligence Approach, Springer Science &amp; Business
Media, 2013.<a href="#fnref:15" rev="footnote"> ↩</a></span></li><li id="fn:16"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">16.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">B. Zheng, S. W. Yoon, S. S. Lam, Breast cancer diagnosis based on feature extraction using a hybrid of K-means and support vector
machine algorithms, Expert Systems with Applications 41 (4) (2014) 1476–1482.<a href="#fnref:16" rev="footnote"> ↩</a></span></li><li id="fn:17"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">17.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">C. Romero, S. Ventura, P. G. Espejo, C. Hervas, Data mining algorithms to classify students, in: Educational Data Mining 2008, 2008. ´<a href="#fnref:17" rev="footnote"> ↩</a></span></li><li id="fn:18"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">18.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">P. J. Garc´ıa-Laencina, P. H. Abreu, M. H. Abreu, N. Afonoso, Missing data imputation on the 5-year survival prediction of breast cancer
patients with unknown discrete values, Computers in biology and medicine 59 (2015) 125–133.<a href="#fnref:18" rev="footnote"> ↩</a></span></li><li id="fn:19"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">19.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">G. Gray, C. McGuinness, P. Owende, An application of classification models to predict learner progression in tertiary education, in:
Advance Computing Conference (IACC), 2014 IEEE International, IEEE, 2014, pp. 549–554.<a href="#fnref:19" rev="footnote"> ↩</a></span></li><li id="fn:20"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">20.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">P. M. Arsad, N. Buniyamin, others, A neural network students’ performance prediction model (NNSPPM), in: Smart Instrumentation,
Measurement and Applications (ICSIMA), 2013 IEEE International Conference On, IEEE, 2013, pp. 1–5.<a href="#fnref:20" rev="footnote"> ↩</a></span></li><li id="fn:21"><span style="display: inline-block; vertical-align: top; padding-right: 10px; margin-left: -40px">21.</span><span style="display: inline-block; vertical-align: top; margin-left: 10px;">P. Cortez, A. Cerdeira, F. Almeida, T. Matos, J. Reis, Modeling wine preferences by data mining from physicochemical properties,
Decision Support Systems 47 (2009) 547–553.<a href="#fnref:21" rev="footnote"> ↩</a></span></li></ol></div></div>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;p&gt;&lt;strong&gt;Abstract&lt;/strong&gt;&lt;br&gt;In this p
    
    </summary>
    
      <category term="论文" scheme="http://yoursite.com/categories/%E8%AE%BA%E6%96%87/"/>
    
    
      <category term="Market manipulation" scheme="http://yoursite.com/tags/Market-manipulation/"/>
    
      <category term="Classification methods" scheme="http://yoursite.com/tags/Classification-methods/"/>
    
      <category term="Anomaly detection" scheme="http://yoursite.com/tags/Anomaly-detection/"/>
    
  </entry>
  
  <entry>
    <title>深度学习入门</title>
    <link href="http://yoursite.com/2017/10/14/%E7%BC%96%E7%A8%8B/deep%20learning%20introduction/"/>
    <id>http://yoursite.com/2017/10/14/编程/deep learning introduction/</id>
    <published>2017-10-14T08:42:11.046Z</published>
    <updated>2017-10-14T08:42:11.046Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="深度学习入门"><a href="#深度学习入门" class="headerlink" title="深度学习入门"></a>深度学习入门</h1><p>经过一段时间对深入学习的学习，写一些东西来记录一下自己的所学。</p>
<h2 id="神经网络与深度学习"><a href="#神经网络与深度学习" class="headerlink" title="神经网络与深度学习"></a>神经网络与深度学习</h2><p>深度学习是机器学习拉出的分支，它从经验中学习，并根据层次化的概念体系来理解世界，而每个概念则通过与某些相对简单的概念之间的关系来定义。</p>
<p>由于是从经验中学习，所以可以极大地避免由人类给计算机形式化指定它所需要学习的东西，这就能让机器自动学习，极大地促进了机器学习的发展。而层次化的概念则让机器可以通过构建简单的概念来学习复杂的概念，提高了机器学习的能力。大致地说，深度学习的深在于它的层，层越多，则越深。</p>
<p>现在最成功的深度学习方式是运用神经网络进行学习。神经网络也称人工神经网络（ANN）是一种模仿生物神经网络的结构和功能的数学模型或计算模型，能够从观测到的数据中进行学习。</p>
<p>我现在刚学习到的深度学习主要是三种神经网络：深度网络（DNN）、卷积神经网络（CNN）和循环神经网络（RNN）。</p>
<p>本篇文章先大致介绍一下我对深度网络的认识。</p>
<h2 id="深度神经网络"><a href="#深度神经网络" class="headerlink" title="深度神经网络"></a>深度神经网络</h2><p>深度神经网络（deep neural network）是现在最简单的神经网络，同时也是现在所有网络的根本，现在各式各样的神经网络都是以深度神经网络为基础发展出来的。</p>
<p>深度神经网络也称为前反馈神经网络（feedforward neural network），它的目标是近似某个函数$f$，使得对于所有的输入的$x$通过$f(x;\theta)$函数映射后尽可能与$y$相同。</p>
<p>所以，神经网络就是通过对$\theta$的学习，尽可能使得对于输入$x$映射得到的$y^{‘}$与正确的$y$尽可能相同。</p>
<p>神经网络之所以称为网络是因为他们通常用不同的函数复合在一起表示。如$f(x)=f^{(3)}(f^{(2)}(f^{(1)}(x)))$，神经网络就是这样有很多层链接在一起，层的个数为网络的深度。神经网络的第一层是输入层，最后一层是输出层，由于训练数据没有给出中间层的输出，所以中间层的都称为隐藏层(hidden layer)。神经网络中的每一层都是由一个或多个神经元组成。</p>
<p><img src="http://wiki.jikexueyuan.com/project/neural-networks-and-deep-learning-zh-cn/images/162.png" alt="神经网络架构"></p>
<h3 id="感知器"><a href="#感知器" class="headerlink" title="感知器"></a>感知器</h3><p>让我从神经网络最基本的单元——神经元说起，最简单的人工神经元是感知器（perception)。<br>感知器通过对多个输入进行加权求和进行感知，判断是否达到阈值，若超过阈值，则神经元激活，否则不激活。转换一下写成公式就是判断$z$是否大于零。</p>
<script type="math/tex; mode=display">z=\sum_{i}w_{i}x_{i} + b</script><p>比如，我今天下午是否去上课，会考虑今天下午是否有课，下午的课是否重要，上课老师是否漂亮等因素，然后对这些进行加权求和与心理阈值进行比较，如果大于则输入1，去上课；否则输入0，不去上课。</p>
<p>通过改变权重$w$和偏置$b$，就能对输出的结果进行调整。所以，$w$和$b$是学习的关键。神经网络就是通过不断地修改$w$和$b$以实现$y^{‘}$与$y$尽可能相同的目标。</p>
<p>当然这里还有一个重要的东西是激活函数$\sigma(z)$，之前提到的例子的激活函数是:</p>
<script type="math/tex; mode=display">
f(z)=\left\{\begin{matrix}
 1&z\geqslant0 \\
 0&z<0
\end{matrix}\right.</script><p>现在最常用的激活函数是sigmoid函数和softmax函数：</p>
<script type="math/tex; mode=display">
\begin{array}{cc}
sigmoid(z)&=&\frac{1}{1+e^{-z}}\\
\\
softmax(z)&=&\frac{e^{z_i}}{\sum_je^{z_j}}
\end{array}</script><p><img src="http://www.saedsayad.com/images/ANN_Unit_step.png" alt=""><br><img src="https://sebastianraschka.com/images/faq/logisticregr-neuralnet/sigmoid.png" alt=""></p>
<p>对比一下$f(z)$和$\phi(z)$ 两个函数的图像，很容易看出$\phi(z)$只是把直线拉弯了，让曲线变得光滑，这样就能求函数的梯度了。并且$\phi^{‘}(z)=\phi(z)\phi(1-z)$，梯度对我们训练权重和偏置非常重要，之后会提到。</p>
<p>而$softmax(z)$函数可以看做$sigmoid(z)$函数的推广，$sigmoid(z)$函数一般做两类的分类，而$softmax(z)$可以做多个类别的分类。$relu(z)$和$hanh(x)$之后会在卷积神经网络和循环神经网络中介绍。</p>
<p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/6/60/ArtificialNeuronModel_english.png/600px-ArtificialNeuronModel_english.png" alt=""></p>
<p>我们现在已经了解了神经网络中神经元的工作方式，他们将上一层所有神经元的值加权求和再加上一定偏置，然后用激活函数作用得到新的输出，作为下一层神经元的输入，直到最后一层，即输出层，输入结果$y^{‘}$。</p>
<p>现在我们用公式来表现我们刚刚提到的联系。首先，我们定义 $a_j^l$，为第 $l$层的第 $j$个激活函数， $w^l_{jk}$表示第 $l-1$层的第 $k$个神经元到第 $l$层的第 $j$个神经元的权重， $b^l_j$表示第 $l$层的第 $j$个神经元。则第 $l$层的第 $j$个神经元与第 $l-1$层就通过 $a^l_j$联系在一起：</p>
<script type="math/tex; mode=display">a^l_j=\sigma(\sum_kw^l_{jk}a^{l-1}_k + b^l_j)</script><p>我们还可以把它们都向量化，用矩阵会大大提高运算速度。$a^l$表示第$l$层的所有激活函数值。同样的，$W^l$和$b^l$分别表示第$l$层的所有神经元的权重和偏置。之前你可能会奇怪为什么$w^l_{jk}$要这样写，$jk$反过来似乎更符合直觉，这是为了之后矩阵运算方便。<br>用矩阵则可简洁地表示为：</p>
<script type="math/tex; mode=display">a^l=\sigma(W^la^{l-1} + b^l)</script><h3 id="梯度下降"><a href="#梯度下降" class="headerlink" title="梯度下降"></a>梯度下降</h3><p>当我们对于每一个输入的$x$得到输出的结果$y^{‘}$的时候，我们如何判断我们我们的结果怎么样呢？换句话说，我们如何判断$y^{‘}$与$y$有多相同呢？</p>
<p>一个直观的想法就是对于每一个结果计算他们之间的均方误差：</p>
<script type="math/tex; mode=display">
Error = \frac{1}{n}\sum_i(y_i-y^{'}_i)^2</script><p>这样我们就可以把$Error$当成我们的目标函数，也称为代价函数$C$，通过不断改变每个神经元的权重$w$和偏置$b$，以达到$C$的最小值。即：</p>
<script type="math/tex; mode=display">
\min {C=\frac{1}{2n}\sum\left \|  y(x)-a^l(x)\right \|^2}</script><p>运用我们运筹学中学过的非线性规划，我们可以用梯度下降(gradient descent)的方法求得最小值。而且$C$是二次函数，所以存在全局最小值。我们设置一个合适的下降速率，慢慢地我们总能达到最小值。</p>
<script type="math/tex; mode=display">
\theta_{n+1}(w,b) = \theta_{n}(w,b)-\eta \nabla C(\theta_{n}(w,b))</script><p><img src="https://sebastianraschka.com/images/faq/closed-form-vs-gd/ball.png" alt=""></p>
<p>我们总结一下我们提到的内容。首先，对于对输入$x$的所有特征进行加权求和得到$z$，然后用激活函数$\sigma(z)$作用在上面，得到这一层的输入$a^l$，通过这一层的激活函数值$a^l$与下一层的激活函数值$a^{l+1}$之间的联系，一直到输出层，得到输出结果$y’$，通过计算误差函数$C$来不断改变$w$和$b$以尽量达到最小的误差函数$C$，这样我们就训练好了我们的神经网络。</p>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;深度学习入门&quot;&gt;&lt;a href=&quot;#深度学习入门&quot; class=&quot;
    
    </summary>
    
      <category term="深度学习" scheme="http://yoursite.com/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="深度学习" scheme="http://yoursite.com/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
      <category term="神经网络" scheme="http://yoursite.com/tags/%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>Git基础操作</title>
    <link href="http://yoursite.com/2017/10/14/%E7%BC%96%E7%A8%8B/git%E5%9F%BA%E7%A1%80%E6%93%8D%E4%BD%9C/"/>
    <id>http://yoursite.com/2017/10/14/编程/git基础操作/</id>
    <published>2017-10-14T08:42:11.046Z</published>
    <updated>2017-10-14T08:42:11.047Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><p>git是什么呢？git是一个分布式版本控制系统，以便于追踪改变和多人协作。</p>
<p>为什么我们要关注版本控制呢？当你写完一篇文章后，如果我们想要修改，又不想破坏原文件，以便修改失误后能还原，我们一般会复制一份原文件，然后再修改。可是如果我们有很多份文件要修改呢？如果我们要修改很多次呢？那每次修改都复制一份出来就显得很繁琐。通过版本控制，我们就可以在一个文件中修改，并能很好的在各个修改的版本中来回转换。</p>
<p>为什么是分布式呢？分布式是相对于集中式的。集中式就是把文件集中放在一个地方，如果需要修改，就把要修改的文件取出来，修改完后将修改的部分再替换回去。这个有两点不好，一是如果集中放置文件的主机出问题了，那所有文件都找不回来了。二是修改必须是联网，如果主机网络出问题，那其他人也不能修改。而分布式则是将文件放在所有需要的人主机上，这样就相当于将文件备份了无数份，几乎没有丢失的可能。另外，所有人都可以在自己的本级上修改，只需要在修改完之后联网传送修改好的版本即可。</p>
<h1 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h1><h2 id="获取git仓库"><a href="#获取git仓库" class="headerlink" title="获取git仓库"></a>获取git仓库</h2><ul>
<li>从现有目录中初始化仓库</li>
<li>从服务器克隆现有仓库</li>
</ul>
<h3 id="从现有目录初始化仓库"><a href="#从现有目录初始化仓库" class="headerlink" title="从现有目录初始化仓库"></a>从现有目录初始化仓库</h3><p>只需要进入需要初始化的仓库，然后输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git init</div></pre></td></tr></table></figure></p>
<p>该命令将创建一个名为 .git 的子目录，git所有重要文件都放在这个文件夹里面。</p>
<h3 id="从服务器克隆现有仓库"><a href="#从服务器克隆现有仓库" class="headerlink" title="从服务器克隆现有仓库"></a>从服务器克隆现有仓库</h3><p>克隆的命令是<code>git clone [url]</code>。比如，要克隆 Git 的可链接库 libgit2，可以用下面的命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git clone https://github.com/libgit2/libgit2</div></pre></td></tr></table></figure></p>
<p>这样就把现有的仓库复制到自己的主机上，并且这个文件夹会自动生成.git文件夹。</p>
<h2 id="记录每次更新到仓库"><a href="#记录每次更新到仓库" class="headerlink" title="记录每次更新到仓库"></a>记录每次更新到仓库</h2><p>在工作目录下的文件只有两种状态：已追踪和未追踪。未追踪的是指没有纳入git版本控制的文件，而已追踪的则是纳入了版本控制的文件，可以用git来进行版本的控制。而纳入了版本控制的已追踪文件有三种状态：未修改、已修改、已放入暂存区。初次克隆某个仓库的时候，工作目录中的所有文件都是已追踪的，并处于未修改状态。</p>
<p>编辑过某些文件后，git会将它们标记会已修改文件。等我们修改好之后，将文件放入暂存区，则git会将这些文件标记为已暂存。最后，我们将暂存的文件提交。这样我们就将记录更新到仓库了，并且此时，git会将这些文件标记为未修改。</p>
<p><img src="https://git-scm.com/book/en/v2/images/lifecycle.png" alt="文件的状态变化周期"></p>
<p>所以，我们修改完文件后，先提交到暂存区，然后再从暂存区提交到我们的仓库。为什么中间要多加一个暂存区，不直接将修改好的文件添加到仓库呢？要理解暂存区的作用，我们先看看暂存区是怎么工作的。当我们把修改的文件提交到暂存区后，该文件就被标记为已暂存。可是这时你还没修改完，又修改了一部分。那此时这个文件会被标记为已暂存和未修改。已暂存指的是之前暂存的文件，未修改指的是后来又修改后的文件。这样我们就同时记录了两次修改的文件，以便于我们选择我们需要文件。当我们再把已修改的文件提交到暂存区，此时这次文件就只有一个状态——已暂存，而且已暂存的时候最后一次提交的文件。当我们把所有修改好的文件都提交到暂存区后，就可以将暂存区的文件一次全部提交到仓库。所以，暂存区有两个好处，一是进行快照，便于退回；二是分批、分阶段提交。</p>
<h3 id="git命令"><a href="#git命令" class="headerlink" title="git命令"></a>git命令</h3><ul>
<li>加入暂存区：<code>git add</code></li>
<li>提交仓库：<code>git commit</code></li>
<li>查询状态：<code>git status</code></li>
<li>查询修改：<code>git diff</code></li>
<li>移除文件：<code>git rm</code></li>
</ul>
<h4 id="加入暂存区："><a href="#加入暂存区：" class="headerlink" title="加入暂存区："></a>加入暂存区：</h4><p><code>git add [files]</code>命令有两个作用，一是将未追踪的文件纳入已追踪中，二是将已修改的文件提交到暂存区。</p>
<h4 id="提交仓库："><a href="#提交仓库：" class="headerlink" title="提交仓库："></a>提交仓库：</h4><p><code>git commit -m &quot;your description&quot;</code>命令是将暂存区的所有文件都提交到仓库中，并添加一段描述以便于很好的识别这个版本。</p>
<h4 id="查询状态"><a href="#查询状态" class="headerlink" title="查询状态"></a>查询状态</h4><p><code>git status</code>命令是用于检查当前状态。</p>
<p>未修改时显示为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ git status</div><div class="line">On branch master</div><div class="line">nothing to commit, working directort clean</div></pre></td></tr></table></figure></p>
<p>现在创建一个新的<code>README.md</code>文件，则该文件属于未追踪状态，则输出为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$ git status</div><div class="line">On branch master</div><div class="line">Untracked files:</div><div class="line">  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)</div><div class="line"></div><div class="line">    README</div><div class="line"></div><div class="line">nothing added to commit but untracked files present (use &quot;git add&quot; to track)</div></pre></td></tr></table></figure></p>
<p>将文件纳入追踪系统，并放入暂存状态后，输入为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ git add README</div><div class="line">$ git status</div><div class="line">On branch master</div><div class="line">Changes to be committed:</div><div class="line">  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)</div><div class="line"></div><div class="line">    new file:   README.md</div></pre></td></tr></table></figure></p>
<p>修改<code>README.md</code>文件后，输出为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">$ git status</div><div class="line">On branch master</div><div class="line">Changes not staged for commit:</div><div class="line">  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)</div><div class="line">  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)</div><div class="line"></div><div class="line">    modified:   README.md</div></pre></td></tr></table></figure></p>
<h4 id="查询修改"><a href="#查询修改" class="headerlink" title="查询修改"></a>查询修改</h4><p><code>git diff</code>用于查看工作目录中当前文件和暂存区域快照之间的差异，也就是修改之后还没有暂存起来的变化内容。</p>
<p><code>git diff --cached</code>或<code>git diff --staged</code>可以用来查看已暂存的文件与仓库中文件差异。</p>
<h4 id="移除文件"><a href="#移除文件" class="headerlink" title="移除文件"></a>移除文件</h4><p><code>git rm &lt;file&gt;</code>可以将某个文件从仓库中移除，即从已追踪状态转换为未追踪状态，并且从工作目录中将该文件删除，这样以后该文件就不会再出现在未追踪清单中。如果，该文件已放入暂存区，则需要使用<code>git rm &lt;file&gt; -f</code>命令来强制移除该文件。</p>
<h2 id="撤销操作"><a href="#撤销操作" class="headerlink" title="撤销操作"></a>撤销操作</h2><ul>
<li>重新提交：<code>git commit --amend</code></li>
<li>取消暂存文件：<code>git reset HEAD &lt;file&gt;</code></li>
<li>撤销对文件的修改：<code>git checkout -- &lt;file&gt;</code></li>
</ul>
<h3 id="重新提交"><a href="#重新提交" class="headerlink" title="重新提交"></a>重新提交</h3><p>当我们提交文件时发现漏了几个文件没有添加，或者提交信息写错了，此时用<code>git commit --amend</code>可以尝试重新提交，则这次的提交会替代上次的提交。</p>
<h3 id="取消暂存文件"><a href="#取消暂存文件" class="headerlink" title="取消暂存文件"></a>取消暂存文件</h3><p><code>git reset HEAD &lt;file&gt;</code>会将文件从暂存区取出来，即该文件的状态从已暂存改为已修改。</p>
<h3 id="撤销对文件的修改"><a href="#撤销对文件的修改" class="headerlink" title="撤销对文件的修改"></a>撤销对文件的修改</h3><p><code>git checkout -- &lt;file&gt;</code>撤销对文件的修改，即将修改过文件退回到上一次提交时的状态，即从已修改状态转为未修改状态。</p>
<h2 id="远程仓库的使用"><a href="#远程仓库的使用" class="headerlink" title="远程仓库的使用"></a>远程仓库的使用</h2><ul>
<li>添加远程仓库：<code>git remote add</code></li>
<li>从远程仓库中抓取的拉取：<code>git fetch</code> or <code>git pull</code></li>
<li>推送到远程仓库：<code>git push</code></li>
<li>查看远程仓库：<code>git remote show</code></li>
<li>远程仓库的移除与重命名：<code>git rm</code> or <code>git rename</code></li>
</ul>
<h3 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h3><p><code>git remote add &lt;shortname&gt; &lt;url&gt;</code>可以添加一个新的远程仓库，同时指定一个可以轻松引用的简写。</p>
<h3 id="从远程仓库中抓取的拉取"><a href="#从远程仓库中抓取的拉取" class="headerlink" title="从远程仓库中抓取的拉取"></a>从远程仓库中抓取的拉取</h3><p><code>git fetch [remote-name]</code>可以从远程仓库中获取数据，但它并不会自动合并或修改你当前的工作。当准备好的时候，必须手动将其合并入你的工作。</p>
<p><code>git pull</code>可以实现自动抓取并合并远程分支到当前分支。</p>
<h3 id="推送到远程仓库"><a href="#推送到远程仓库" class="headerlink" title="推送到远程仓库"></a>推送到远程仓库</h3><p><code>git push [remote-name] [brach-name]</code>可以将本地分支推送到远程仓库的某个服务器中，这个只有当你对该服务器具有写入权限，并之前没有人推送过才有用。</p>
<p>当之前有人推送过，你的推送就会被拒绝。你必须先用<code>git pull</code>将他们的工作拉取下拉合并到你的分支中，才能推送。</p>
<h3 id="查看远程仓库"><a href="#查看远程仓库" class="headerlink" title="查看远程仓库"></a>查看远程仓库</h3><p><code>git remote &lt;url&gt;</code>可以查看已经配置的远程仓库的服务器，如果你克隆了自己的仓库，那么至少能看到<code>origin</code>，这是git给你仓库服务器的默认名字。</p>
<p><code>git remote -v</code>则会显示需要读写远程仓库所需要使用的git保存的简写即对应的URL。</p>
<p><code>git remore show [remote-name]</code>除了会列出远程仓库的URL，还列出跟踪分支的信息。告诉你在特定的分支上执行<code>git push</code>会自动推送到哪一个远程分支，哪些远程分支不在你的本地，哪些远程分支已经从服务器移除，当你执行<code>git pull</code>时，哪些分支会自动合并。</p>
<h3 id="远程仓库的移除与重命名"><a href="#远程仓库的移除与重命名" class="headerlink" title="远程仓库的移除与重命名"></a>远程仓库的移除与重命名</h3><p><code>git remote rm &lt;remote-name&gt;</code>可以移除一个远程仓库，<code>git remote rename &lt;remote-name&gt; &lt;new-name&gt;</code>可以将远程仓库重命名。</p>
<h2 id="Git-分支"><a href="#Git-分支" class="headerlink" title="Git 分支"></a>Git 分支</h2><p>几乎所有的版本控制系统都以某种形式支持分支。 使用分支意味着你可以把你的工作从开发主线上分离开来，以免影响开发主线。 比如，当你想为你的项目添加一个新的特性时，你可以创建一个新的分支，在分支上对项目进行修改。如果你修改的不好，你可以直接删除这个分支，对主线毫无影响。如果，你修改的好，你可以将这个分支合并在主线中。</p>
<ul>
<li>分支创建：<code>git branch</code></li>
<li>分支切换：<code>git checkout</code></li>
<li>分支的合并：<code>git merge</code></li>
<li>分支的删除：<code>git branch -d</code></li>
<li>远程分支：<code>git remote</code></li>
</ul>
<h3 id="分支创建"><a href="#分支创建" class="headerlink" title="分支创建"></a>分支创建</h3><p><code>git branch &lt;branch-name&gt;</code>可以创建一个新的分支，git会为你创建一个可移动的新指针，指向你提交的对象。此时现在操作的用的指针<code>HEAD</code>仍然指向原来的指针。</p>
<h3 id="分支切换"><a href="#分支切换" class="headerlink" title="分支切换"></a>分支切换</h3><p><code>git checkout &lt;branch-name&gt;</code>可以将当前的工作目录切换到另一个分支中，即将<code>HEAD</code>指向另一个指针。</p>
<h3 id="分支合并"><a href="#分支合并" class="headerlink" title="分支合并"></a>分支合并</h3><p>当我们在支线分支上完成我们所需的任务后，我们想要把它合并到我们的主线分支上，我们就可以切换到我们的主线分支，然后输入<code>git merge &lt;branch-name&gt;</code>合并支线分支。</p>
<p>如果合并的两个分支同时对一个文件的同一个地方进行修改，那么这两个分支合并就会出现问题，可以用<code>git status</code>查看冲突，然后手动处理好冲突之后再合并。</p>
<h3 id="分支删除"><a href="#分支删除" class="headerlink" title="分支删除"></a>分支删除</h3><p>当我们在支线分支上修改失败或者修改成功并且合并到主线分支上之后，我们就没必要留着支线分支了，输入<code>git branch -d &lt;branch-name&gt;</code>可以将该分支删除。</p>
<h3 id="远程分支"><a href="#远程分支" class="headerlink" title="远程分支"></a>远程分支</h3><p>获取远程分支常用的方法是远程跟踪分支，它是对远程分支状态的引用。它们是你不能移动的本地引用，当你做任何网络通信操作时，它们会自动移动。 远程跟踪分支像是你上次连接到远程仓库时，那些分支所处状态的书签。远程分支常以 (remote)/(branch) 形式命名。</p>
<p>可以用<code>git checkout -b [branch] [remotename]/[branch]</code>来跟踪远程分支，这样就会从在本地创建一个和远程分支一样的分支，叫做跟踪分支。</p>
<p>此时，运行<code>git pull</code>就会自动从跟踪的远程分支中拉取数据，并合并到跟踪分支中。</p>
<p>当我们在一个分支上已经完成我们的任务时候，我们可以运行带有<code>--delete &lt;remote-branch-name&gt;</code>的推送来删除远程分支，即运行<code>git push &lt;name&gt; --delete &lt;remote-branch-name&gt;</code>。</p>
<p>参考:<a href="https://git-scm.com/book/zh/v2/" target="_blank" rel="external">https://git-scm.com/book/zh/v2/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerli
    
    </summary>
    
      <category term="编程" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>python 教程</title>
    <link href="http://yoursite.com/2017/10/14/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E4%B9%8Bpython/python-%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2017/10/14/数据挖掘之python/python-教程/</id>
    <published>2017-10-14T08:14:46.000Z</published>
    <updated>2017-10-16T10:46:22.525Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="Python-Tutorial"><a href="#Python-Tutorial" class="headerlink" title="Python Tutorial"></a>Python Tutorial</h1><p>更好的阅读体验请前往：<a href="https://nbviewer.jupyter.org/github/Jedan010/data-mining-in-python/blob/master/0.2.python%20turorial.ipynb" target="_blank" rel="external">https://nbviewer.jupyter.org/github/Jedan010/data-mining-in-python/blob/master/0.2.python%20turorial.ipynb</a></p>
<p>教程内容包括：</p>
<ul>
<li><strong>Python</strong></li>
<li><strong>NumPy</strong></li>
<li><strong>Pandas</strong></li>
<li><strong>Matplotlib</strong></li>
</ul>
<h2 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h2><p>Python是一种高级的，动态类型的多范型编程语言。很多时候，大家会说Python看起来简直和伪代码一样，这是因为你能够通过很少行数的代码表达出很有力的思想。</p>
<p>内容包括：</p>
<ul>
<li>基础数据类型</li>
<li>复合数据类型</li>
<li>控制语句</li>
<li>循环</li>
</ul>
<p>参考：</p>
<ul>
<li>官方教程：<a href="https://docs.python.org/3/tutorial/index.html" target="_blank" rel="external">https://docs.python.org/3/tutorial/index.html</a></li>
<li>Python 入门指南: <a href="http://www.pythondoc.com/pythontutorial3/index.html" target="_blank" rel="external">http://www.pythondoc.com/pythontutorial3/index.html</a></li>
<li>廖雪峰python教程： <a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000" target="_blank" rel="external">https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000</a></li>
<li>CS231n python 教程：<a href="http://cs231n.github.io/python-numpy-tutorial/" target="_blank" rel="external">http://cs231n.github.io/python-numpy-tutorial/</a></li>
</ul>
<h3 id="基础数据类型"><a href="#基础数据类型" class="headerlink" title="基础数据类型"></a>基础数据类型</h3><p>和大多数编程语言一样，Python拥有一系列的基本数据类型，比如整型、浮点型、布尔型和字符串等。这些类型的使用方式和在其他语言中的使用方式是类似的。</p>
<ul>
<li><strong>数值型</strong></li>
<li><strong>字符串</strong></li>
<li><strong>布尔型</strong></li>
</ul>
<h4 id="数值型"><a href="#数值型" class="headerlink" title="数值型"></a>数值型</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">x = <span class="number">5</span></div><div class="line">type(x)</div></pre></td></tr></table></figure>
<pre><code>int
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">print(x + <span class="number">2</span>) <span class="comment">## 加</span></div><div class="line">print(x - <span class="number">2</span>) <span class="comment">## 减</span></div><div class="line">print(x * <span class="number">2</span>) <span class="comment">## 乘</span></div><div class="line">print(x / <span class="number">2</span>) <span class="comment">## 除</span></div><div class="line">print(x // <span class="number">2</span>)  <span class="comment">## 整除</span></div><div class="line">print(x % <span class="number">2</span>) <span class="comment">## 求余</span></div><div class="line">print(x ** <span class="number">2</span>) <span class="comment">##指数运算</span></div></pre></td></tr></table></figure>
<pre><code>7
3
10
2.5
2
1
25
</code></pre><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><p>Python对字符串的支持非常棒。字符串可以用单引号<code>&#39;</code>或者双引号<code>&quot;</code>引起来。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">hello = <span class="string">'hello'</span></div><div class="line">world = <span class="string">"world"</span></div><div class="line">print(hello) <span class="comment">##打印字符串</span></div><div class="line">print(len(hello)) <span class="comment">##求字符串长度</span></div><div class="line"></div><div class="line">hw = hello + <span class="string">' '</span> + world + <span class="string">'!'</span><span class="comment">##字符串相加</span></div><div class="line">print(hw)</div><div class="line"></div><div class="line">print(hello, <span class="number">100</span>) <span class="comment">##打印不同东西可以用 逗号',' 隔开</span></div></pre></td></tr></table></figure>
<pre><code>hello
5
hello world!
hello 100
</code></pre><p>字符串对象有一系列有用的方法</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">s = <span class="string">'hello'</span></div><div class="line">print(s.capitalize())<span class="comment">##首字母大写</span></div><div class="line">print(s.upper())   <span class="comment">## 全部大写</span></div><div class="line">print(s.replace(<span class="string">'e'</span>, <span class="string">'E'</span>))  <span class="comment">##替换字符串</span></div><div class="line"></div><div class="line">print(<span class="string">'   hello  '</span>)</div><div class="line">print(<span class="string">'   hello  '</span>.strip()) <span class="comment">## 去除字符串的空格</span></div></pre></td></tr></table></figure>
<pre><code>Hello
HELLO
hEllo
   hello  
hello
</code></pre><h3 id="复合数据类型"><a href="#复合数据类型" class="headerlink" title="复合数据类型"></a>复合数据类型</h3><ul>
<li>列表 list:[]</li>
<li>字典 dict:{}</li>
<li>集合 set()</li>
<li>元组 truple :()</li>
</ul>
<h4 id="列表-list"><a href="#列表-list" class="headerlink" title="列表 list"></a>列表 list</h4><p>用[]表示列表。</p>
<p>list 就是 Python 中的数组，但是列表长度可变，且能包含不同类型元素。</p>
<ul>
<li>注意python的序号是从0开始计数的，与c语言一样，[0]表示取第1个元素</li>
<li>[a:b] 数学上表示[a,b)这个左闭右开的集合，所以选择的是从第a个到第b-1个元素</li>
</ul>
<h5 id="创建列表"><a href="#创建列表" class="headerlink" title="创建列表"></a>创建列表</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xs = [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>]</div><div class="line">xs</div></pre></td></tr></table></figure>
<pre><code>[0, 1, 2, 3, 4, 5]
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 列表长度</span></div><div class="line">len(xs)</div></pre></td></tr></table></figure>
<pre><code>6
</code></pre><h5 id="访问列表"><a href="#访问列表" class="headerlink" title="访问列表"></a>访问列表</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">xs[<span class="number">0</span>]</div></pre></td></tr></table></figure>
<pre><code>0
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">##切片访问</span></div><div class="line">xs[<span class="number">0</span>:<span class="number">2</span>]</div></pre></td></tr></table></figure>
<pre><code>[0, 1]
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 用负数代表从后往前数</span></div><div class="line">xs[<span class="number">0</span>:<span class="number">-1</span>]</div></pre></td></tr></table></figure>
<pre><code>[0, 1, 2, 3, 4]
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 访问所有</span></div><div class="line">xs[:]</div></pre></td></tr></table></figure>
<pre><code>[0, 1, 2, 3, 4, 5]
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 访问偶数序号</span></div><div class="line">xs[::<span class="number">2</span>]</div></pre></td></tr></table></figure>
<pre><code>[0, 2, 4]
</code></pre><h5 id="添加元素"><a href="#添加元素" class="headerlink" title="添加元素"></a>添加元素</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">xs.append(<span class="number">10</span>)</div><div class="line">xs</div></pre></td></tr></table></figure>
<pre><code>[0, 1, 2, 3, 4, 5, 10]
</code></pre><h5 id="删除元素"><a href="#删除元素" class="headerlink" title="删除元素"></a>删除元素</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 按位置删除元素</span></div><div class="line">xs.pop(<span class="number">-1</span>)</div><div class="line">xs</div></pre></td></tr></table></figure>
<pre><code>[0, 1, 2, 3, 4, 5]
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 删除指定元素</span></div><div class="line">xs.remove(<span class="number">3</span>)</div><div class="line">xs</div></pre></td></tr></table></figure>
<pre><code>[0, 1, 2, 4, 5]
</code></pre><h5 id="修改元素"><a href="#修改元素" class="headerlink" title="修改元素"></a>修改元素</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 按序号修改</span></div><div class="line">xs[<span class="number">0</span>] = <span class="number">999</span></div><div class="line">xs</div></pre></td></tr></table></figure>
<pre><code>[999, 1, 2, 4, 5]
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 切片修改</span></div><div class="line">xs[<span class="number">0</span>:<span class="number">2</span>] = [<span class="number">-999</span>, <span class="number">-999</span>]</div><div class="line">xs</div></pre></td></tr></table></figure>
<pre><code>[-999, -999, 2, 4, 5]
</code></pre><h5 id="遍历列表"><a href="#遍历列表" class="headerlink" title="遍历列表"></a>遍历列表</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">animals = [<span class="string">'cat'</span>, <span class="string">'dog'</span>, <span class="string">'monkey'</span>]</div><div class="line"><span class="keyword">for</span> animal <span class="keyword">in</span> animals:</div><div class="line">    print(animal)</div></pre></td></tr></table></figure>
<pre><code>cat
dog
monkey
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 也可以添加每个位置的指针</span></div><div class="line"><span class="keyword">for</span> i, animal <span class="keyword">in</span> enumerate(animals):</div><div class="line">    print(i, animal)</div></pre></td></tr></table></figure>
<pre><code>0 cat
1 dog
2 monkey
</code></pre><h5 id="列表推导-List-comprehensions"><a href="#列表推导-List-comprehensions" class="headerlink" title="列表推导 List comprehensions"></a>列表推导 List comprehensions</h5><p>当我们想对列表中每个元素进行同样的操作的时候，可以用 for 循环来对每个元素进行操作，也可以直接用列表推导来操作。</p>
<p>比如我么想对每个元素都进行平方操作：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## for循环</span></div><div class="line">x = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>]</div><div class="line">x2 = []</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> x:</div><div class="line">    x2.append(i ** <span class="number">2</span>)</div><div class="line">x2</div></pre></td></tr></table></figure>
<pre><code>[1, 4, 9, 16, 25]
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 直接用列表推导</span></div><div class="line">x3 = [i**<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> x]</div><div class="line">x3</div></pre></td></tr></table></figure>
<pre><code>[1, 4, 9, 16, 25]
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 也可以在列表推导里面加入条件判断</span></div><div class="line">x4 = [ i**<span class="number">2</span> <span class="keyword">for</span> i <span class="keyword">in</span> x <span class="keyword">if</span> i%<span class="number">2</span> == <span class="number">0</span>]</div><div class="line">x4</div></pre></td></tr></table></figure>
<pre><code>[4, 16]
</code></pre><h4 id="字典dict"><a href="#字典dict" class="headerlink" title="字典dict"></a>字典dict</h4><p>用{key: value}表示。</p>
<p>字典用来储存（键key, 值value），通过建立key和value之间的对应关系，我们就可以通过key很快的找到value。</p>
<h5 id="创建字典"><a href="#创建字典" class="headerlink" title="创建字典"></a>创建字典</h5><p>比如我们要建立一个学生与成绩对应的字典：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">grade = &#123;<span class="string">'Jedan'</span>: <span class="number">100</span>, <span class="string">'Bob'</span>: <span class="number">90</span>, <span class="string">'Mike'</span>: <span class="number">80</span>&#125;</div><div class="line">grade</div></pre></td></tr></table></figure>
<pre><code>{&#39;Bob&#39;: 90, &#39;Jedan&#39;: 100, &#39;Mike&#39;: 80}
</code></pre><h5 id="访问字典"><a href="#访问字典" class="headerlink" title="访问字典"></a>访问字典</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">grade[<span class="string">'Jedan'</span>]</div></pre></td></tr></table></figure>
<pre><code>100
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 或者通过get属性访问字典（推荐）</span></div><div class="line">grade.get(<span class="string">'Jedan'</span>)</div></pre></td></tr></table></figure>
<pre><code>100
</code></pre><h5 id="添加元素-1"><a href="#添加元素-1" class="headerlink" title="添加元素"></a>添加元素</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">grade[<span class="string">'new_one'</span>] = <span class="number">60</span></div><div class="line">grade</div></pre></td></tr></table></figure>
<pre><code>{&#39;Bob&#39;: 90, &#39;Jedan&#39;: 100, &#39;Mike&#39;: 80, &#39;new_one&#39;: 60}
</code></pre><h5 id="修改key对应的value"><a href="#修改key对应的value" class="headerlink" title="修改key对应的value"></a>修改key对应的value</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">grade[<span class="string">'new_one'</span>] = <span class="number">70</span></div><div class="line">grade</div></pre></td></tr></table></figure>
<pre><code>{&#39;Bob&#39;: 90, &#39;Jedan&#39;: 100, &#39;Mike&#39;: 80, &#39;new_one&#39;: 70}
</code></pre><h5 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">grade.pop(<span class="string">'new_one'</span>)</div><div class="line">grade</div></pre></td></tr></table></figure>
<pre><code>{&#39;Bob&#39;: 90, &#39;Jedan&#39;: 100, &#39;Mike&#39;: 80}
</code></pre><h5 id="遍历字典"><a href="#遍历字典" class="headerlink" title="遍历字典"></a>遍历字典</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> grade.items():</div><div class="line">    print(key, value)</div></pre></td></tr></table></figure>
<pre><code>Jedan 100
Bob 90
Mike 80
</code></pre><h4 id="集合set"><a href="#集合set" class="headerlink" title="集合set"></a>集合set</h4><p>用{}表示</p>
<p>set和数学中的集合有相同的性质，即无序，元素不重复，所以不能通过序号来选取元素</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">grade = [<span class="number">100</span>, <span class="number">90</span>, <span class="number">95</span> , <span class="number">90</span>, <span class="number">85</span>, <span class="number">100</span>]</div><div class="line">grade</div></pre></td></tr></table></figure>
<pre><code>[100, 90, 95, 90, 85, 100]
</code></pre><h5 id="创建set"><a href="#创建set" class="headerlink" title="创建set"></a>创建set</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">grade_set = set(grade)</div><div class="line">grade_set</div></pre></td></tr></table></figure>
<pre><code>{85, 90, 95, 100}
</code></pre><h5 id="添加元素-2"><a href="#添加元素-2" class="headerlink" title="添加元素"></a>添加元素</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">grade_set.add(<span class="number">60</span>)</div><div class="line">grade_set</div></pre></td></tr></table></figure>
<pre><code>{60, 85, 90, 95, 100}
</code></pre><h5 id="删除元素-1"><a href="#删除元素-1" class="headerlink" title="删除元素"></a>删除元素</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">grade_set.remove(<span class="number">60</span>)</div><div class="line">grade_set</div></pre></td></tr></table></figure>
<pre><code>{85, 90, 95, 100}
</code></pre><h5 id="求元素长度"><a href="#求元素长度" class="headerlink" title="求元素长度"></a>求元素长度</h5><p>这个可以对很多有重复的list，通过set求不同元素的个数</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">print(len(grade_set))</div><div class="line">len(set([<span class="number">100</span>,<span class="number">100</span>,<span class="number">100</span>,<span class="number">90</span>,<span class="number">90</span>,<span class="number">90</span>]))</div></pre></td></tr></table></figure>
<pre><code>4





2
</code></pre><h4 id="元组Tuples"><a href="#元组Tuples" class="headerlink" title="元组Tuples"></a>元组Tuples</h4><p>用()表示</p>
<p>元组是一个值的有序列表（不可改变）。从很多方面来说，元组和列表都很相似。和列表最重要的不同在于，元组可以在字典中用作键key，还可以作为集合的元素，而列表不行。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">data = &#123;(x, x + <span class="number">1</span>): x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">10</span>)&#125;</div><div class="line">data</div></pre></td></tr></table></figure>
<pre><code>{(0, 1): 0,
 (1, 2): 1,
 (2, 3): 2,
 (3, 4): 3,
 (4, 5): 4,
 (5, 6): 5,
 (6, 7): 6,
 (7, 8): 7,
 (8, 9): 8,
 (9, 10): 9}
</code></pre><h3 id="控制语句"><a href="#控制语句" class="headerlink" title="控制语句"></a>控制语句</h3><ul>
<li>for 循环</li>
<li>while 循环</li>
<li>if 条件语句</li>
</ul>
<p>所有的控制语句后面都必须有冒号：表示，否则编译不成功</p>
<h4 id="for-循环"><a href="#for-循环" class="headerlink" title="for 循环"></a>for 循环</h4><p>在python中 for 循环可以完成绝大部分循环功能。</p>
<h5 id="for-a-in-b"><a href="#for-a-in-b" class="headerlink" title="for a in b:"></a><code>for a in b:</code></h5><p>表示将b中的元素一个一个赋值给a直到所有结束</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">words = [<span class="string">'cat'</span>, <span class="string">'dog'</span>, <span class="string">'good'</span>, <span class="string">'hello'</span>]</div><div class="line"><span class="keyword">for</span> word <span class="keyword">in</span> words:</div><div class="line">    print(word, len(words))</div></pre></td></tr></table></figure>
<pre><code>cat 4
dog 4
good 4
hello 4
</code></pre><h5 id="range"><a href="#range" class="headerlink" title="range()"></a>range()</h5><p>range(a,b)表示生成一个[a, b)的整数列表a默认为0，则range(10)表示生成0到9一共10个整数</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</div><div class="line">    print(i)</div></pre></td></tr></table></figure>
<pre><code>0
1
2
3
4
5
6
7
8
9
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(words)):</div><div class="line">    print(i, words[i])</div></pre></td></tr></table></figure>
<pre><code>0 cat
1 dog
2 good
3 hello
</code></pre><h4 id="while-和-if"><a href="#while-和-if" class="headerlink" title="while 和 if"></a>while 和 if</h4><p>while 和 if 使用与c语言相差不大</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">n = <span class="number">3</span></div><div class="line">x = <span class="number">10</span></div><div class="line">y = x</div><div class="line"><span class="keyword">while</span> n != <span class="number">0</span> :</div><div class="line">    y = y * x</div><div class="line">    n = n - <span class="number">1</span></div><div class="line">y</div></pre></td></tr></table></figure>
<pre><code>10000
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">x = <span class="number">100</span></div><div class="line"><span class="keyword">if</span> x % <span class="number">10</span> == <span class="number">0</span>:</div><div class="line">    print(<span class="string">'x是10的倍数'</span>)</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    print(<span class="string">'x不是10的倍数'</span>)</div></pre></td></tr></table></figure>
<pre><code>x是10的倍数
</code></pre><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p>Python用 <code>def</code> 定义 函数，<code>def 函数名(要传入的参数):</code> 注意不要漏了后面的冒号，否是编译失败。另外，函数的内容必须与函数首部有一个<code>tab</code>键的缩进，否则也会失败。</p>
<p>另外，和c语言一样，传入函数的参数只在函数内部有效，出了函数则无效</p>
<h4 id="函数定义"><a href="#函数定义" class="headerlink" title="函数定义"></a>函数定义</h4><p>比如我们要定义平方公式:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">power_2</span><span class="params">(x)</span>:</span></div><div class="line">    y = x * x</div><div class="line">    <span class="keyword">return</span> y</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">power_2(<span class="number">10</span>)</div></pre></td></tr></table></figure>
<pre><code>100
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## x的n次方</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">power_n</span><span class="params">(x, n)</span>:</span></div><div class="line">    y = x</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,n):</div><div class="line">        y = x * y</div><div class="line">    <span class="keyword">return</span> y</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">power_n(<span class="number">10</span>, n=<span class="number">3</span>)</div></pre></td></tr></table></figure>
<pre><code>1000
</code></pre><h4 id="函数默认值"><a href="#函数默认值" class="headerlink" title="函数默认值"></a>函数默认值</h4><p>如果我们想定义一个n次方函数，可是我们常用的是平方，如果每次都要写n=2就有点麻烦了。所以可以在定义的时候就是先默认n=2这样计算平方的时候只用指定x就可以了，想要计算n次方，像之前那样指定n就可以了。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">power</span><span class="params">(x, n=<span class="number">2</span>)</span>:</span></div><div class="line">    y = x</div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,n):</div><div class="line">        y = x * y</div><div class="line">    <span class="keyword">return</span> y</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">power(<span class="number">10</span>)</div></pre></td></tr></table></figure>
<pre><code>100
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">power(<span class="number">10</span>, <span class="number">4</span>)</div></pre></td></tr></table></figure>
<pre><code>10000
</code></pre><h2 id="NumPy"><a href="#NumPy" class="headerlink" title="NumPy"></a>NumPy</h2><p>Numpy是Python中用于科学计算的核心库。它提供了高性能的多维数组对象，以及相关工具。</p>
<p>内容包含：</p>
<ul>
<li>数组array的基本操作</li>
<li>数组的运算</li>
</ul>
<p>参考：</p>
<ul>
<li>Numpy quickstart tutorial ：<a href="https://docs.scipy.org/doc/numpy-dev/user/quickstart.html" target="_blank" rel="external">https://docs.scipy.org/doc/numpy-dev/user/quickstart.html</a></li>
</ul>
<h3 id="数组Arrays"><a href="#数组Arrays" class="headerlink" title="数组Arrays"></a>数组Arrays</h3><p>简单来说，NumPy的对象就是一个多维数组。它由不同的元素组成一个表，所有的元素类型都相同，并且可以通过整数来访问元素。在NumPy中，维度称为轴（axes），维度的个数是秩（rank），数组的大小是一个由整型数构成的元组，可以描述数组不同维度上的大小。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 导入numpy</span></div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div></pre></td></tr></table></figure>
<h4 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h4><h5 id="1维"><a href="#1维" class="headerlink" title="1维"></a>1维</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">a = np.array([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])</div><div class="line">a</div></pre></td></tr></table></figure>
<pre><code>array([1, 2, 3, 4, 5])
</code></pre><h5 id="2-维"><a href="#2-维" class="headerlink" title="2 维"></a>2 维</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">b = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>]])</div><div class="line">b</div></pre></td></tr></table></figure>
<pre><code>array([[1, 2, 3],
       [4, 5, 6],
       [7, 8, 9]])
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 数组的维度</span></div><div class="line">b.shape</div></pre></td></tr></table></figure>
<pre><code>(3, 3)
</code></pre><h5 id="0数组"><a href="#0数组" class="headerlink" title="0数组"></a>0数组</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">c = np.zeros([<span class="number">3</span>,<span class="number">3</span>])</div><div class="line">c</div></pre></td></tr></table></figure>
<pre><code>array([[ 0.,  0.,  0.],
       [ 0.,  0.,  0.],
       [ 0.,  0.,  0.]])
</code></pre><h5 id="单位数组"><a href="#单位数组" class="headerlink" title="单位数组"></a>单位数组</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">d = np.ones([<span class="number">3</span>,<span class="number">3</span>])</div><div class="line">d</div></pre></td></tr></table></figure>
<pre><code>array([[ 1.,  1.,  1.],
       [ 1.,  1.,  1.],
       [ 1.,  1.,  1.]])
</code></pre><h5 id="随机数组"><a href="#随机数组" class="headerlink" title="随机数组"></a>随机数组</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 标准正态</span></div><div class="line">e = np.random.randn(<span class="number">3</span>,<span class="number">3</span>)</div><div class="line">e</div></pre></td></tr></table></figure>
<pre><code>array([[  5.50864964e-01,   5.81821800e-01,   3.77462077e-01],
       [ -1.99984540e+00,   1.93020102e-01,   5.13948103e-04],
       [ -1.89707738e+00,   6.30736571e-01,  -8.42767663e-01]])
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 0,1 均匀分布</span></div><div class="line">f = np.random.rand(<span class="number">3</span>,<span class="number">3</span>)</div><div class="line">f</div></pre></td></tr></table></figure>
<pre><code>array([[ 0.48710492,  0.76725375,  0.97087062],
       [ 0.91897568,  0.0903537 ,  0.25937125],
       [ 0.11031977,  0.58737946,  0.13152459]])
</code></pre><h4 id="访问数组"><a href="#访问数组" class="headerlink" title="访问数组"></a>访问数组</h4><h5 id="切片访问"><a href="#切片访问" class="headerlink" title="切片访问"></a>切片访问</h5><p>切片和Python列表类似，numpy数组可以使用切片语法。因为数组可以是多维的，所以你必须为每个维度指定好切片。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>], [<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>], [<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>], [<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>]])</div><div class="line">a</div></pre></td></tr></table></figure>
<pre><code>array([[ 1,  2,  3,  4],
       [ 5,  6,  7,  8],
       [ 9, 10, 11, 12],
       [13, 14, 15, 16]])
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a[<span class="number">2</span>,<span class="number">2</span>]</div></pre></td></tr></table></figure>
<pre><code>11
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 取a中第0维的第1到3序列的元素，取第1维的第2到3序列的元素</span></div><div class="line">a[<span class="number">0</span>:<span class="number">3</span>,<span class="number">1</span>:<span class="number">3</span>]</div></pre></td></tr></table></figure>
<pre><code>array([[ 2,  3],
       [ 6,  7],
       [10, 11]])
</code></pre><h5 id="整数访问"><a href="#整数访问" class="headerlink" title="整数访问"></a>整数访问</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 取a第0维的第1和第4序列元素，第1维的第2和第4个元素</span></div><div class="line">a[[<span class="number">0</span>, <span class="number">3</span>], [<span class="number">1</span>, <span class="number">3</span>]]</div></pre></td></tr></table></figure>
<pre><code>array([ 2, 16])
</code></pre><h5 id="布尔型数组访问"><a href="#布尔型数组访问" class="headerlink" title="布尔型数组访问"></a>布尔型数组访问</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">a = np.array([[<span class="number">1</span>,<span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>], [<span class="number">5</span>, <span class="number">6</span>]])</div><div class="line">a</div></pre></td></tr></table></figure>
<pre><code>array([[1, 2],
       [3, 4],
       [5, 6]])
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">bool_idx = (a &gt; <span class="number">2</span>)</div><div class="line">bool_idx</div></pre></td></tr></table></figure>
<pre><code>array([[False, False],
       [ True,  True],
       [ True,  True]], dtype=bool)
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">a[bool_idx]</div></pre></td></tr></table></figure>
<pre><code>array([3, 4, 5, 6])
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 合起来就是</span></div><div class="line">a[a &gt; <span class="number">2</span>]</div></pre></td></tr></table></figure>
<pre><code>array([3, 4, 5, 6])
</code></pre><p>为了教程的简洁，有很多数组访问的细节我们没有详细说明，可以查看<a href="https://docs.scipy.org/doc/numpy/reference/arrays.indexing.html" target="_blank" rel="external">文档</a>。</p>
<h3 id="数组运算"><a href="#数组运算" class="headerlink" title="数组运算"></a>数组运算</h3><p>像Matlab一样，NumPy既可以对数组进行逐个元素运算，也可以进行矩阵运算。一般默认是逐个元素运算。</p>
<h4 id="逐个元素运算"><a href="#逐个元素运算" class="headerlink" title="逐个元素运算"></a>逐个元素运算</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">x = np.array([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>]])</div><div class="line">y = np.array([[<span class="number">5</span>,<span class="number">6</span>],[<span class="number">7</span>,<span class="number">8</span>]])</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">x + y</div></pre></td></tr></table></figure>
<pre><code>array([[ 6,  8],
       [10, 12]])
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">x * y</div></pre></td></tr></table></figure>
<pre><code>array([[ 5, 12],
       [21, 32]])
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">x ** y</div></pre></td></tr></table></figure>
<pre><code>array([[    1,    64],
       [ 2187, 65536]], dtype=int32)
</code></pre><h4 id="内置函数"><a href="#内置函数" class="headerlink" title="内置函数"></a>内置函数</h4><h5 id="求和-np-sum"><a href="#求和-np-sum" class="headerlink" title="求和 np.sum"></a>求和 np.sum</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">x = np.array([[ <span class="number">0</span>,  <span class="number">1</span>,  <span class="number">2</span>,  <span class="number">3</span>],</div><div class="line">       [ <span class="number">4</span>,  <span class="number">5</span>,  <span class="number">6</span>,  <span class="number">7</span>],</div><div class="line">       [ <span class="number">8</span>,  <span class="number">9</span>, <span class="number">10</span>, <span class="number">11</span>],</div><div class="line">       [<span class="number">12</span>, <span class="number">13</span>, <span class="number">14</span>, <span class="number">15</span>]])</div><div class="line">x</div></pre></td></tr></table></figure>
<pre><code>array([[ 0,  1,  2,  3],
       [ 4,  5,  6,  7],
       [ 8,  9, 10, 11],
       [12, 13, 14, 15]])
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 全部求和</span></div><div class="line">np.sum(x)</div></pre></td></tr></table></figure>
<pre><code>120
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 对某个维度求和,如对第0维</span></div><div class="line">np.sum(x, axis=<span class="number">0</span>)</div></pre></td></tr></table></figure>
<pre><code>array([24, 28, 32, 36])
</code></pre><p>想要了解更多函数，可以查看<a href="https://docs.scipy.org/doc/numpy/reference/routines.math.html" target="_blank" rel="external">文档</a>。</p>
<h4 id="数组矩阵运算"><a href="#数组矩阵运算" class="headerlink" title="数组矩阵运算"></a>数组矩阵运算</h4><h5 id="矩阵相乘"><a href="#矩阵相乘" class="headerlink" title="矩阵相乘"></a>矩阵相乘</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">x = np.array([[<span class="number">1</span>,<span class="number">2</span>],[<span class="number">3</span>,<span class="number">4</span>]])</div><div class="line">y = np.array([[<span class="number">5</span>,<span class="number">6</span>],[<span class="number">7</span>,<span class="number">8</span>]])</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">np.dot(x, y)</div></pre></td></tr></table></figure>
<pre><code>array([[19, 22],
       [43, 50]])
</code></pre><h4 id="广播（boardcast）"><a href="#广播（boardcast）" class="headerlink" title="广播（boardcast）"></a>广播（boardcast）</h4><p>广播是一种强有力的机制，它让NumPy可以让不同大小的矩阵在一起进行数学计算。<br>我们常常会有一个小的矩阵和一个大的矩阵，然后我们会需要用小的矩阵对大的矩阵做一些计算。</p>
<p>举个例子，如果我们想要把一个向量加到矩阵的每一行，我们可以通过循环将向量与矩阵每行分别进行相加</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">x = np.array([[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>],[<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>],[<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>],[<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>]])</div><div class="line">x</div></pre></td></tr></table></figure>
<pre><code>array([[ 1,  2,  3],
       [ 4,  5,  6],
       [ 7,  8,  9],
       [10, 11, 12]])
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">y = np.array([<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>])</div><div class="line">y</div></pre></td></tr></table></figure>
<pre><code>array([1, 0, 1])
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">v= np.empty_like(x)</div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(x.shape[<span class="number">0</span>]):</div><div class="line">    v[i, :] = x[i, :] + y</div><div class="line">v</div></pre></td></tr></table></figure>
<pre><code>array([[ 2,  2,  4],
       [ 5,  5,  7],
       [ 8,  8, 10],
       [11, 11, 13]])
</code></pre><p>当x的维度非常大的时候，这样的循环开销的非常大。换一种思路是将向量先拓展成矩阵的维度，然后再进行两者相加。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">y_expand = np.tile(y, (x.shape[<span class="number">0</span>], <span class="number">1</span>))</div><div class="line">y_expand</div></pre></td></tr></table></figure>
<pre><code>array([[1, 0, 1],
       [1, 0, 1],
       [1, 0, 1],
       [1, 0, 1]])
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">x + y_expand</div></pre></td></tr></table></figure>
<pre><code>array([[ 2,  2,  4],
       [ 5,  5,  7],
       [ 8,  8, 10],
       [11, 11, 13]])
</code></pre><p>更方便的是，Numpy广播机制可以让我们不用创建y_expand，就能直接运算</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">x + y</div></pre></td></tr></table></figure>
<pre><code>array([[ 2,  2,  4],
       [ 5,  5,  7],
       [ 8,  8, 10],
       [11, 11, 13]])
</code></pre><p>对两个数组使用广播机制要遵守下列规则：</p>
<ul>
<li>如果数组的秩不同，使用1来将秩较小的数组进行扩展，直到两个数组的尺寸的长度都一样。</li>
<li>如果两个数组在某个维度上的长度是一样的，或者其中一个数组在该维度上长度为1，那么我们就说这两个数组在该维度上是相容的。</li>
<li>如果两个数组在所有维度上都是相容的，他们就能使用广播。</li>
<li>如果两个输入数组的尺寸不同，那么注意其中较大的那个尺寸。因为广播之后，两个数组的尺寸将和那个较大的尺寸一样。</li>
<li><p>在任何一个维度上，如果一个数组的长度为1，另一个数组长度大于1，那么在该维度上，就好像是对第一个数组进行了复制。</p>
<p>如果上述解释看不明白，强烈推荐阅读<a href="https://docs.scipy.org/doc/numpy/user/basics.broadcasting.html" target="_blank" rel="external">文档</a>中的例子和这个<a href="http://scipy.github.io/old-wiki/pages/EricsBroadcastingDoc" target="_blank" rel="external">解释</a>。</p>
</li>
</ul>
<p>这篇教程涉及了你需要了解的numpy中的一些重要内容，但是numpy远不止如此。可以查阅<a href="https://docs.scipy.org/doc/numpy/reference/" target="_blank" rel="external">numpy</a>文档来了解更多。</p>
<h2 id="Pandas"><a href="#Pandas" class="headerlink" title="Pandas"></a>Pandas</h2><p>pandas是建立在NumPy之上，一个提供快速，灵活和表达性数据结构的Python包，旨在使“关系”或“标记”数据变得简单直观。pandas的两个主要数据结构Series（一维）和DataFrame（二维）处理了金融，统计，社会中的绝大多数典型用例科学，以及许多工程领域。本文主要以DateFrame展示。</p>
<p>内容包括：</p>
<ul>
<li>创建DateFrame</li>
<li>浏览数据</li>
<li>筛选数据</li>
<li>读写数据</li>
</ul>
<p>参考：</p>
<ul>
<li>10分钟学会pandas：<a href="http://python.usyiyi.cn/documents/Pandas_0j2/10min.html#stats" target="_blank" rel="external">http://python.usyiyi.cn/documents/Pandas_0j2/10min.html#stats</a></li>
</ul>
<h3 id="创建DateFrame"><a href="#创建DateFrame" class="headerlink" title="创建DateFrame"></a>创建DateFrame</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</div></pre></td></tr></table></figure>
<h4 id="通过传入NumPy数组创建"><a href="#通过传入NumPy数组创建" class="headerlink" title="通过传入NumPy数组创建"></a>通过传入NumPy数组创建</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">data = np.random.randn(<span class="number">6</span>,<span class="number">4</span>)</div><div class="line">df = pd.DataFrame(data=data, columns=[<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>], index=pd.date_range(<span class="string">'20171001'</span>, periods=<span class="number">6</span>))</div><div class="line">df</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2017-10-01</th>
      <td>-1.573653</td>
      <td>-0.040178</td>
      <td>0.004887</td>
      <td>-0.267084</td>
    </tr>
    <tr>
      <th>2017-10-02</th>
      <td>0.855367</td>
      <td>-1.566385</td>
      <td>-1.051637</td>
      <td>-1.490905</td>
    </tr>
    <tr>
      <th>2017-10-03</th>
      <td>-0.364353</td>
      <td>1.540080</td>
      <td>3.291927</td>
      <td>0.008567</td>
    </tr>
    <tr>
      <th>2017-10-04</th>
      <td>-2.748076</td>
      <td>-1.264191</td>
      <td>-0.848133</td>
      <td>-0.406499</td>
    </tr>
    <tr>
      <th>2017-10-05</th>
      <td>0.452197</td>
      <td>-2.253306</td>
      <td>-0.191127</td>
      <td>1.459672</td>
    </tr>
    <tr>
      <th>2017-10-06</th>
      <td>-0.128940</td>
      <td>0.865005</td>
      <td>-0.398414</td>
      <td>-0.185351</td>
    </tr>
  </tbody>
</table>
</div>



<h4 id="通过字典对应创建"><a href="#通过字典对应创建" class="headerlink" title="通过字典对应创建"></a>通过字典对应创建</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">df2 = pd.DataFrame(data = &#123; <span class="string">'A'</span> : <span class="number">1.</span>,</div><div class="line">                    <span class="string">'B'</span> : pd.Timestamp(<span class="string">'20130102'</span>),</div><div class="line">                    <span class="string">'C'</span> : pd.Series(<span class="number">1</span>,index=list(range(<span class="number">4</span>)),dtype=<span class="string">'float32'</span>),</div><div class="line">                    <span class="string">'D'</span> : np.array([<span class="number">3</span>] * <span class="number">4</span>,dtype=<span class="string">'int32'</span>),</div><div class="line">                    <span class="string">'E'</span> : pd.Categorical([<span class="string">"test"</span>,<span class="string">"train"</span>,<span class="string">"test"</span>,<span class="string">"train"</span>]),</div><div class="line">                    <span class="string">'F'</span> : <span class="string">'foo'</span> &#125;)</div><div class="line">df2</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
      <th>E</th>
      <th>F</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1.0</td>
      <td>2013-01-02</td>
      <td>1.0</td>
      <td>3</td>
      <td>test</td>
      <td>foo</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1.0</td>
      <td>2013-01-02</td>
      <td>1.0</td>
      <td>3</td>
      <td>train</td>
      <td>foo</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1.0</td>
      <td>2013-01-02</td>
      <td>1.0</td>
      <td>3</td>
      <td>test</td>
      <td>foo</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1.0</td>
      <td>2013-01-02</td>
      <td>1.0</td>
      <td>3</td>
      <td>train</td>
      <td>foo</td>
    </tr>
  </tbody>
</table>
</div>



<h3 id="浏览数据"><a href="#浏览数据" class="headerlink" title="浏览数据"></a>浏览数据</h3><h4 id="查看头部"><a href="#查看头部" class="headerlink" title="查看头部"></a>查看头部</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df.head()</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2017-10-01</th>
      <td>-1.573653</td>
      <td>-0.040178</td>
      <td>0.004887</td>
      <td>-0.267084</td>
    </tr>
    <tr>
      <th>2017-10-02</th>
      <td>0.855367</td>
      <td>-1.566385</td>
      <td>-1.051637</td>
      <td>-1.490905</td>
    </tr>
    <tr>
      <th>2017-10-03</th>
      <td>-0.364353</td>
      <td>1.540080</td>
      <td>3.291927</td>
      <td>0.008567</td>
    </tr>
    <tr>
      <th>2017-10-04</th>
      <td>-2.748076</td>
      <td>-1.264191</td>
      <td>-0.848133</td>
      <td>-0.406499</td>
    </tr>
    <tr>
      <th>2017-10-05</th>
      <td>0.452197</td>
      <td>-2.253306</td>
      <td>-0.191127</td>
      <td>1.459672</td>
    </tr>
  </tbody>
</table>
</div>



<h4 id="查看尾部"><a href="#查看尾部" class="headerlink" title="查看尾部"></a>查看尾部</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df.tail()</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2017-10-02</th>
      <td>0.855367</td>
      <td>-1.566385</td>
      <td>-1.051637</td>
      <td>-1.490905</td>
    </tr>
    <tr>
      <th>2017-10-03</th>
      <td>-0.364353</td>
      <td>1.540080</td>
      <td>3.291927</td>
      <td>0.008567</td>
    </tr>
    <tr>
      <th>2017-10-04</th>
      <td>-2.748076</td>
      <td>-1.264191</td>
      <td>-0.848133</td>
      <td>-0.406499</td>
    </tr>
    <tr>
      <th>2017-10-05</th>
      <td>0.452197</td>
      <td>-2.253306</td>
      <td>-0.191127</td>
      <td>1.459672</td>
    </tr>
    <tr>
      <th>2017-10-06</th>
      <td>-0.128940</td>
      <td>0.865005</td>
      <td>-0.398414</td>
      <td>-0.185351</td>
    </tr>
  </tbody>
</table>
</div>



<h4 id="显示索引"><a href="#显示索引" class="headerlink" title="显示索引"></a>显示索引</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df.index</div></pre></td></tr></table></figure>
<pre><code>DatetimeIndex([&#39;2017-10-01&#39;, &#39;2017-10-02&#39;, &#39;2017-10-03&#39;, &#39;2017-10-04&#39;,
               &#39;2017-10-05&#39;, &#39;2017-10-06&#39;],
              dtype=&#39;datetime64[ns]&#39;, freq=&#39;D&#39;)
</code></pre><h4 id="显示列标题"><a href="#显示列标题" class="headerlink" title="显示列标题"></a>显示列标题</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df.columns</div></pre></td></tr></table></figure>
<pre><code>Index([&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;], dtype=&#39;object&#39;)
</code></pre><h4 id="显示值"><a href="#显示值" class="headerlink" title="显示值"></a>显示值</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df.values</div></pre></td></tr></table></figure>
<pre><code>array([[-1.57365333, -0.04017843,  0.0048873 , -0.26708406],
       [ 0.85536723, -1.56638508, -1.05163725, -1.49090484],
       [-0.36435297,  1.54007977,  3.29192749,  0.00856722],
       [-2.74807557, -1.26419063, -0.84813327, -0.40649889],
       [ 0.45219662, -2.25330624, -0.19112681,  1.45967166],
       [-0.12893988,  0.8650045 , -0.39841404, -0.18535124]])
</code></pre><h4 id="快速统计摘要"><a href="#快速统计摘要" class="headerlink" title="快速统计摘要"></a>快速统计摘要</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df.describe()</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>count</th>
      <td>6.000000</td>
      <td>6.000000</td>
      <td>6.000000</td>
      <td>6.000000</td>
    </tr>
    <tr>
      <th>mean</th>
      <td>-0.584576</td>
      <td>-0.453163</td>
      <td>0.134584</td>
      <td>-0.146933</td>
    </tr>
    <tr>
      <th>std</th>
      <td>1.346361</td>
      <td>1.484499</td>
      <td>1.596789</td>
      <td>0.948146</td>
    </tr>
    <tr>
      <th>min</th>
      <td>-2.748076</td>
      <td>-2.253306</td>
      <td>-1.051637</td>
      <td>-1.490905</td>
    </tr>
    <tr>
      <th>25%</th>
      <td>-1.271328</td>
      <td>-1.490836</td>
      <td>-0.735703</td>
      <td>-0.371645</td>
    </tr>
    <tr>
      <th>50%</th>
      <td>-0.246646</td>
      <td>-0.652185</td>
      <td>-0.294770</td>
      <td>-0.226218</td>
    </tr>
    <tr>
      <th>75%</th>
      <td>0.306912</td>
      <td>0.638709</td>
      <td>-0.044116</td>
      <td>-0.039912</td>
    </tr>
    <tr>
      <th>max</th>
      <td>0.855367</td>
      <td>1.540080</td>
      <td>3.291927</td>
      <td>1.459672</td>
    </tr>
  </tbody>
</table>
</div>



<h4 id="按轴排序"><a href="#按轴排序" class="headerlink" title="按轴排序"></a>按轴排序</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df.sort_index(axis=<span class="number">1</span>, ascending=<span class="keyword">False</span>)</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>D</th>
      <th>C</th>
      <th>B</th>
      <th>A</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2017-10-01</th>
      <td>-0.267084</td>
      <td>0.004887</td>
      <td>-0.040178</td>
      <td>-1.573653</td>
    </tr>
    <tr>
      <th>2017-10-02</th>
      <td>-1.490905</td>
      <td>-1.051637</td>
      <td>-1.566385</td>
      <td>0.855367</td>
    </tr>
    <tr>
      <th>2017-10-03</th>
      <td>0.008567</td>
      <td>3.291927</td>
      <td>1.540080</td>
      <td>-0.364353</td>
    </tr>
    <tr>
      <th>2017-10-04</th>
      <td>-0.406499</td>
      <td>-0.848133</td>
      <td>-1.264191</td>
      <td>-2.748076</td>
    </tr>
    <tr>
      <th>2017-10-05</th>
      <td>1.459672</td>
      <td>-0.191127</td>
      <td>-2.253306</td>
      <td>0.452197</td>
    </tr>
    <tr>
      <th>2017-10-06</th>
      <td>-0.185351</td>
      <td>-0.398414</td>
      <td>0.865005</td>
      <td>-0.128940</td>
    </tr>
  </tbody>
</table>
</div>



<h4 id="按值排序"><a href="#按值排序" class="headerlink" title="按值排序"></a>按值排序</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df.sort_values(by=<span class="string">'A'</span>, ascending=<span class="keyword">True</span>)</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2017-10-04</th>
      <td>-2.748076</td>
      <td>-1.264191</td>
      <td>-0.848133</td>
      <td>-0.406499</td>
    </tr>
    <tr>
      <th>2017-10-01</th>
      <td>-1.573653</td>
      <td>-0.040178</td>
      <td>0.004887</td>
      <td>-0.267084</td>
    </tr>
    <tr>
      <th>2017-10-03</th>
      <td>-0.364353</td>
      <td>1.540080</td>
      <td>3.291927</td>
      <td>0.008567</td>
    </tr>
    <tr>
      <th>2017-10-06</th>
      <td>-0.128940</td>
      <td>0.865005</td>
      <td>-0.398414</td>
      <td>-0.185351</td>
    </tr>
    <tr>
      <th>2017-10-05</th>
      <td>0.452197</td>
      <td>-2.253306</td>
      <td>-0.191127</td>
      <td>1.459672</td>
    </tr>
    <tr>
      <th>2017-10-02</th>
      <td>0.855367</td>
      <td>-1.566385</td>
      <td>-1.051637</td>
      <td>-1.490905</td>
    </tr>
  </tbody>
</table>
</div>



<h3 id="选择数据"><a href="#选择数据" class="headerlink" title="选择数据"></a>选择数据</h3><h4 id="通过位置选择"><a href="#通过位置选择" class="headerlink" title="通过位置选择"></a>通过位置选择</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df.iloc[<span class="number">0</span>:<span class="number">3</span>, <span class="number">1</span>:<span class="number">4</span>]</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2017-10-01</th>
      <td>-0.040178</td>
      <td>0.004887</td>
      <td>-0.267084</td>
    </tr>
    <tr>
      <th>2017-10-02</th>
      <td>-1.566385</td>
      <td>-1.051637</td>
      <td>-1.490905</td>
    </tr>
    <tr>
      <th>2017-10-03</th>
      <td>1.540080</td>
      <td>3.291927</td>
      <td>0.008567</td>
    </tr>
  </tbody>
</table>
</div>



<h4 id="通过标签选择"><a href="#通过标签选择" class="headerlink" title="通过标签选择"></a>通过标签选择</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 使用标签获取横截面</span></div><div class="line">df.loc[<span class="string">'2017-10-01'</span>]</div></pre></td></tr></table></figure>
<pre><code>A   -1.573653
B   -0.040178
C    0.004887
D   -0.267084
Name: 2017-10-01 00:00:00, dtype: float64
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 按标签选择多轴</span></div><div class="line">df.loc[:, [<span class="string">'A'</span>, <span class="string">'C'</span>]]</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>C</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2017-10-01</th>
      <td>-1.573653</td>
      <td>0.004887</td>
    </tr>
    <tr>
      <th>2017-10-02</th>
      <td>0.855367</td>
      <td>-1.051637</td>
    </tr>
    <tr>
      <th>2017-10-03</th>
      <td>-0.364353</td>
      <td>3.291927</td>
    </tr>
    <tr>
      <th>2017-10-04</th>
      <td>-2.748076</td>
      <td>-0.848133</td>
    </tr>
    <tr>
      <th>2017-10-05</th>
      <td>0.452197</td>
      <td>-0.191127</td>
    </tr>
    <tr>
      <th>2017-10-06</th>
      <td>-0.128940</td>
      <td>-0.398414</td>
    </tr>
  </tbody>
</table>
</div>




<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 显示标签切片，两个端点都包含</span></div><div class="line">df.loc[<span class="string">'2017-10-01'</span>:<span class="string">'2017-10-03'</span>, [<span class="string">'B'</span>, <span class="string">'D'</span>]]</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>B</th>
      <th>D</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2017-10-01</th>
      <td>-0.040178</td>
      <td>-0.267084</td>
    </tr>
    <tr>
      <th>2017-10-02</th>
      <td>-1.566385</td>
      <td>-1.490905</td>
    </tr>
    <tr>
      <th>2017-10-03</th>
      <td>1.540080</td>
      <td>0.008567</td>
    </tr>
  </tbody>
</table>
</div>



<h4 id="通过条件选择"><a href="#通过条件选择" class="headerlink" title="通过条件选择"></a>通过条件选择</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df[df.A &gt; <span class="number">0</span>]</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2017-10-02</th>
      <td>0.855367</td>
      <td>-1.566385</td>
      <td>-1.051637</td>
      <td>-1.490905</td>
    </tr>
    <tr>
      <th>2017-10-05</th>
      <td>0.452197</td>
      <td>-2.253306</td>
      <td>-0.191127</td>
      <td>1.459672</td>
    </tr>
  </tbody>
</table>
</div>




<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 使用isin() 进行过滤</span></div><div class="line">df2 = df.copy()</div><div class="line">df2[<span class="string">'E'</span>] = [<span class="string">'one'</span>, <span class="string">'one'</span>,<span class="string">'two'</span>,<span class="string">'three'</span>,<span class="string">'four'</span>,<span class="string">'three'</span>]</div><div class="line">df2</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
      <th>E</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2017-10-01</th>
      <td>-1.573653</td>
      <td>-0.040178</td>
      <td>0.004887</td>
      <td>-0.267084</td>
      <td>one</td>
    </tr>
    <tr>
      <th>2017-10-02</th>
      <td>0.855367</td>
      <td>-1.566385</td>
      <td>-1.051637</td>
      <td>-1.490905</td>
      <td>one</td>
    </tr>
    <tr>
      <th>2017-10-03</th>
      <td>-0.364353</td>
      <td>1.540080</td>
      <td>3.291927</td>
      <td>0.008567</td>
      <td>two</td>
    </tr>
    <tr>
      <th>2017-10-04</th>
      <td>-2.748076</td>
      <td>-1.264191</td>
      <td>-0.848133</td>
      <td>-0.406499</td>
      <td>three</td>
    </tr>
    <tr>
      <th>2017-10-05</th>
      <td>0.452197</td>
      <td>-2.253306</td>
      <td>-0.191127</td>
      <td>1.459672</td>
      <td>four</td>
    </tr>
    <tr>
      <th>2017-10-06</th>
      <td>-0.128940</td>
      <td>0.865005</td>
      <td>-0.398414</td>
      <td>-0.185351</td>
      <td>three</td>
    </tr>
  </tbody>
</table>
</div>




<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df2[df2[<span class="string">'E'</span>].isin([<span class="string">'two'</span>,<span class="string">'four'</span>])]</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
      <th>E</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2017-10-03</th>
      <td>-0.364353</td>
      <td>1.540080</td>
      <td>3.291927</td>
      <td>0.008567</td>
      <td>two</td>
    </tr>
    <tr>
      <th>2017-10-05</th>
      <td>0.452197</td>
      <td>-2.253306</td>
      <td>-0.191127</td>
      <td>1.459672</td>
      <td>four</td>
    </tr>
  </tbody>
</table>
</div>



<h3 id="读取和写入数据"><a href="#读取和写入数据" class="headerlink" title="读取和写入数据"></a>读取和写入数据</h3><h4 id="CSV"><a href="#CSV" class="headerlink" title="CSV"></a>CSV</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 写入数据</span></div><div class="line">df.to_csv(path_or_buf=<span class="string">'./data/foo.csv'</span>)  <span class="comment">##存在data文件夹中，如果没有要先创建一个data文件夹</span></div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 读入数据</span></div><div class="line">df3 = pd.read_csv(<span class="string">'./data/foo.csv'</span>, index_col=<span class="number">0</span>)</div><div class="line">df3</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2017-10-01</th>
      <td>-1.573653</td>
      <td>-0.040178</td>
      <td>0.004887</td>
      <td>-0.267084</td>
    </tr>
    <tr>
      <th>2017-10-02</th>
      <td>0.855367</td>
      <td>-1.566385</td>
      <td>-1.051637</td>
      <td>-1.490905</td>
    </tr>
    <tr>
      <th>2017-10-03</th>
      <td>-0.364353</td>
      <td>1.540080</td>
      <td>3.291927</td>
      <td>0.008567</td>
    </tr>
    <tr>
      <th>2017-10-04</th>
      <td>-2.748076</td>
      <td>-1.264191</td>
      <td>-0.848133</td>
      <td>-0.406499</td>
    </tr>
    <tr>
      <th>2017-10-05</th>
      <td>0.452197</td>
      <td>-2.253306</td>
      <td>-0.191127</td>
      <td>1.459672</td>
    </tr>
    <tr>
      <th>2017-10-06</th>
      <td>-0.128940</td>
      <td>0.865005</td>
      <td>-0.398414</td>
      <td>-0.185351</td>
    </tr>
  </tbody>
</table>
</div>



<h4 id="Excel"><a href="#Excel" class="headerlink" title="Excel"></a>Excel</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 写入</span></div><div class="line">df.to_excel(<span class="string">'./data/foo.xlsx'</span>, sheet_name=<span class="string">'Sheet1'</span>)</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 读入</span></div><div class="line">df4 = pd.read_excel(<span class="string">'./data/foo.xlsx'</span>, sheetname=<span class="string">'Sheet1'</span>, index_col=<span class="number">0</span>)</div><div class="line">df4</div></pre></td></tr></table></figure>
<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>A</th>
      <th>B</th>
      <th>C</th>
      <th>D</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>2017-10-01</th>
      <td>-1.573653</td>
      <td>-0.040178</td>
      <td>0.004887</td>
      <td>-0.267084</td>
    </tr>
    <tr>
      <th>2017-10-02</th>
      <td>0.855367</td>
      <td>-1.566385</td>
      <td>-1.051637</td>
      <td>-1.490905</td>
    </tr>
    <tr>
      <th>2017-10-03</th>
      <td>-0.364353</td>
      <td>1.540080</td>
      <td>3.291927</td>
      <td>0.008567</td>
    </tr>
    <tr>
      <th>2017-10-04</th>
      <td>-2.748076</td>
      <td>-1.264191</td>
      <td>-0.848133</td>
      <td>-0.406499</td>
    </tr>
    <tr>
      <th>2017-10-05</th>
      <td>0.452197</td>
      <td>-2.253306</td>
      <td>-0.191127</td>
      <td>1.459672</td>
    </tr>
    <tr>
      <th>2017-10-06</th>
      <td>-0.128940</td>
      <td>0.865005</td>
      <td>-0.398414</td>
      <td>-0.185351</td>
    </tr>
  </tbody>
</table>
</div>



<p>更多Pandas内容请查阅<a href="https://pandas.pydata.org/pandas-docs/stable/index.html" target="_blank" rel="external">官方文档</a></p>
<h2 id="Matplotlib"><a href="#Matplotlib" class="headerlink" title="Matplotlib"></a>Matplotlib</h2><p>Matplotlib是一个作图库。这里简要介绍matplotlib.pyplot模块，功能和MATLAB的作图功能类似。</p>
<p>内容包括：</p>
<ul>
<li>绘图</li>
<li>子图</li>
<li>其他类型图</li>
</ul>
<p>参考：</p>
<ul>
<li>matplotlib tutorial： <a href="https://matplotlib.org/tutorials/index.html" target="_blank" rel="external">https://matplotlib.org/tutorials/index.html</a></li>
</ul>
<p>在jupyter 运行matplotlib的时候，要先设置 <code>%matplotlib inline</code> 使得图像能在jupyter中显示</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line">%matplotlib inline</div></pre></td></tr></table></figure>
<h3 id="绘图"><a href="#绘图" class="headerlink" title="绘图"></a>绘图</h3><p>matplotlib库中最重要的函数是Plot。该函数允许你做出2D图形，如下：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">x = np.linspace(<span class="number">0</span>, <span class="number">3</span> * np.pi, <span class="number">1000</span>) <span class="comment">##生成[0, 3 pi]之间的1000个有序数</span></div><div class="line">y = np.sin(x)</div></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">plt.plot(x, y)  <span class="comment">##绘图</span></div><div class="line">plt.show() <span class="comment">##图像展示</span></div></pre></td></tr></table></figure>
<p><img src="/2017/10/14/数据挖掘之python/python-教程/output_187_0.png" alt="png"></p>
<h4 id="图像的一些基本操作"><a href="#图像的一些基本操作" class="headerlink" title="图像的一些基本操作"></a>图像的一些基本操作</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 控制图像大小</span></div><div class="line">fig = plt.figure(figsize=(<span class="number">10</span>,<span class="number">6</span>))</div><div class="line"></div><div class="line"><span class="comment">## 绘图</span></div><div class="line"><span class="comment">## 添加标签，改变颜色</span></div><div class="line">plt.plot(x, y, c = <span class="string">'g'</span>,label=<span class="string">'f(x) = sin(x)'</span>)</div><div class="line"></div><div class="line"><span class="comment">## 添加不同的图</span></div><div class="line">z = np.cos(x)</div><div class="line">plt.plot(x, z, label = <span class="string">'f(x) = cos(x)'</span>)</div><div class="line"></div><div class="line"><span class="comment">##添加x标签和y标签</span></div><div class="line">plt.xlabel(<span class="string">'x axis label'</span>)</div><div class="line">plt.ylabel(<span class="string">'y axis label'</span>)</div><div class="line"></div><div class="line"><span class="comment">## 添加图例</span></div><div class="line">plt.legend()</div><div class="line"></div><div class="line"><span class="comment">## 添加标题</span></div><div class="line">plt.title(<span class="string">'cos(x) and sin(x)'</span>)</div><div class="line"></div><div class="line"><span class="comment">##保存图像</span></div><div class="line"><span class="comment">#fig.savefig('fig.png')</span></div><div class="line"></div><div class="line">plt.show()</div></pre></td></tr></table></figure>
<p><img src="/2017/10/14/数据挖掘之python/python-教程/output_189_0.png" alt="png"></p>
<p>可以在文档中阅读更多关于<a href="http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.plot" target="_blank" rel="external">plot</a>的内容。</p>
<h3 id="绘制子图"><a href="#绘制子图" class="headerlink" title="绘制子图"></a>绘制子图</h3><p>可以使用subplot函数来在一幅图中画不同的东西</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 定义子图的位置</span></div><div class="line">plt.subplot(<span class="number">2</span>,<span class="number">1</span>,<span class="number">1</span>) <span class="comment">##表示创建2行，1列个子图，然后对第1个子图进行操作</span></div><div class="line">plt.plot(x,y, label=<span class="string">'sin(x)'</span>)</div><div class="line">plt.legend()</div><div class="line">plt.title(<span class="string">'sin(x)'</span>)</div><div class="line"></div><div class="line">plt.subplot(<span class="number">2</span>,<span class="number">1</span>,<span class="number">2</span>) <span class="comment">##对第2个子图进行操作</span></div><div class="line">plt.plot(x, z, label=<span class="string">'cos(x)'</span>)</div><div class="line">plt.legend()</div><div class="line">plt.title(<span class="string">'con(x)'</span>)</div></pre></td></tr></table></figure>
<pre><code>&lt;matplotlib.text.Text at 0x1edb5161978&gt;
</code></pre><p><img src="/2017/10/14/数据挖掘之python/python-教程/output_192_1.png" alt="png"></p>
<h3 id="其他类型的图像"><a href="#其他类型的图像" class="headerlink" title="其他类型的图像"></a>其他类型的图像</h3><h4 id="散点图"><a href="#散点图" class="headerlink" title="散点图"></a>散点图</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">plt.scatter(np.random.rand(<span class="number">100</span>), np.random.rand(<span class="number">100</span>))</div></pre></td></tr></table></figure>
<pre><code>&lt;matplotlib.collections.PathCollection at 0x1edb537add8&gt;
</code></pre><p><img src="/2017/10/14/数据挖掘之python/python-教程/output_195_1.png" alt="png"></p>
<h4 id="hist图"><a href="#hist图" class="headerlink" title="hist图"></a>hist图</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">plt.hist(np.random.randn(<span class="number">1000</span>))</div></pre></td></tr></table></figure>
<pre><code>(array([   3.,   14.,   75.,  157.,  239.,  234.,  183.,   67.,   23.,    5.]),
 array([-3.42952578, -2.75353143, -2.07753707, -1.40154271, -0.72554835,
        -0.049554  ,  0.62644036,  1.30243472,  1.97842908,  2.65442343,
         3.33041779]),
 &lt;a list of 10 Patch objects&gt;)
</code></pre><p><img src="/2017/10/14/数据挖掘之python/python-教程/output_197_1.png" alt="png"></p>
<h3 id="pandas数据画图"><a href="#pandas数据画图" class="headerlink" title="pandas数据画图"></a>pandas数据画图</h3><p><a href="https://pandas.pydata.org/pandas-docs/stable/visualization.html" target="_blank" rel="external">官方文档</a></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">df = pd.DataFrame(np.random.randn(<span class="number">1000</span>, <span class="number">4</span>), index=pd.date_range(<span class="string">'1/1/2000'</span>, periods=<span class="number">1000</span>), columns=list(<span class="string">'ABCD'</span>))</div><div class="line">df.cumsum().plot()</div></pre></td></tr></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1edb53b2f60&gt;
</code></pre><p><img src="/2017/10/14/数据挖掘之python/python-教程/output_199_1.png" alt="png"></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">df.loc[:,<span class="string">'A'</span>].plot(kind=<span class="string">'hist'</span>)</div></pre></td></tr></table></figure>
<pre><code>&lt;matplotlib.axes._subplots.AxesSubplot at 0x1edb55dcf28&gt;
</code></pre><p><img src="/2017/10/14/数据挖掘之python/python-教程/output_200_1.png" alt="png"></p>
<p>更多Matplotlib内容，请查阅<a href="https://matplotlib.org/tutorials/index.html" target="_blank" rel="external">官方文档</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;Python-Tutorial&quot;&gt;&lt;a href=&quot;#Python
    
    </summary>
    
      <category term="数据挖掘之python" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E4%B9%8Bpython/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="numpy" scheme="http://yoursite.com/tags/numpy/"/>
    
      <category term="matplotlib" scheme="http://yoursite.com/tags/matplotlib/"/>
    
  </entry>
  
  <entry>
    <title>python 环境搭建</title>
    <link href="http://yoursite.com/2017/10/14/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E4%B9%8Bpython/python-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>http://yoursite.com/2017/10/14/数据挖掘之python/python-环境搭建/</id>
    <published>2017-10-14T08:14:18.000Z</published>
    <updated>2017-10-14T08:42:11.038Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>更好的阅读体验请前往：<a href="https://nbviewer.jupyter.org/github/Jedan010/data-mining-in-python/blob/master/0.1.python_env.ipynb" target="_blank" rel="external">https://nbviewer.jupyter.org/github/Jedan010/data-mining-in-python/blob/master/0.1.python_env.ipynb</a></p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="https://www.anaconda.com/" target="_blank" rel="external">Anaconda</a>是一个用于科学计算的Python发行版，支持 Linux, Mac, Windows系统，提供了包管理与环境管理的功能，可以很方便地解决多版本python并存、切换以及各种第三方包安装问题。Anaconda利用工具/命令conda来进行package和environment的管理，并且已经包含了Python和相关的配套工具。</p>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>官网下载：<a href="https://www.anaconda.com/download/" target="_blank" rel="external">https://www.anaconda.com/download/</a></li>
<li>清华大学镜像下载：<a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/" target="_blank" rel="external">https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/</a> (推荐）</li>
</ul>
<p>推荐使用清华大学镜像下载，选择对应的版本，如：”Anaconda3-5.0.0-Windows-x86_64.exe”.<br><img src="/2017/10/14/数据挖掘之python/python-环境搭建/1.png" alt="下载"></p>
<p>下载好之后默认安装就好，最后会询问是否加入到系统变量，选择加入。</p>
<h3 id="python版本问题"><a href="#python版本问题" class="headerlink" title="python版本问题"></a>python版本问题</h3><p>Python有两个支持的版本，分别是2.7和3.5+。3.0以上的版本与2.7版本有了不少的改动，所以在3.0+的版本中2.7的语句有些是编译不成功的。本教程使用的版本是3.5+版本。要想查看python的版本，可以在cmd命令行中输入 <code>python --version</code> 来查看 <img src="/2017/10/14/数据挖掘之python/python-环境搭建/10.png" alt="python version"></p>
<h2 id="jupyter"><a href="#jupyter" class="headerlink" title="jupyter"></a>jupyter</h2><h3 id="打开jupyter"><a href="#打开jupyter" class="headerlink" title="打开jupyter"></a>打开jupyter</h3><ul>
<li>下载好了之后,按 <code>win(开始键)</code>+<code>R</code> 然后输入<code>cmd</code>后点确定，会弹出一个界面。</li>
<li>在弹出的界面里面输入<code>jupytre notebook</code>,会弹出一个网页.</li>
<li>点击右上角的 <code>new</code> 选择 <code>python3</code> 即可创建并打开一个新的可运行 python<code>的笔记本jupyter</code>。</li>
</ul>
<p><img src="/2017/10/14/数据挖掘之python/python-环境搭建/2.png" alt="打开cmd"> <img src="/2017/10/14/数据挖掘之python/python-环境搭建/3.png" alt="cmd"> <img src="/2017/10/14/数据挖掘之python/python-环境搭建/4.png" alt="jupyter"></p>
<h3 id="jupyter操作"><a href="#jupyter操作" class="headerlink" title="jupyter操作"></a>jupyter操作</h3><p>主要：代码运行、保存、文件重命名、文件上传</p>
<p>在单元框里面写入代码后，按<code>Shift</code>+<code>Enter</code>键即可运行代码，显示结果。也可以选择导航栏中的按钮运行代码。<br><img src="/2017/10/14/数据挖掘之python/python-环境搭建/5.png" alt="jupyter run"><br>按左上角的保存键即可保存文件,或者按file下的save and checkpoint。<br><img src="/2017/10/14/数据挖掘之python/python-环境搭建/6.png" alt="save and rename"></p>
<p>文件上传在jupyter主界面点右上角的upload后选择要上传的文件，再点一次upload即可上传文件。<br><img src="/2017/10/14/数据挖掘之python/python-环境搭建/7.png" alt="upload_1"> <img src="/2017/10/14/数据挖掘之python/python-环境搭建/8.png" alt="upload_2"></p>
<h3 id="选择在不同的工作目录下运行jupyter"><a href="#选择在不同的工作目录下运行jupyter" class="headerlink" title="选择在不同的工作目录下运行jupyter"></a>选择在不同的工作目录下运行jupyter</h3><p>打开你要运行的工作目录，也就是打开你要存放代码的文件夹，然后按住Shift和右键,点击在此处打开powershell，然后和之前的一样，输入jupyter notebook即可在这个文件夹下打开jupyter，而且文件也保存在这个文件夹下，可以方便读取和存储数据在这个文件夹下。<br><img src="/2017/10/14/数据挖掘之python/python-环境搭建/9.png" alt="powershell"></p>
<h2 id="包管理"><a href="#包管理" class="headerlink" title="包管理"></a>包管理</h2><h3 id="python数据挖掘主要使用的包"><a href="#python数据挖掘主要使用的包" class="headerlink" title="python数据挖掘主要使用的包"></a>python数据挖掘主要使用的包</h3><p>python本身的非常小，编写简单，容易上手。又由于python有各种各样的拓展包，所以python的功能非常强大。在数据挖掘领域，我们主要使用的拓展包为：</p>
<ul>
<li>numpy</li>
<li>scipy</li>
<li>pandas</li>
<li>matplotlib</li>
<li>sklearn</li>
</ul>
<p> 其中<a href="http://www.numpy.org/" target="_blank" rel="external"><code>numpy</code></a>是科学运算的基础，可以很方便的对数据进行多个维度操作。 <a href="https://www.scipy.org/" target="_blank" rel="external"><code>Scipy</code></a>是一个基于python的数据科学运算体系，包括优化(scipy.optimize), 线性代数(scipy.optimize), 统计分析(scipy.optimize)等强大的算法。<a href="https://matplotlib.org/" target="_blank" rel="external"><code>matplotlib</code></a>是类似于Matlab画图风格的强大2d画图工具。<a href="/http://scikit-learn.org/"><code>sklearn</code></a>是一个基于python的机器学习库，里面包含各种机器学习算法。</p>
<ul>
<li>python的官方教程: <a href="https://docs.scipy.org/doc/numpy-dev/user/quickstart.html" target="_blank" rel="external">https://docs.scipy.org/doc/numpy-dev/user/quickstart.html</a></li>
<li>numpy的官方教程: <a href="https://docs.scipy.org/doc/numpy-dev/user/quickstart.html" target="_blank" rel="external">https://docs.scipy.org/doc/numpy-dev/user/quickstart.html</a></li>
<li>scipy官方教程： <a href="http://scipy.github.io/devdocs/tutorial/index.html" target="_blank" rel="external">http://scipy.github.io/devdocs/tutorial/index.html</a></li>
<li>matplotlib的官方教程： <a href="https://matplotlib.org/tutorials/index.html" target="_blank" rel="external">https://matplotlib.org/tutorials/index.html</a></li>
<li>sklearn的官方教程：<a href="http://scikit-learn.org/stable/tutorial/index.html" target="_blank" rel="external">http://scikit-learn.org/stable/tutorial/index.html</a></li>
</ul>
<h3 id="包安装"><a href="#包安装" class="headerlink" title="包安装"></a>包安装</h3><ul>
<li>在 cmd 或者 powershell 中输入 <code>pip install 要安装的包的名称</code> 即可自动下载安装。</li>
<li>有些包在win系统下pip安装可能不成功,可以输入 <code>conda install 要安装的包的名称</code> 进行安装。</li>
</ul>
<p>如，你想安装<code>numpy</code>(已经存在了）这个包，你在cmd或者powershell中输入 <code>pip install numpy</code> 即可</p>
<h3 id="包的使用"><a href="#包的使用" class="headerlink" title="包的使用"></a>包的使用</h3><p>安装好需要的包之后，只用在代码中导入需要的使用的包，即可使用该包。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 导入numpy包，并用np简化命名</span></div><div class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</div><div class="line"></div><div class="line"><span class="comment">##生成1个0-100个随机整数</span></div><div class="line">print(np.random.randint(<span class="number">0</span>,<span class="number">100</span>))</div></pre></td></tr></table></figure>
<pre><code>7
</code></pre><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">## 导入matplotlib中的pyplot包，并简化命名为plt</span></div><div class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</div><div class="line"></div><div class="line"><span class="comment">##让图像在显示在界面中</span></div><div class="line">%matplotlib inline</div><div class="line"></div><div class="line"><span class="comment">## 用numpy生成100个正态分布随机数，然后用matpoltlib画图</span></div><div class="line">plt.plot(np.random.randn(<span class="number">100</span>))</div></pre></td></tr></table></figure>
<pre><code>[&lt;matplotlib.lines.Line2D at 0x2124e7d6470&gt;]
</code></pre><p><img src="/2017/10/14/数据挖掘之python/python-环境搭建/output_17_1.png" alt="png"></p>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;p&gt;更好的阅读体验请前往：&lt;a href=&quot;https://nbviewer.j
    
    </summary>
    
      <category term="数据挖掘之python" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E4%B9%8Bpython/"/>
    
    
      <category term="anaconda" scheme="http://yoursite.com/tags/anaconda/"/>
    
      <category term="python环境" scheme="http://yoursite.com/tags/python%E7%8E%AF%E5%A2%83/"/>
    
      <category term="jupyter" scheme="http://yoursite.com/tags/jupyter/"/>
    
  </entry>
  
  <entry>
    <title>通往财富自由之路_4</title>
    <link href="http://yoursite.com/2017/08/23/%E9%80%9A%E5%BE%80%E8%B4%A2%E5%AF%8C%E8%87%AA%E7%94%B1%E4%B9%8B%E8%B7%AF/%E9%80%9A%E5%BE%80%E8%B4%A2%E5%AF%8C%E8%87%AA%E7%94%B1%E4%B9%8B%E8%B7%AF_4/"/>
    <id>http://yoursite.com/2017/08/23/通往财富自由之路/通往财富自由之路_4/</id>
    <published>2017-08-23T01:05:21.721Z</published>
    <updated>2017-08-23T01:05:21.721Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="通往财富自由之路"><a href="#通往财富自由之路" class="headerlink" title="通往财富自由之路"></a>通往财富自由之路</h1><ul>
<li><strong>这个世界是有生命的</strong></li>
<li><strong>抱怨</strong></li>
<li><strong>别人的好</strong></li>
<li><strong>正确的价值</strong></li>
</ul>
<h2 id="这是世界是有生命的"><a href="#这是世界是有生命的" class="headerlink" title="这是世界是有生命的"></a>这是世界是有生命的</h2><p>如果一个概念在这个文化中不存在，那么这个文化中人就几乎感知不到这个“客观存在”的东西。同样，如果这个文化中存在某种概念，即使这个概念对应的东西完全不存在，可是人们还是总能感受到它的存在。</p>
<p>就像以前的人没有“重力加速度”这个概念，就完全不能感受到会有重力加速度，就连亚里士多德也认为同样重的铅球和棉花从高处落下后，铅球会先着地。</p>
<p>我们所生存的世界并不是冷冰冰的世界，它是有生命的。而且，我们怎么对待它，他就会怎么对待我们。它总能够证明我们是对的，即便有时候我们错的离谱。</p>
<p>心理学家对这现象提出了一个很重要的概念“自证预言”（self-fulfilling prophecy），说的是一个预言直接或者间接地使这个预言称为现实。</p>
<p>我们每个人来到这个世界都是一样的，不知善恶。善恶都是后天习得的，每一个善恶的选择，一方面塑造了自己，另一方面也塑造了我们的世界。同时，我们的世界又会以同样的善恶反过来塑造我们，不断循环。</p>
<p>若你能善待你的世界，你的世界大抵可以给你足够的善待；若你能宽容你的世界，你的世界大抵能够宽容你；若你能认真对待你的世界，你的世界也会很认真对待你；</p>
<p>你可以选择你要生活在一个怎么样的世界。那你想生活在一个怎么样的世界呢？</p>
<h2 id="抱怨"><a href="#抱怨" class="headerlink" title="抱怨"></a>抱怨</h2><p>最应该戒掉的恶习：</p>
<blockquote>
<p>抱怨</p>
</blockquote>
<p><strong>抱怨只是无能、无奈的表现。</strong></p>
<p>当我们遇到麻烦的时候，能解决就解决；解决不了就承受，这才是正确的态度，抱怨毫无帮助。抱怨只能向别人展示我们的无能和无奈。</p>
<p>不想别人不是基于自己内心的骄傲，害怕别人瞧不起自己，而是基于自己的能力和坚韧：</p>
<ul>
<li>能解决就解决（能力）</li>
<li>不能就解决就承受（坚韧）</li>
</ul>
<p>而且，抱怨是会上瘾的。尤其是当有人“愿意”听我们抱怨的时候，我们会不断地抱怨。</p>
<p>抱怨还会传染。让我们周边有人抱怨的时候，我们也容易跟着一起抱怨。</p>
<p>抱怨的最大坏处在于：它不解决问题。</p>
<p>不论是我们的注意力还是我们的时间都是非常宝贵和有限的。抱怨会浪费我们很多时间和注意力，我们在抱怨上多花一点时间，在解决问题上就少一点时间。</p>
<p>而且，抱怨很消耗我们的心里能量，抱怨完我们也心力交瘁，又怎么可能好好地解决问题呢？</p>
<p>所以，珍爱生命。远离抱怨和抱怨的人。</p>
<h2 id="别人的好"><a href="#别人的好" class="headerlink" title="别人的好"></a>别人的好</h2><p>很多人见不得别人的好。他们与别人是一种非此即彼的关系，要么我好你不好，要么我不好你好。</p>
<p>每个人身上都是有好的部分和不好的部分，因为他们总是想和别人比出一个胜负，分清好坏。所以，他们总是不由自主地把注意力放在对方“不好”，而不是放在对方的“好”。把注意力放在对方的“错”，而不是对方的“对”。</p>
<p>久而久之，他们变成“盲人”而不自知，这方面的元认知能力被永远阉割。结果是，永远把注意力放在对方的不好之处，对他们来说，可能只有这样才能让他们舒服。</p>
<p>比较是没有尽头的。有比较心理的人，不是在努力证明自己可以，就是在努力证明别人不行。</p>
<p>但实际上这两种证明都是无意义的。因为，如果是真的，不用证明大家都看在眼里。如果是假的，那就不是证明，而是在演或者在装。</p>
<p>这样，注意力浪费了，时间过去了，自己却没有一点成长。</p>
<p>所以，我们没有必要与别人比较，来证明自己。我们就不用只关注对方的“不好”，我们也可以看到对方的“好”。</p>
<p>等你真正愿意去看到对方的好的时候，你会发现对方身上其实有很多值得学习的地方。</p>
<p>而且，由于你更能看见别人的好，你身处的世界会变得比原来美好太多……</p>
<h2 id="正确的价值"><a href="#正确的价值" class="headerlink" title="正确的价值"></a>正确的价值</h2><p>很多人没有意识到一个事：</p>
<blockquote>
<p><strong>正确本身，可能并没有什么价值</strong></p>
</blockquote>
<p>当你是正确，别人都是错误的，这时候你的“正确”才具有巨大价值。而且，你的正确程度越高，反对你的人越多，你的价值越大。</p>
<p>那，为什么很多人抱怨别人都不认同自己呢？因为，他们衡量正确的方式不是通过逻辑推理，而是通过大家的认同。</p>
<p>他们更多是表现型的人，相比于对错，他们更在乎自己是否得到更多人的认同。进而，他们一定是“随大流”的，只有这样他们才“安全”。</p>
<p>另外，正确的巨大价值在于特立独【行】，而不是特例独【想】。</p>
<p>通过严谨的逻辑推力判断，看到了正确的巨大价值后，想是完全没有用的。只有行动才能带来真正的收益。</p>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;通往财富自由之路&quot;&gt;&lt;a href=&quot;#通往财富自由之路&quot; cla
    
    </summary>
    
      <category term="通往财富自由之路" scheme="http://yoursite.com/categories/%E9%80%9A%E5%BE%80%E8%B4%A2%E5%AF%8C%E8%87%AA%E7%94%B1%E4%B9%8B%E8%B7%AF/"/>
    
    
      <category term="通往财富自由之路" scheme="http://yoursite.com/tags/%E9%80%9A%E5%BE%80%E8%B4%A2%E5%AF%8C%E8%87%AA%E7%94%B1%E4%B9%8B%E8%B7%AF/"/>
    
      <category term="抱怨" scheme="http://yoursite.com/tags/%E6%8A%B1%E6%80%A8/"/>
    
      <category term="正确" scheme="http://yoursite.com/tags/%E6%AD%A3%E7%A1%AE/"/>
    
      <category term="世界" scheme="http://yoursite.com/tags/%E4%B8%96%E7%95%8C/"/>
    
  </entry>
  
  <entry>
    <title>记忆</title>
    <link href="http://yoursite.com/2017/08/23/%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0/%E8%AE%B0%E5%BF%86/"/>
    <id>http://yoursite.com/2017/08/23/如何学习/记忆/</id>
    <published>2017-08-23T01:05:21.721Z</published>
    <updated>2017-08-23T01:05:21.721Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="记忆"><a href="#记忆" class="headerlink" title="记忆"></a>记忆</h2><h3 id="工作记忆与长期记忆"><a href="#工作记忆与长期记忆" class="headerlink" title="工作记忆与长期记忆"></a>工作记忆与长期记忆</h3><p>工作记忆就是你的大脑在即时且有意识地处理信息所涉及的那部分记忆。当你尝试将脑中的一些想法结合起来去帮助理解某一概念或者解决某一问题是则动用工作记忆。</p>
<p>工作记忆与短期记忆有些相似，但也有很大不同。它们都只能短暂的储存在大脑中，过一段时间很快就会忘记。工作记忆与短期记忆最大的不同在于它们功能不同。工作记忆主要是作为大脑的缓存区，让大脑在这短暂的时间内可以记住所需要的信息，并且对这部分信息进行更进一步加工，比如思考。而短期记忆的功能主要是在短时间内记住这部分信息，并不处理这部分信息。当你在书上学习新的知识并且用这部分知识做题的时候，使用的就是工作记忆。当你单纯的背一个电话号码的时候，使用的就是短期记忆。工作记忆对我们的学习，影响重大，所以我更多谈论工作记忆而不是短期记忆。</p>
<p>工作记忆集中在大脑的前额叶皮质，它也有与大脑的其他部分有着联系，以便于你读取长期记忆。以前的研究人员认为，工作记忆可以储存7个组块的信息。而现在的共识是工作记忆大约只能储存4个组块的信息。我们大脑会将记忆项合并为组块的形式，所以我们的工作记忆看似比实际容量要大。组块这个概念我后面会讲到。</p>
<p>工作记忆就像一块有些劣质的黑板，你必须时常重复你所需要记忆的信息，它们才能稳定地储存在工作记忆中。当你全身关注的时候，你会发现自己无视了那些侵占工作记忆有限空间的冗余信息。</p>
<blockquote>
<p>长期记忆（LTM）是提出的双内存模式的最后阶段阿特金森Shiffrin内存模型，其中的信息可以保存长时间的时间。信息可以无限期地保持在长期存储器中。</p>
</blockquote>
<p>这是维基百科对长期记忆的定义。长期记忆就是能够长时间保存在大脑中的那部分记忆。</p>
<p>长期记忆的重要性在于它储存着你学习的所有科目的基本概念和技巧。没有了长期记忆，人类就没有了文化，因为不能长期记忆，就不能传播；不能长期记忆，就不能深入思考。所学的东西越难、越深入，所涉及的概念和方法就越多，只有将所需要的概念和方法牢牢地储存在大脑中，学习的时候工作记忆才能灵活的调用它们进行更深一步的思考。</p>
<p>长期记忆就像一个储存仓库，它分布在一个很大的区域中。不同的长期记忆储存在大脑的不同区域。研究表明：当你首次尝试将一段短期记忆转入长期记忆中时，你需要多次回顾以增加需要时能够找到相关信息的几率。长期记忆的仓库是巨大的，它可以储存数以亿计的内容。事实上，由于太多信息可能会相互掩盖 要找到所需信息会有难度，除非你练习并重复几次。</p>
<p>当你遇到新的事物的时候，通常你会用工作记忆来处理它。如果需要把这些信息转移到长期记忆中，就需要一些时间和练习的过程。促进这一过程有效的方式是间隔性重复。具体的做法是不断重复你尝试记忆的内容，但是重复的过程必须间隔开。研究表明：一次重复记忆20次相同的内容，记忆效果比不上在几天内重复相同次数的效果。</p>
<p>一般时候大脑的记忆处于休眠状态，当你想将工作记忆转换为长期记忆的时候，工作记忆会将长期记忆唤醒，通过修改神经元树突上的突出来将记忆变为长期记忆。苏醒的长期记忆将新的内容转为长期记忆的时候，也更改了旧的记忆。所以，大脑的记忆常常交织在一起，学习新的东西的时候，旧的记忆也会改变。这一过程在睡眠期间比较活跃。</p>
<h3 id="记忆小方法"><a href="#记忆小方法" class="headerlink" title="记忆小方法"></a>记忆小方法</h3><h4 id="图像记忆"><a href="#图像记忆" class="headerlink" title="图像记忆"></a>图像记忆</h4><p>我们的大脑天生就有强大的视觉和空间记忆，十分擅长记忆不同地点的概况。图像与右脑的视觉空间中枢直接相连，通过利用具有更强的记忆能力的视觉区域，图像能够帮助你把单调乏味、难以记忆的概念概括起来，通过激活各种感官建立的神经钩越多，你就越容易记住这个概念和其含义。你可以将所需要的记忆的内容，想象成一个图像来帮助你记忆，而且这个图像越夸张效果越好。</p>
<h4 id="记忆宫殿"><a href="#记忆宫殿" class="headerlink" title="记忆宫殿"></a>记忆宫殿</h4><p>前面也说了我们大脑不但有强大的图像记忆，空间记忆也非常强大。因为我们祖先外出打猎时必须记得回家的路线，外面哪个位置野果比较丰富，哪个位置比较危险等等，这就让我们发展出强大的空间记忆。</p>
<p>记忆宫殿的具体做法有3步。首先将你需要记忆的内容分类，然后回忆起一个你非常熟悉的路线，比如从宿舍到教室，最后通过夸张的想象，将所需要的记忆的内容与这条路线上你所熟悉的建筑或标志物一一联系起来。</p>
<h4 id="简化记忆"><a href="#简化记忆" class="headerlink" title="简化记忆"></a>简化记忆</h4><p>简化记忆就是创造有意义的意群来简化所需要记忆的信息。你可以将要记忆的数字与难忘的事联系起来，比如2008年是中国举办奥运会的那一年，3.30是考1000m的时候的成绩。你也可以通过创造好记的句子来帮助记忆一些概念，这个句子可由你需要记忆的信息的首字组成。</p>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;记忆&quot;&gt;&lt;a href=&quot;#记忆&quot; class=&quot;headerli
    
    </summary>
    
      <category term="学习何如学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0%E4%BD%95%E5%A6%82%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="工作记忆" scheme="http://yoursite.com/tags/%E5%B7%A5%E4%BD%9C%E8%AE%B0%E5%BF%86/"/>
    
      <category term="长期记忆" scheme="http://yoursite.com/tags/%E9%95%BF%E6%9C%9F%E8%AE%B0%E5%BF%86/"/>
    
  </entry>
  
  <entry>
    <title>通往财富自由之路_2</title>
    <link href="http://yoursite.com/2017/08/23/%E9%80%9A%E5%BE%80%E8%B4%A2%E5%AF%8C%E8%87%AA%E7%94%B1%E4%B9%8B%E8%B7%AF/%E9%80%9A%E5%BE%80%E8%B4%A2%E5%AF%8C%E8%87%AA%E7%94%B1%E4%B9%8B%E8%B7%AF_2/"/>
    <id>http://yoursite.com/2017/08/23/通往财富自由之路/通往财富自由之路_2/</id>
    <published>2017-08-23T01:05:21.721Z</published>
    <updated>2017-08-23T01:05:21.721Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="通往财富自由之路"><a href="#通往财富自由之路" class="headerlink" title="通往财富自由之路"></a>通往财富自由之路</h1><ul>
<li><strong>资本</strong></li>
<li><strong>落后</strong></li>
<li><strong>多维竞争</strong></li>
</ul>
<h2 id="资本"><a href="#资本" class="headerlink" title="资本"></a>资本</h2><p>资本是由资金构成，但仅仅是资金是不可能称为资本的。资金要想要为资本有三个考虑因素。</p>
<ul>
<li>资金的大小</li>
<li>资金的使用时限</li>
<li>资金背后使用者的智慧</li>
</ul>
<p>资金只有足够太，投资带来的收益对我们才真正有意义。资金的使用时限足够长，我们才能拿这部分资金用作投资。若是完全不懂投资，则再多的资金也不配当做资本用于投资。</p>
<p>资金背后的智慧是可以习得的。习得的方法是从各个维度（金额、时限、智慧）逐步循环突破。</p>
<p>第一个要突破的是投资的重点在于投资的收益率，而不在于投资的收益额。</p>
<p>第二个要突破的是能不能给自己的投资款“判上无期徒刑”。心理学家通过大量调查得到绝大部分人若是丢失年收入的10%，这对他们的生活完全没有影响。所以，我们完全有可能把自己的部分资金当成丢失，给他们“判上无期徒刑”。</p>
<p>第三个要突破的是投资知识、智慧、经验几乎只能从实践中得到。这个漫长的过程不可或缺，而且不是聪明就可以跨过的，就像是怀胎就是需要十个月，不管是谁都不能跨过这个过程，而且几乎不可能缩短这个过程。</p>
<p>不论是工作还是学习，总有一群人比别人更出众。除去所谓的能力差异，他们还有的一个特质是：</p>
<blockquote>
<p><strong>他们通常会主动选择</strong></p>
</blockquote>
<p>所以,从现在开始主动选择，积累投资的智慧。</p>
<h2 id="落后"><a href="#落后" class="headerlink" title="落后"></a>落后</h2><p>过去，我们常常凭感觉，觉得平均水准以上就是不落后。</p>
<p>然而这个感觉肯定是有偏差的。人们的感觉永远是有偏差的，比如90%的人认为自己的驾驶水平处于平均水准以上。因为，我们并不能感知整个世界，我们只能通过感知自己的周遭来判断自己是否处于平均水准之上。</p>
<p>进入二十一世纪后，有个重大的改变正在揭示更为残酷的事实：</p>
<blockquote>
<p><strong>弄不好，百分之一之后都是落后</strong></p>
</blockquote>
<p>因为，现在互联网几乎连接了所有的人。我们每个人能感知的世界，不再是我们周遭的世界而已，我们几乎可以感知到世界的每一个角落。这种感知范围的变化，会让每个人产生不同的心理变化。我们能看到更多的牛人，看到自己与他们之间的差距。有时候就算处于前1%，我们还有能看到无数比我们厉害的很多的人，我们一样会觉得自己是落后的，更别提处于平均水准之上而已了。</p>
<p>所以，要想不落后，我们要成为前1%，甚至前0.1%。</p>
<h2 id="多维竞争"><a href="#多维竞争" class="headerlink" title="多维竞争"></a>多维竞争</h2><p>要想不落后其实很难，因为在每个领域永远只有一个“第一”，只有少数几个“名列前茅”，剩下绝大部分的都是落后。</p>
<p>但仔细想想也没有那么的难，如果我们能换个角度度看问题。我们不一定只能在一个领域发展，如果我们能够自己开拓新的维度，事情就变得不一样了。将多个领域的知识、技能融汇在一起，就可能从多个维度超过一个维度的顶尖人物。</p>
<p>举个不太准确的数学例子，在一个维度顶尖人物可能得分95分，而我们只有90分，可是我们还能整合其他维度的知识应用在这个领域，假设那个领域我们的分80分，我们得分就远远超过那个顶尖人物了。当然，这只是直观的感受，不太确切。</p>
<p>要想多个维度同时发展，首先我们必须要在一个维度做的足够好。因为，我们生活有成本。如果在所有方面我们都是平平庸庸，那么我们生活都可能难以为继，更别提再去发展，整合别的维度。另外，如果不能在一个领域做得足够好，那么也难以将其他领域的知识、技能整合应用到这领域。</p>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;通往财富自由之路&quot;&gt;&lt;a href=&quot;#通往财富自由之路&quot; cla
    
    </summary>
    
      <category term="通往财富自由之路" scheme="http://yoursite.com/categories/%E9%80%9A%E5%BE%80%E8%B4%A2%E5%AF%8C%E8%87%AA%E7%94%B1%E4%B9%8B%E8%B7%AF/"/>
    
    
      <category term="通往财富自由之路" scheme="http://yoursite.com/tags/%E9%80%9A%E5%BE%80%E8%B4%A2%E5%AF%8C%E8%87%AA%E7%94%B1%E4%B9%8B%E8%B7%AF/"/>
    
      <category term="资本" scheme="http://yoursite.com/tags/%E8%B5%84%E6%9C%AC/"/>
    
      <category term="落后" scheme="http://yoursite.com/tags/%E8%90%BD%E5%90%8E/"/>
    
      <category term="多维竞争" scheme="http://yoursite.com/tags/%E5%A4%9A%E7%BB%B4%E7%AB%9E%E4%BA%89/"/>
    
  </entry>
  
  <entry>
    <title>通往财富自由之路_1</title>
    <link href="http://yoursite.com/2017/08/23/%E9%80%9A%E5%BE%80%E8%B4%A2%E5%AF%8C%E8%87%AA%E7%94%B1%E4%B9%8B%E8%B7%AF/%E9%80%9A%E5%BE%80%E8%B4%A2%E5%AF%8C%E8%87%AA%E7%94%B1%E4%B9%8B%E8%B7%AF_1/"/>
    <id>http://yoursite.com/2017/08/23/通往财富自由之路/通往财富自由之路_1/</id>
    <published>2017-08-23T01:05:21.721Z</published>
    <updated>2017-08-23T01:05:21.721Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="通往财富自由之路"><a href="#通往财富自由之路" class="headerlink" title="通往财富自由之路"></a>通往财富自由之路</h1><ul>
<li><strong>安全感</strong></li>
<li><strong>活在未来</strong></li>
<li><strong>遇到贵人的方法</strong></li>
</ul>
<h2 id="安全感"><a href="#安全感" class="headerlink" title="安全感"></a>安全感</h2><p>由于注意力是我们最宝贵的东西，所有要想成长，合理的运用注意力是最重要的事情之一。既然要合理运用注意力，我们就得在我们认为重要，甚至是认为最重要的事情上投入大量的注意力，我们才能有尽可能大的收获。而当我们在我们认为重要的事情上投入我们的注意力的时候，意味着我们在其他的事情上几乎不关注。</p>
<p>而这很可能会让人觉得不太合群，只关注自己认为重要的事情，有时候就不能和其他人一起聊八卦，打游戏等等，会让人觉得没有安全感。可能，我们只有放弃部分的安全感，我们才能朝自己的方向坚定不移地前行，才能在一个地方长期、深入地思考。</p>
<p>一味地追求完全安全，是低效且不可能实现的。世界上有无数的可能性，每件事也有数不清的可能性，当我们想要一个人面对，解决所有可能性的时候，我们就不可能在一种或者很少的几种可能性中集中我们的注意力，进而再所有可能都不能解决好，而我们又不可能解决所有的可能性，所以到头来一无所获。</p>
<p>但我们又不是只有一个人，我们专注于一种可能，然后放弃应对其他可能的能力，即放弃那部分的安全感，我们接受其它可能到来的时候，我们接受我们没有办法自己解决，而我们同时相信其他人能解决好那种可能。</p>
<p>这就需要合作和信任。只有相互信任，才能形成合作。信任就是我把我的一部分安全感交给对方，而且我相信对方不会利用我的这部分安全感来伤害我。</p>
<p>所以，如果有可能，尽可能不要选择与没有安全感的人合作，更不要与没有安全感的人恋爱、结婚。因为，他们不敢把自己那部分安全感交给别人，不相信交给别人，别人不会利用那部分安全感。彼此之间几乎没有信任。</p>
<h2 id="活在未来"><a href="#活在未来" class="headerlink" title="活在未来"></a>活在未来</h2><p>当我们放弃部分安全感的时候，我们就能将我们注意力放在我们认为最重要的事情上了。当我们在一件事上投入大量注意力的时候，我们其实是在投资，以期未来获得收益。而且注意力使我们最宝贵的财富，我们投入的是最为重要的是资源。所以，未来的收益要足够大，我们投资才有价值。</p>
<p>所以我们必须活在未来，只有活在未来我们才能在此时此刻将我们最宝贵的注意力放在未来收益最大的地方。<strong>做对的事情远比把事情做对重要</strong> 就是这个道理。当我们方向错了的时候，把再多事情做对也无益。所以，我们只有活在未来，我们才能选择去做<em>对的事情</em> 。</p>
<p>活在未来，最重要就是要预测未来。要想预测未来，我们必须根据过去的信息，经过我们加工整理，然后对未来作出判断。因为，活在未来是一个联结过去，现在和未来的一种活法。</p>
<p>我们最重要的财富是注意力，所以我们只能活在现在，才能在“<strong>现在</strong>”把注意力用在我们放在最重要的事情上。而为了把注意力放在最重要的事情上，我们又必须活在未来，只有活在未来“<strong>未来</strong>”，我们才能确定什么是最重要的事，我们 <strong>现在</strong> 最应该做什么。而为了活在未来，我们又不得不活在过去，只有活在“<strong>过去</strong>”， 我们才能基于过去而预测未来，进而活在未来。</p>
<p>所以，当我们活在未来，我们就不只活在现在一个点，我们活在以现在为中点的一个时空区间上，这就在时空上拓宽我们的人生。</p>
<h2 id="遇到贵人的方法"><a href="#遇到贵人的方法" class="headerlink" title="遇到贵人的方法"></a>遇到贵人的方法</h2><p>前面提到，信任别人，与人合作我们能够各自放弃部分安全感，进而取得比自己很好的结果。如果我们能够找到这样的合作对象，那他们就是我们的贵人。因为，在他们的帮助下，我们获得了更大的成长。</p>
<p>当然，贵人不一定是我们的合作者，那些给我们帮助，让我们更好的成长的人都是我们的贵人。当我们有贵人相助的时候，我们就更容易取得我们想要的东西，我们成长的就会更快。</p>
<p>但是，要想遇到贵人，<strong>最要重要的我们自己得先成为贵人</strong>。当我们自己是贵人的时候我们我们就容易吸引到更多的贵人。</p>
<p>更可能遇到贵人的人有的特征还有很多，比如：</p>
<ul>
<li>乐观的人</li>
<li>做对的事情的人</li>
<li>乐于分享的人</li>
<li>活在未来的人</li>
<li>……</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;通往财富自由之路&quot;&gt;&lt;a href=&quot;#通往财富自由之路&quot; cla
    
    </summary>
    
      <category term="通往财富自由之路" scheme="http://yoursite.com/categories/%E9%80%9A%E5%BE%80%E8%B4%A2%E5%AF%8C%E8%87%AA%E7%94%B1%E4%B9%8B%E8%B7%AF/"/>
    
    
      <category term="通往财富自由之路" scheme="http://yoursite.com/tags/%E9%80%9A%E5%BE%80%E8%B4%A2%E5%AF%8C%E8%87%AA%E7%94%B1%E4%B9%8B%E8%B7%AF/"/>
    
      <category term="安全感" scheme="http://yoursite.com/tags/%E5%AE%89%E5%85%A8%E6%84%9F/"/>
    
      <category term="活在未来" scheme="http://yoursite.com/tags/%E6%B4%BB%E5%9C%A8%E6%9C%AA%E6%9D%A5/"/>
    
  </entry>
  
  <entry>
    <title>通往财富自由之路_3</title>
    <link href="http://yoursite.com/2017/08/23/%E9%80%9A%E5%BE%80%E8%B4%A2%E5%AF%8C%E8%87%AA%E7%94%B1%E4%B9%8B%E8%B7%AF/%E9%80%9A%E5%BE%80%E8%B4%A2%E5%AF%8C%E8%87%AA%E7%94%B1%E4%B9%8B%E8%B7%AF_3/"/>
    <id>http://yoursite.com/2017/08/23/通往财富自由之路/通往财富自由之路_3/</id>
    <published>2017-08-23T01:05:21.721Z</published>
    <updated>2017-08-23T01:05:21.721Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="通往财富自由之路"><a href="#通往财富自由之路" class="headerlink" title="通往财富自由之路"></a>通往财富自由之路</h1><ul>
<li><strong>元认知</strong></li>
<li><strong>万能钥匙</strong></li>
<li><strong>坚持</strong></li>
<li><strong>错过</strong></li>
</ul>
<h2 id="元认知"><a href="#元认知" class="headerlink" title="元认知"></a>元认知</h2><p>元认知能力就是对自己思考过程的认知和理解。</p>
<p>当你意识到自己是如何如何思考的时候，你就会发现自己思考的方式有很多缺陷，有很多漏洞。当你思考自己是如何思考的时候，你才能进一步提升自己思考能力。</p>
<p><strong>元认知能力的强弱，决定了一个人每个方面的强弱</strong>。甚至，不夸张的讲：一个人的财富创造能力最重也只与元认知能力有关。</p>
<p>元认知起作用方式很简单：</p>
<ul>
<li>哦！我原来是这样想的……</li>
<li>嗯？我这样想不对吗？</li>
<li>啊！我应该这样想……</li>
</ul>
<p><strong>元认知能力之所以重要，是因为它不光帮你了解你自己，还帮你更加了解别人。</strong></p>
<p>元认知不仅可以习得，还可以通过刻意训练长期持续发展。</p>
<ol>
<li><strong>坐享</strong></li>
<li><strong>兴趣</strong></li>
<li><strong>反思</strong></li>
</ol>
<h3 id="坐享"><a href="#坐享" class="headerlink" title="坐享"></a>坐享</h3><p>坐享是通过主动地全神贯注，让元认知能力彻底放松。元认知能力就像我们大脑的一个肌肉，当我们练一段时间卧推，胸肌会变大。同样我们坐享一段时间，元认知能力就会变强。并且，科学研究表明，坐享可以增大训练者的大脑皮层表面积。</p>
<p>坐享的方式也很简单：</p>
<ul>
<li>找个计时器，定时15分钟(之后逐渐增加)</li>
<li>找一个舒服的姿势（起初不一定要“正确姿势”，但最好背挺直）</li>
<li>闭眼</li>
<li>缓慢均匀的呼气（不用刻意控制）</li>
<li>把注意力都放在呼吸上（走神了就再回来）</li>
</ul>
<p>刚开始训练容易走神，但是这也是训练的重点，把所有注意力都集中在一点——当前的呼吸。</p>
<h3 id="兴趣"><a href="#兴趣" class="headerlink" title="兴趣"></a>兴趣</h3><p>全神贯注是另一种可以训练元认知能力的有效方法，当我们进入全神贯注的时候，我们的元认知能力是处在彻底放松的状态。</p>
<p>而且这种全神贯注必须是 <strong>主动地全神贯注</strong> ，不是被小说，或者电影情节吸引地被动地全神贯注。因为主动地全神贯注，我们才能主动地深入思考，进而锻炼我们的元认知能力。</p>
<p>可是这过程并不简单，所以我们需要去做我们真正感兴趣的事，这样我们就能更容易地主动全神贯注。</p>
<h3 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h3><p>每天花一点时间，反思一下自己思路和思考的结果，琢磨一下自己有没有逻辑谬误？这些想法从哪里而来？有没有其他思考可能？……</p>
<p>很多时候反思都是无疾而终，因为想着想着就乱了。反思最好的方法是记录。没有人能一次就把问题都想清楚，所以我们需要把问题记录下来，才能在这个问题上反复、深入地思考。</p>
<p><strong>反思不仅是训练元认知能力的有效方法，也是调整情绪的根本</strong>。</p>
<p>研究表明，控制情绪永远是徒劳的。冷静并不是控制情绪的结果。而是，认清情绪的来源，找到解决方法的结果。而认清情绪的来源就是在调用元认知能力。</p>
<p>当我们认清情绪的来源，我们才能着手解决问题，不解决问题情绪再控制也还在那。</p>
<h2 id="万能钥匙"><a href="#万能钥匙" class="headerlink" title="万能钥匙"></a>万能钥匙</h2><p>我们的注意力常常被“困扰我们的问题”所占据，有时我们投入大量注意力之后，问题也难以得到解决。是因为我们关注点仅仅放在问题本身上面了。有时候我们需要调用我们的元认知能力，换一个角度看待遇到的问题。</p>
<p>就像面对一个被锁住的门，仅仅盯着锁看是不可能打开这个锁的。我们需要从别的地方找到一把钥匙，才能打开这个门。同样的道理，仅仅关注问题本身不一定能解决这个问题，我们需要把注意力从问题上面挪开，因为答案可能在别的地方，调用我们的元认知能力，持续思考问题可能更容易解决。</p>
<p>就像我们饿了就会去找吃的，渴了就会找水喝，而不是一直关注自己的干瘪的肚子，和干燥的喉咙。</p>
<p>有时候我们找到了钥匙，却忘记了要开哪个锁。所以，我们平时要养成记录的习惯。不论是遇到什么“锁头”，还是遇到什么“钥匙”，都要记录下来，并且不断回顾总结。</p>
<h2 id="坚持"><a href="#坚持" class="headerlink" title="坚持"></a>坚持</h2><p>坚持和毅力是一个应该被放弃概念。如果脑子里满是“坚持”和“毅力”，恐怕永远都在考虑如何摆脱痛苦，就不可能换个角度，让这件事变得快乐。</p>
<p><strong>如果某件事需要努力，需要坚持才行，那这件事基本上从一开始就注定做不成</strong>。需要努力或者坚持，说明你从骨子里就不愿意做啊！骨子里都不愿意的做的事，又怎么可能做好呢？</p>
<p>而且，我们大脑有遗忘痛苦的功能。不论是学习知识，还是打磨技能，本质上都是大脑上留下“痕迹”。如果从一件事一开始就是痛苦的，那大脑会想方设法“抹掉”这部分记忆。</p>
<p><strong>所以要想不放弃，首先就不要给自己痛苦的暗示。</strong></p>
<p>一个很有效的策略是：</p>
<blockquote>
<p><strong>无论做什么事，在开始之前，都要想尽一切办法为这个事赋予重大的意义，甚至多重重大的意义。</strong></p>
</blockquote>
<p>当一件事对你有重大的意义的时候，做这件事是不用坚持的。甚至，有人拦着你你都会和他急。</p>
<p>每个人的意义感都不尽相同，重要的不是把关注点放在其它地方，而是要找到当下对自己最重要的意义，并把它均摊到每天的任务上。这样才能让自己不停地做这件事。</p>
<p>有时候，赋予这件事正面的意义不够，还需要想尽一切办法，为“没有它的存在”赋予很多<strong>负面意义</strong>。而且还要展开想象的翅膀，把细节写下来，以此“吓到”你的大脑，然后它就会自动工作，否则就不安生……</p>
<p>另一个重要的技巧是：</p>
<p>想尽一切办法去寻找有某项技能的人以及人群，尽量与他们共度大量时光；如果不能一对一交流，也尽可能多关注他们。</p>
<p>社交，从来都是学习生活的一部分。</p>
<p>当你与拥有某项技能的人在一起的时候，你会不由自主地“发现”、“感受到”那项技能其实很自然，很实用，没有它根本不行。</p>
<p>这些判断会在很大程度上影响你的行为和你的感受，于是“很痛苦”、“很艰难”等都变成了“很好玩”、“停不下来”……</p>
<h2 id="错过"><a href="#错过" class="headerlink" title="错过"></a>错过</h2><p>有时候我们看到好的文章会惊叹写得太好了，写得太对了。</p>
<p>可是过一段时间再回过头来看，好像一点没有听进去。阅读的时候会有一种错觉，以为自己看懂了文章的内容，生活就会自动变得不一样。</p>
<p>但那只是幻觉，如果你想不出来当时自己到底读了什么，那些文字对你的意义并不大。最终，你只有在走过很多弯路后才会想起来，原来自己读过类似的提醒。</p>
<p>因为很多时候，我们是这样的反应：我觉得你说的对，但，好像跟我没有太多关系……毕竟，我不是你，你不是我，你能做的事，我不一定能做……我还是安心做好我自己事吧……</p>
<p>有时候，我们错过只是因为觉得这件事和我们没有关系。</p>
<p>有时候，我们只是为了逃避困难而试着说服自己，这件事和自己没有关系。</p>
<p>感觉没关系，可能是错觉，也常常是最可怕你的自证预言。若是主动吸收那个观念，按照那个观念做，就“事实上有关系了”，做不好没关系，没有人能一开始就做好的，拼命做就好了，否则就真的和你没有关系了。</p>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;通往财富自由之路&quot;&gt;&lt;a href=&quot;#通往财富自由之路&quot; cla
    
    </summary>
    
      <category term="通往财富自由之路" scheme="http://yoursite.com/categories/%E9%80%9A%E5%BE%80%E8%B4%A2%E5%AF%8C%E8%87%AA%E7%94%B1%E4%B9%8B%E8%B7%AF/"/>
    
    
      <category term="通往财富自由之路" scheme="http://yoursite.com/tags/%E9%80%9A%E5%BE%80%E8%B4%A2%E5%AF%8C%E8%87%AA%E7%94%B1%E4%B9%8B%E8%B7%AF/"/>
    
      <category term="元认知" scheme="http://yoursite.com/tags/%E5%85%83%E8%AE%A4%E7%9F%A5/"/>
    
      <category term="坚持" scheme="http://yoursite.com/tags/%E5%9D%9A%E6%8C%81/"/>
    
  </entry>
  
  <entry>
    <title>拖延与习惯</title>
    <link href="http://yoursite.com/2017/08/23/%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0/%E6%8B%96%E5%BB%B6%E4%B8%8E%E4%B9%A0%E6%83%AF/"/>
    <id>http://yoursite.com/2017/08/23/如何学习/拖延与习惯/</id>
    <published>2017-08-23T01:05:21.705Z</published>
    <updated>2017-08-23T01:05:21.705Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h3 id="回顾"><a href="#回顾" class="headerlink" title="回顾"></a>回顾</h3><p>阅读后移开视线，看看能够回忆起多少内容，相比反复阅读能够掌握的更全面和深入。在回顾时，我们并非机械地附属，而是在通过回顾这个过程加深理解，这有助于知识组块。比起重复阅读，回顾即在心里检索关键概念可以使你的学习更加专注高效。只有隔上一定时间后，重读才有效，因为这样重读就像是间隔重复练习。</p>
<h3 id="错觉"><a href="#错觉" class="headerlink" title="错觉"></a>错觉</h3><p>当你看到答案后告诉自己明白了他们为什么这么做，这个答案并不属于你，因为你没有把这些概念切入自己潜在的神经回路中。这是一种学习中最为常见的自欺欺人式错觉。</p>
<p>做笔记时高亮和下划线必须要谨慎，否则不仅没效而且还容易产生误导，在划的时候误以为自己已经记住了。在划之前找到中心思想，在空白处写笔记总结关键概念是一种很好的方法。</p>
<p>当我们重读笔记或者课本的时候，会误以为这些知识已经存在我们脑海中，让我们陷入错觉之中，降低学习效率。回顾虽难，但高效。</p>
<h3 id="测验"><a href="#测验" class="headerlink" title="测验"></a>测验</h3><p>为了减少错觉，最好的方式是自我测验。可以不断地给自己提问，也可以通过向他人讲解来测验自己。</p>
<h3 id="犯错"><a href="#犯错" class="headerlink" title="犯错"></a>犯错</h3><p>在自测中犯错是很有价值的，因为他们能让你一点点弥补思维漏洞，犯错可以纠正思考方向，让你学的更好。</p>
<h3 id="过度学习"><a href="#过度学习" class="headerlink" title="过度学习"></a>过度学习</h3><p>掌握此阶段所学的内容后继续学习训练就是过度学习。它能够帮助组块，在专业运动，演讲等发挥重要作用。但是，单一学习阶段的过度学习是浪费时间。这样并不能加强你所期许的长期记忆联系。过度学习是容易的，所以容易造成已经完全掌握的错觉。</p>
<h3 id="刻意练习"><a href="#刻意练习" class="headerlink" title="刻意练习"></a>刻意练习</h3><p>你应该把精力集中在你认为困难的部分，专注于学习困难部分，这样才能将学习效率大大提高。</p>
<h3 id="交替学习"><a href="#交替学习" class="headerlink" title="交替学习"></a>交替学习</h3><p>掌握一门新科学不仅要学习基础组块，更要学会如何选择和应用不同的组块。最佳的方法在需要不同技术和策略的问题已经情形中来回转换，这就是交替学习。已经形成的并加强的神经模式可能会阻碍你发现更棒的想法，而交替学习则能减少我们出现思维定式的问题。</p>
<h2 id="拖延与习惯"><a href="#拖延与习惯" class="headerlink" title="拖延与习惯"></a>拖延与习惯</h2><h3 id="拖延"><a href="#拖延" class="headerlink" title="拖延"></a>拖延</h3><p>我们之前已经了解要想将工作记忆转换为长期记忆，需要一定的时间。而拖延则会让这个过程难以实现。因为拖延，我们到最后很可能只能临时抱佛脚，但这种方法不能构建稳定的神经结构。同样的学习时间，提前开始，进行有间隔的学习，能让我们学的更好。</p>
<p>我们拖延的事常常是那些让人不太舒服的事，当我们在脑海里想到那些不太喜欢的事情时，大脑的痛觉中枢会被点亮。因此，我们会把注意力转移到你更喜欢的事物上面，这样会让你感觉更好，至少暂时会感到更好。</p>
<p>不过可惜的是这种长期的习惯性逃避是没有好处的，当我们把学习任务往后拖的时候，再去想学习这件事就会变得更痛苦，因为这些知识没有坚实的神经基础，所以考试会卡壳。拖延是一个极其重要，影响广泛的坏习惯。换句话说，生活中的很多重要领域都会受到拖延的影响。</p>
<p>拖延和上瘾有很多共同之处，它可以让我们短暂地兴奋并从无聊的现实中解脱出来，人们总是轻易地自欺欺人。比如我们可以骗自己说现在最好上网搜索资料，而不是去看书或者做作业。</p>
<p>而且我们学得越深入，对抗拖延就显得越重要。</p>
<h3 id="习惯"><a href="#习惯" class="headerlink" title="习惯"></a>习惯</h3><p>前面我们了解到，当我们把知识建立组块后，我们只掌握很少的知识就够了。神经科学的观点是，组块的形成与习惯有关。习惯是我们的节能机制，它让我们的大脑可以同时处理其他的活动，当我们习惯了做某件事，就无须集中全部的注意力，这就为我们节省了能量。</p>
<p>习惯建立需要四个阶段：</p>
<ul>
<li><p><strong>信号</strong>。信号是“打开”我们习惯的开关。拖延的问题在于我们意识不到我们已经开始拖延了，因为这是一个自然而然的习惯。我们可以通过关掉手机、关掉网络、待在图书馆等来隔离那些最具杀伤力的信号。</p>
</li>
<li><p><strong>惯例</strong>。重设旧的惯例的关键是制定一个计划，计划刚开始可能不是很奏效，不过请坚持下去，在必要的时候修改，完成了给自己一个奖励。</p>
</li>
<li><p><strong>奖励</strong>。习惯的力量之所以强大是因为习惯造就了神经系统的欲望，一个新的奖励可以帮助我们克服原先的欲望，只有当大脑开始期待那个奖励，就习惯才能得到重置，我们才能养成新的习惯。所以，你需要思考你为什么会拖延，能不能在情感上找到拖延时短暂愉悦的替代品？比如完成这件事的自豪感和满足感等。给奖励设定时间点，比如下午5点前结束主要任务，这样小而实在的截止期限可以激励我们去工作。</p>
</li>
<li><p><strong>信念</strong>。你要相信你能够做到，这一信念可以让你在面对困难渴望回到那个舒适区时坚持下去。找到志同道合的伙伴也是个好办法。</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h3 id=&quot;回顾&quot;&gt;&lt;a href=&quot;#回顾&quot; class=&quot;headerli
    
    </summary>
    
      <category term="学习何如学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0%E4%BD%95%E5%A6%82%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="拖延" scheme="http://yoursite.com/tags/%E6%8B%96%E5%BB%B6/"/>
    
      <category term="习惯" scheme="http://yoursite.com/tags/%E4%B9%A0%E6%83%AF/"/>
    
  </entry>
  
  <entry>
    <title>组块</title>
    <link href="http://yoursite.com/2017/08/23/%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0/%E7%BB%84%E5%9D%97/"/>
    <id>http://yoursite.com/2017/08/23/如何学习/组块/</id>
    <published>2017-08-23T01:05:21.705Z</published>
    <updated>2017-08-23T01:05:21.721Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="组块"><a href="#组块" class="headerlink" title="组块"></a>组块</h2><h3 id="了解组块"><a href="#了解组块" class="headerlink" title="了解组块"></a>了解组块</h3><p>组块（Chunking）就根据意义将零碎的信息拼接起来而形成一个新的逻辑整体。这个新的逻辑整体可以让组块更易记忆，同时也可以让你更轻松的将组块整合到所学内容的大致框架中。</p>
<p>丛神经科学的角度来看，组块就是把简化的而抽象的的思想组块一起的复杂的神经活动。这些思想无论是概念，灵感还是缩写，都是大多数科学、文学和艺术的基础。很多优秀的语言学习项目都是通过结构性的重复和强记联系，即用专注模式学习语言，同时运动和母语国家人的自由交流即发散模式的方法，这能让你铭记基础的词汇和搭配，而且说得新语言也能像母语那样。</p>
<p>本质上说，组块就是让多个神经元共同运作的网络，只有这样才能平稳有效地进行思考和完成动作。专注的训练和重复可以建立强的记忆痕迹，从而帮助组块，专业的培训是一步一步的，这个过程中小的组块可以形成更大的组块，并且随着学习材料的理解越来越深入，所有的专业知识都是更有创造性的铺路石。</p>
<p>当你学习一个东西的时候，这个东西是个大的组块，然后你通过一点点的学习不断将学习的东西转为一个个小的组块，之后再将这些小组快组合起来形成一个大的组块，最后你就将这个学会了。最好的组块是那些根深蒂固的，你甚至不需要有意识地去将储存在脑中的模式连接起来，这也正是将复杂的想法、动作和反应组成一个单独的组块的意义所在。</p>
<p>学习数学和科学也是一样的，在刚开始你会看到一些例题和解决方法，那是因为在刚开始尝试解决问题是，你会有很强的认知负荷，而示范性的例子能在你起步的时候帮助理解，通过理解每个步骤的意思和步骤之间的联系，可能帮你发现问题的重点和隐含原理。思考步骤之间的联系非常重要，这样才能明白为什么在这种情况下要进行这个步骤。</p>
<h3 id="组块作用"><a href="#组块作用" class="headerlink" title="组块作用"></a>组块作用</h3><ul>
<li><p>组块能够让大脑工作得更有效率，一旦将某个想法、概念或动作组块后，你就不需要记住这个想法、概念或动作有关的全部细节，你只需要知道最主要的那个概念就行了，这也就是只需记住组块。</p>
</li>
<li><p>组块能更好地将新的和原有组块结合起来。为了增长知识和获得专业技能，人们会逐渐地增加头脑中组块的数量和有价值的信息。比如，象棋大师们能轻而易举地回忆出数以千计的不同棋谱；音乐家、语言学家和科学家，都能回忆出他们各自领域内类似的知识组块。无论你学什么科目，你的组块式心理图书馆越大，运用越熟练，你都将能够更轻易地解决问题或者找到解决方法。</p>
</li>
<li><p>组块可以帮助我们理解新概念。这是因为当你理解一个组块时，你会发现这一组块能以令人惊讶的方式与相似的组块联系起来。不仅在同一领域中如此，在截然不同的领域中也这样，这就是迁移 (transfer)。专注于你正在学习的单元，你会发现一旦你把第一个问题或概念放进心理图书馆，不论那是什么，第二个概念的进入就会容易一些。然后第三个概念也就更容易，这并不都那么简单，但会越来越容易。</p>
</li>
</ul>
<h3 id="建立组块"><a href="#建立组块" class="headerlink" title="建立组块"></a>建立组块</h3><ul>
<li><p>全神贯注。当其他事情占用有限的工作记忆时，这就会加大你建立新的神经并且与其它神经的连接的困难。</p>
</li>
<li><p>对组块的内容有基本的了解。只有理解了的知识才能与融入你学习的其他材料之中。</p>
</li>
<li><p>练习。通过练习，了解背景知识，即不但明白怎么使用这个知识，也明白在什么时候使用这个知识。某件事情，如果知识再看或者理解如何做也不代表能真正做到，只有在你自己实际操作和完全掌握情况相爱才能建立起神经模型。练习能够拓宽组块连接的神经网络，并且确保他们不仅仅是牢固的，而且能够通过不同的途径惊醒访问。背景认识意味着学会在特定的时候使用正确的方法。</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h2 id=&quot;组块&quot;&gt;&lt;a href=&quot;#组块&quot; class=&quot;headerli
    
    </summary>
    
      <category term="学习何如学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0%E4%BD%95%E5%A6%82%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="组块" scheme="http://yoursite.com/tags/%E7%BB%84%E5%9D%97/"/>
    
  </entry>
  
  <entry>
    <title>学习</title>
    <link href="http://yoursite.com/2017/08/23/%E5%A6%82%E4%BD%95%E5%AD%A6%E4%B9%A0/%E5%AD%A6%E4%B9%A0/"/>
    <id>http://yoursite.com/2017/08/23/如何学习/学习/</id>
    <published>2017-08-23T01:05:21.705Z</published>
    <updated>2017-08-23T01:05:21.705Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h1 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h1><h2 id="专注与发散思维模式"><a href="#专注与发散思维模式" class="headerlink" title="专注与发散思维模式"></a>专注与发散思维模式</h2><p>人们在学习的时候，有两种思维模式，专注思维模式和发散思维模式。然而，很多人只知道专注思维模式。如果能够很好的利用这两种思维模式，我们学习的效率会提高。</p>
<h3 id="专注思维模式"><a href="#专注思维模式" class="headerlink" title="专注思维模式"></a>专注思维模式</h3><p>专注思维模式（focus mold）就是你集中你所有的注意力专注于一个知识，或者一个问题上。比如，当你在认真听课的时候，当你在努力解一道数学难题的时候，当你在考试的时候，你都是在使用你的专注思维模式。</p>
<p>专注思维模式对我们的学习有着至关重要的作用，我们从小到大就被教导要集中注意力。确实，我们在学习一个知识的时候，应该全身关注，集中我们却大部分注意力在这个知识上，这样我们才把一个又一个的知识学会。如果一个人学习的时候，不能集中注意力，使用他的专注思维模式，那他面对较为困难的学习材料的时候，就很有可能学不会。</p>
<p>然而，仅仅使用专注思维模式去学习，有时候是不够的，或者说是效率相对低下的。如果我们能够交替使用专注思维模式和发散思维模式，我们的效率更高。</p>
<h3 id="发散思维模式"><a href="#发散思维模式" class="headerlink" title="发散思维模式"></a>发散思维模式</h3><p>发散思维模式（diffuse mold）是当你在做一些其他的时候的时候，你的大脑会自动的思考一些你之前努力去学习或者解决的东西。它是一种相对轻松的思考模式。当你在听音乐的时候，当你在坐着放松的时候，当你在散步的时候等你都在使用你的发散思维模式。</p>
<p>发散思维模式有助于整合我们学过的知识，加深对那些知识的记忆。当你的大脑进入发散思维模式的时候，大脑会从整体出发，对你所学过的知识进行再次处理，将一些重要的知识进行进一步加工，并且剔除那些不重要的知识。当然，重要不重要也只是相对的，而且大脑处理的不一定完全正确。</p>
<p>另外，发散思维模式产生让人惊喜的事。当你的大脑进入发散思维模式的时候，大脑不仅会加深你所学知识的记忆，而且还会自动思考你之前一直在思考的问题。有时候，一道数学难题在你苦苦思考了很久做出不来的时候，却在你听音乐的时候这道题的答案自然而然就出现在你的脑海里。而且，很多有创意的想法，都是人们在发散思维模式的时候想出来的。</p>
<h3 id="交替使用专注与发散思维模式"><a href="#交替使用专注与发散思维模式" class="headerlink" title="交替使用专注与发散思维模式"></a>交替使用专注与发散思维模式</h3><p>当你在学习一些新的东西的，尤其是一些比较难的东西的时候，你的大脑需要一种能够在专注思维模式和发散思维模式之前来回转换的能力，这能够帮助你更加高效的学习。当你使用专注思维模式的时候，你将知识一点点的理解，记忆。当你使用发散思维模式的时候，你将知识从整体的角度更好的整合加工。这样交替使用专注思维模式和发散思维模式能够让你学习的东西更加牢固。这就像锻炼的时候，你不可能只在一天拼命练习就能将肌肉练出来。要想练出肌肉，你就必须每天做一些训练，然后休息。就这样训练与休息交替进行，才能逐步锻炼出肌肉。类似的，要想锻炼你的神经，你也需要每天都都一些训练，并且给予适当的休息，这两个交替进行，逐步建立起支撑你思考的神经骨架。</p>
<p> 萨尔瓦多·达利(Salvador Dalí)是20世纪著名的超现实主义画家，他曾经使用过一种很有意思的方法来帮助他创造那些创意无限的超现实主义派画作。他会坐在椅子上放空自己的大脑并常常会漫无目的地思考一下之前的工作并且他会手拿一把钥匙在地面上方晃来晃去当他睡着进入梦乡的时候，钥匙会从手里摔到地上发出哒的一声，恰到好处地把他叫醒。这样他就能把脑海中那些在发散模式下得到的的联想和点子及时地收集起来，然后他会带着这些在发散模式下得到的新想法回到专注模式里去。</p>
<p>当然，这不仅对艺术家有帮助，对科学或者具有数学性的思考也有帮助。来看看世界上最伟大的发明家托马斯·爱迪生。 据传爱迪生会坐在椅子上放松，手上抓几个滚珠轴承这样放松自己的身体和意识，回想之前的工作。当爱迪生睡着的时候那些滚珠轴承就会掉到地上，发出哒的一声就和达利 (的钥匙) 一样。这样就会吵醒爱迪生， 然后他就可以带着发散模式下得到的点子回到专注模式当中。</p>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;h1 id=&quot;学习&quot;&gt;&lt;a href=&quot;#学习&quot; class=&quot;headerli
    
    </summary>
    
      <category term="学习何如学习" scheme="http://yoursite.com/categories/%E5%AD%A6%E4%B9%A0%E4%BD%95%E5%A6%82%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="专注思维" scheme="http://yoursite.com/tags/%E4%B8%93%E6%B3%A8%E6%80%9D%E7%BB%B4/"/>
    
      <category term="发散思维" scheme="http://yoursite.com/tags/%E5%8F%91%E6%95%A3%E6%80%9D%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/08/23/hello-world/"/>
    <id>http://yoursite.com/2017/08/23/hello-world/</id>
    <published>2017-08-23T01:05:21.705Z</published>
    <updated>2017-08-23T01:05:21.705Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css&quot;&gt;&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; 
    
    </summary>
    
    
  </entry>
  
</feed>
